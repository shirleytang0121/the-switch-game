{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Point = require('../point/Point'); //  The three medians (the lines drawn from the vertices to the bisectors of the opposite sides)\n//  meet in the centroid or center of mass (center of gravity).\n//  The centroid divides each median in a ratio of 2:1\n\n/**\r\n * Calculates the position of a Triangle's centroid, which is also its center of mass (center of gravity).\r\n *\r\n * The centroid is the point in a Triangle at which its three medians (the lines drawn from the vertices to the bisectors of the opposite sides) meet. It divides each one in a 2:1 ratio.\r\n *\r\n * @function Phaser.Geom.Triangle.Centroid\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to use.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to store the coordinates in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} The `out` object with modified `x` and `y` properties, or a new Point if none was provided.\r\n */\n\n\nvar Centroid = function Centroid(triangle, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  out.x = (triangle.x1 + triangle.x2 + triangle.x3) / 3;\n  out.y = (triangle.y1 + triangle.y2 + triangle.y3) / 3;\n  return out;\n};\n\nmodule.exports = Centroid;","map":null,"metadata":{},"sourceType":"script"}