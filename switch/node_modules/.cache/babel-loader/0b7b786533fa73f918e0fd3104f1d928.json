{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar RETRO_FONT_CONST = require('./const');\n\nvar Extend = require('../../utils/object/Extend');\n/**\r\n * @typedef {object} Phaser.GameObjects.RetroFont.Config\r\n * \r\n * @property {string} image - The key of the image containing the font.\r\n * @property {number} offset.x - If the font set doesn't start at the top left of the given image, specify the X coordinate offset here.\r\n * @property {number} offset.y - If the font set doesn't start at the top left of the given image, specify the Y coordinate offset here.\r\n * @property {number} width - The width of each character in the font set.\r\n * @property {number} height - The height of each character in the font set.\r\n * @property {string} chars - The characters used in the font set, in display order. You can use the TEXT_SET consts for common font set arrangements.\r\n * @property {number} charsPerRow - The number of characters per row in the font set. If not given charsPerRow will be the image width / characterWidth.\r\n * @property {number} spacing.x - If the characters in the font set have horizontal spacing between them set the required amount here.\r\n * @property {number} spacing.y - If the characters in the font set have vertical spacing between them set the required amount here.\r\n * @property {number} lineSpacing - The amount of vertical space to add to the line height of the font.\r\n*/\n\n/**\r\n * @namespace Phaser.GameObjects.RetroFont\r\n * @since 3.6.0\r\n */\n\n\nvar RetroFont = {\n  Parse: require('./ParseRetroFont')\n}; //   Merge in the consts\n\nRetroFont = Extend(false, RetroFont, RETRO_FONT_CONST);\nmodule.exports = RetroFont;","map":null,"metadata":{},"sourceType":"script"}