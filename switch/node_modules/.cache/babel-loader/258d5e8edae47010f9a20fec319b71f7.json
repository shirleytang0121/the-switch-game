{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Body = require('../lib/body/Body');\n/**\r\n * [description]\r\n *\r\n * @name Phaser.Physics.Matter.Components.Velocity\r\n * @since 3.0.0\r\n */\n\n\nvar Velocity = {\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Velocity#setAngularVelocity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setAngularVelocity: function setAngularVelocity(value) {\n    Body.setAngularVelocity(this.body, value);\n    return this;\n  },\n\n  /**\r\n   * Sets the horizontal velocity of the physics body.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Velocity#setVelocityX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal velocity value.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setVelocityX: function setVelocityX(x) {\n    this._tempVec2.set(x, this.body.velocity.y);\n\n    Body.setVelocity(this.body, this._tempVec2);\n    return this;\n  },\n\n  /**\r\n   * Sets vertical velocity of the physics body.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Velocity#setVelocityY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} y - The vertical velocity value.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setVelocityY: function setVelocityY(y) {\n    this._tempVec2.set(this.body.velocity.x, y);\n\n    Body.setVelocity(this.body, this._tempVec2);\n    return this;\n  },\n\n  /**\r\n   * Sets both the horizontal and vertical velocity of the physics body.\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Velocity#setVelocity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal velocity value.\r\n   * @param {number} [y=x] - The vertical velocity value, it can be either positive or negative. If not given, it will be the same as the `x` value.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setVelocity: function setVelocity(x, y) {\n    this._tempVec2.set(x, y);\n\n    Body.setVelocity(this.body, this._tempVec2);\n    return this;\n  }\n};\nmodule.exports = Velocity;","map":null,"metadata":{},"sourceType":"script"}