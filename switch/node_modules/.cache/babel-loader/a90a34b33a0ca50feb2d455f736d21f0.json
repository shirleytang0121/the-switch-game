{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Phaser from 'phaser';\nimport { Blank } from '../objects/Blank';\nimport { Player } from '../objects/Player';\nimport { Card } from '../objects/Card';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Amplify, { Auth } from 'aws-amplify';\nimport * as mutations from '../../../graphql/mutations';\nimport * as subscriptions from '../../../graphql/subscriptions';\nimport * as queries from '../../../graphql/queries';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport aws_config from '../../../aws-exports';\nimport gql from 'graphql-tag';\nvar client = new AWSAppSyncClient({\n  url: aws_config.aws_appsync_graphqlEndpoint,\n  region: aws_config.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.API_KEY,\n    apiKey: aws_config.aws_appsync_apiKey\n  }\n});\nexport var GameBoard =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(GameBoard, _Phaser$Scene);\n\n  function GameBoard() {\n    _classCallCheck(this, GameBoard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GameBoard).call(this, {\n      key: 'GameBoard'\n    }));\n  }\n\n  _createClass(GameBoard, [{\n    key: \"create\",\n    value: function create() {\n      this.gameBoard = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]; //display board\n\n      var boardbg = this.add.image(400, 80, 'boardbg');\n      boardbg.setOrigin(0, 0).setScale(2.8, 2.8);\n      var x_pos1 = 0;\n      var y_pos1 = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          this.blank = new Blank(this, 405 + x_pos1, 85 + y_pos1, 'blank').data.set('card_number', 53);\n          x_pos1 += 65;\n        }\n\n        y_pos1 += 65;\n        x_pos1 = 0;\n      }\n\n      var card_number = 0;\n      var nums = [],\n          ranNums = [];\n\n      for (var k = 0; k < 52; k++) {\n        nums.push(k);\n      }\n\n      var m = nums.length,\n          n = 0;\n\n      while (m--) {\n        n = Math.floor(Math.random() * (m + 1));\n        ranNums.push(nums[n]);\n        nums.splice(n, 1);\n      } //display board\n\n\n      var x_pos = 0;\n      var y_pos = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          var generatecard = ranNums[card_number];\n          this.card = new Card(this, 405 + x_pos, 85 + y_pos, 'cards', generatecard).setOrigin(0, 0).setInteractive().setDataEnabled();\n          this.card.data.set('card_number', card_number);\n          x_pos += 65;\n          card_number++;\n        }\n\n        y_pos += 65;\n        x_pos = 0;\n      }\n\n      var player1 = new Player(this, 405, 85, 'chess_red', 1).setOrigin(0, 0);\n      var player2 = new Player(this, 730, 85, 'chess_blue', 2).setOrigin(0, 0);\n      var player = [];\n      player.push(player1);\n      player.push(player2);\n      var gameState = 'gaming'; //need user name array\n\n      var userName = ['switch', 'noviah'];\n      var seat = 0;\n      this.clickedBox(player, seat, userName);\n    } //check if the login user is in his round\n\n  }, {\n    key: \"checkUserInfo\",\n    value: function checkUserInfo(name, x, y, player) {\n      var _this = this;\n\n      Auth.currentUserInfo().then(function (userInfo) {\n        var username = userInfo.username;\n\n        if (name == username) {\n          _this.updateCardData(3, x, y);\n\n          _this.decideMove(x, y, player);\n\n          _this.upDateScreen();\n        } else {\n          alert(\"invalid movemet\");\n        }\n      });\n    } //move card\n\n  }, {\n    key: \"decideMove\",\n    value: function decideMove(x, y, player) {\n      player.setX(x);\n      player.setY(y);\n    } //move the card to the side\n\n  }, {\n    key: \"handlePlayerCard\",\n    value: function handlePlayerCard(card, arrangepostion, seat, data) {\n      if (seat == 0 && data != 53) {\n        arrangepostion -= 10;\n        card.setX(10 + arrangepostion);\n        card.setY(70);\n        card.setScale(0.1, 0.1);\n      } else if (seat == 1 && data != 53) {\n        arrangepostion -= 10;\n        card.setX(900 + arrangepostion);\n        card.setY(70);\n        card.setScale(0.1, 0.1);\n      }\n    } //************************************************ */\n    //the thing you need\n    //*********************************************** */\n\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(player) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  var nameWeGot, result2;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return client.hydrated();\n\n                        case 2:\n                          nameWeGot = 'switch'; // const result1 = await client.query({\n                          // query: gql(queries.listQws),\n                          // fetchPolicy: 'cache-only',\n                          // });\n\n                          _context.next = 5;\n                          return client.query({\n                            query: gql(queries.getQw),\n                            variables: {\n                              username: nameWeGot\n                            },\n                            fetchPolicy: 'cache-first'\n                          });\n\n                        case 5:\n                          result2 = _context.sent;\n                          //\tconsole.log(result1.data.listQws.items);\n                          console.log('the result is ' + result2.data.getQw.y);\n\n                          _this2.decideMove(result2.data.getQw.x, result2.data.getQw.y, player);\n\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }))();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getData(_x) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"upDateScreen\",\n    value: function () {\n      var _upDateScreen = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var subscription;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          subscription = client.subscribe({\n                            query: gql(subscriptions.onCreateQw)\n                          }).subscribe({\n                            next: function next(data) {\n                              console.log(data.data.onCreateQw);\n                            },\n                            error: function error(_error) {\n                              console.warn(_error);\n                            }\n                          });\n\n                        case 1:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }))(); // Unsubscribe after 10 secs\n\n\n                setTimeout(function () {\n                  subscription.unsubscribe();\n                }, 10000);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function upDateScreen() {\n        return _upDateScreen.apply(this, arguments);\n      }\n\n      return upDateScreen;\n    }()\n  }, {\n    key: \"updateCardData\",\n    value: function () {\n      var _updateCardData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(card, x, y) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee5() {\n                  var cardV, xV, yV, getUser, name, thething, newThing;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          cardV = card;\n                          console.log(cardV);\n                          xV = x;\n                          console.log(\"x : \" + xV);\n                          yV = y;\n                          console.log(\"y : \" + yV);\n                          _context5.next = 8;\n                          return Auth.currentAuthenticatedUser();\n\n                        case 8:\n                          getUser = _context5.sent;\n                          name = getUser.username;\n                          console.log('your name : ' + name);\n                          thething = {\n                            username: name,\n                            whichCard: cardV,\n                            x: xV,\n                            y: yV\n                          };\n                          _context5.next = 14;\n                          return API.graphql(graphqlOperation(mutations.updateQw, {\n                            input: thething\n                          }));\n\n                        case 14:\n                          newThing = _context5.sent;\n\n                        case 15:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }))();\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function updateCardData(_x2, _x3, _x4) {\n        return _updateCardData.apply(this, arguments);\n      }\n\n      return updateCardData;\n    }() //click the card and make it move\n\n  }, {\n    key: \"clickedBox\",\n    value: function clickedBox(player, seat, userName) {\n      var _this3 = this;\n\n      var arrangepostion = 0;\n      this.input.on('gameobjectdown', function (pointer, gameObject) {\n        //when click\n        for (var i = 0; i < 36; i++) {\n          if (_this3.gameBoard[i] == i) {\n            if (gameObject.x == player[seat].x || gameObject.y == player[seat].y) {\n              //this.updateCardData(3,gameObject.x,gameObject.y)\n              _this3.checkUserInfo(userName[seat], gameObject.x, gameObject.y, player[seat]); //this.handlePlayerCard(gameObject,arrangepostion,seat,gameObject.data.get('card_number'))\n              //arrangepostion+=15\n\n\n              if (seat < 1) {\n                seat++;\n              } else {\n                seat--;\n              }\n\n              break;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(time, delta) {}\n  }]);\n\n  return GameBoard;\n}(Phaser.Scene);","map":{"version":3,"sources":["C:\\Users\\shirl\\Desktop\\the-switch-game-master\\the-switch-game-master\\switch\\src\\Pages\\phaser\\scenes\\GameBoard.js"],"names":["Phaser","Blank","Player","Card","API","graphqlOperation","Amplify","Auth","mutations","subscriptions","queries","ConsoleLogger","AWSAppSyncClient","AUTH_TYPE","aws_config","gql","client","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","API_KEY","apiKey","aws_appsync_apiKey","GameBoard","key","gameBoard","boardbg","add","image","setOrigin","setScale","x_pos1","y_pos1","i","j","blank","data","set","card_number","nums","ranNums","k","push","m","length","n","Math","floor","random","splice","x_pos","y_pos","generatecard","card","setInteractive","setDataEnabled","player1","player2","player","gameState","userName","seat","clickedBox","name","x","y","currentUserInfo","then","userInfo","username","updateCardData","decideMove","upDateScreen","alert","setX","setY","arrangepostion","hydrated","nameWeGot","query","getQw","variables","fetchPolicy","result2","console","log","subscription","subscribe","onCreateQw","next","error","warn","setTimeout","unsubscribe","cardV","xV","yV","currentAuthenticatedUser","getUser","thething","whichCard","graphql","updateQw","input","newThing","on","pointer","gameObject","checkUserInfo","time","delta","Scene"],"mappings":"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","sourcesContent":["import Phaser from 'phaser';\nimport {Blank} from '../objects/Blank';\nimport {Player} from '../objects/Player';\nimport {Card} from '../objects/Card';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Amplify, { Auth } from 'aws-amplify';\nimport * as mutations from '../../../graphql/mutations';\nimport * as subscriptions from '../../../graphql/subscriptions'\nimport * as queries from '../../../graphql/queries'\n\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport aws_config from '../../../aws-exports';\nimport gql from 'graphql-tag';\n\nconst client = new AWSAppSyncClient({\n  url: aws_config.aws_appsync_graphqlEndpoint,\n  region: aws_config.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.API_KEY,\n    apiKey: aws_config.aws_appsync_apiKey,\n  }\n});\n\nexport class GameBoard extends Phaser.Scene {\n\tconstructor() {\n\t\tsuper({\n\t\t\tkey: 'GameBoard',\n\t\t});\n\t\t\n\n\t}\n\t\n\n\n\tcreate() {\n\n\n\t\tthis.gameBoard = [0,1,2,3,4,5,6,7,8,9,10,\n\t\t\t11,12,13,14,15,16,17,18,19,20,21,22,\n\t\t\t23,24,25,26,27,28,29,30,31,32,33,34,35,36];\n\t\t\n        //display board\n\t\tlet boardbg = this.add.image(400, 80, 'boardbg');\n\t\tboardbg.setOrigin(0, 0).setScale(2.8,2.8);\n\t\tlet x_pos1=0;\n\t\tlet y_pos1=0;\n\t\tfor(var i=0;i<6;i++){\n\t\t\tfor(var j=0 ;j<6;j++){\n\t\t\t   this.blank=new Blank(this,405+x_pos1,85+y_pos1,'blank').data.set('card_number', 53);\n\t\t\t\tx_pos1+=65;\n\t\t\t }\n\t\t\t   y_pos1+=65;\n\t\t\t   x_pos1=0;\n\t\t   }\n\t\t   let card_number=0;\n\t\t   let nums=[],\n\t\t\t   ranNums = [];\n\t\t  for(var k=0;k<52;k++){\n\t\t   nums.push(k);\n\t\t\t}\n\t\t   let m = nums.length,\n\t\t\t   n = 0;\n\t   while (m--) {\n\t\t   n = Math.floor(Math.random() * (m+1));\n\t\t   ranNums.push(nums[n]);\n\t\t   nums.splice(n,1);\n\t   }\n\t   //display board\n\t\t\tlet x_pos=0;\n\t\t\tlet y_pos=0;  \n\t\t   for(var i=0;i<6;i++){\n\t\t\tfor(var j=0 ;j<6;j++){\n\t\t\t   var generatecard=ranNums[card_number]\n\t\t\t   this.card=new Card(this,405+x_pos,85+y_pos,'cards',generatecard).setOrigin(0, 0).setInteractive().setDataEnabled()\n\t\t\t   this.card.data.set('card_number', card_number);\n\t\t\t\tx_pos+=65;\n\t\t\t\tcard_number++;\n\t\t\t }\n\t\t\t   y_pos+=65;\n\t\t\t   x_pos=0;\n\t\t   }\n\t\t\t let player1=new Player(this,405,85,'chess_red',1).setOrigin(0,0)\n\t\t\t let player2=new Player(this,730,85,'chess_blue',2).setOrigin(0,0)\n\n\t\t\t let player=[]\n\t\t\t player.push(player1)\n\t\t\t player.push(player2)\n\t\t\t\t\n\t\t\t let gameState='gaming';\n\t\t//need user name array\n\t\tlet userName=['switch','noviah']\n\n\t\tlet seat=0;\n\t\t\t\n\t\t\n\t\tthis.clickedBox(player,seat,userName)\n\n\t\t   \n\t}\n\n\n\t//check if the login user is in his round\n\tcheckUserInfo(name,x,y,player) {\n    Auth.currentUserInfo().then((userInfo) => {\n\t\t\tconst { username } = userInfo;\n      if(name==username){\n\t\t\t\tthis.updateCardData(3,x,y)\n\t\t\t\tthis.decideMove(x,y,player)\n\t\t\t\tthis.upDateScreen()\n\t\t\t}else{\n\t\t\t\talert(\"invalid movemet\")\n\t\t\t}\n\t\t}\n\t\t)\n  }\n\t\t\n\n\n\t//move card\n\tdecideMove(x,y,player){\n\t\tplayer.setX(x)\n\t\tplayer.setY(y)\n\t}\n\n\t//move the card to the side\n\thandlePlayerCard(card,arrangepostion,seat,data){\n\t\tif(seat==0&&data!=53){\n\t\tarrangepostion-=10\n\t\tcard.setX(10+arrangepostion);\n\t\tcard.setY(70);\n\t\tcard.setScale(0.1,0.1)\n\t\t}else if(seat==1&&data!=53){\n\t\tarrangepostion-=10\n\t\tcard.setX(900+arrangepostion);\n\t\tcard.setY(70);\n\t\tcard.setScale(0.1,0.1)\n\t\t}\n\t}\n\n//************************************************ */\n//the thing you need\n//*********************************************** */\n\n\n\tasync getData (player){\n\t\t\n\t\t(async () => { \n\n\t\t\t//result1  show the list\n\t\t\t//result2  show only username = 'test5' \n\t\t\tawait client.hydrated();\n\t\t\tconst nameWeGot = 'switch';\n\t\t\t// const result1 = await client.query({\n\t\t\t// query: gql(queries.listQws),\n\t\t\t// fetchPolicy: 'cache-only',\n\t\t\t// });\n\t\t\tconst result2 = await client.query({\n\t\t\t\tquery: gql(queries.getQw),\n\t\t\t\tvariables: {\n\t\t\t\t\tusername: nameWeGot\n\t\t\t\t},\n\t\t\t\tfetchPolicy: 'cache-first',\n\t\t\t});\n\t\t//\tconsole.log(result1.data.listQws.items);\n\t\t\tconsole.log('the result is '+result2.data.getQw.y)\n\t\t\tthis.decideMove(result2.data.getQw.x,result2.data.getQw.y,player)\n       \n\t\t})();\t\t\n\n\t}\n\n\tasync upDateScreen(){\n\t\tlet subscription;\n\n    (async () => {\n  \t\tsubscription = client.subscribe({ query: gql(subscriptions.onCreateQw) }).subscribe({\n   \t\t next: data => {\n      \t\tconsole.log(data.data.onCreateQw);\n    \t},\n    \terror: error => {\n     \t console.warn(error);\n    \t\t}\n \t\t });\n        })();\n\n// Unsubscribe after 10 secs\n    setTimeout(() => {\n        subscription.unsubscribe();\n      }, 10000);\n      \t}\n\t\n\tasync updateCardData(card,x,y){\n\t\t(async()=>{\n\t\tconst cardV = card;\n\t\tconsole.log(cardV)\n\t\tconst xV =x;\n\t\tconsole.log(\"x : \"+xV)\n\t\tconst yV = y;\n\t\tconsole.log(\"y : \"+yV);\n\t\tconst getUser = await Auth.currentAuthenticatedUser();\n\t\t\t\t\t\t\tconst name = getUser.username;\n\t\t\t\t\t\t\tconsole.log('your name : ' +name);\n\t\tconst thething = {\n\t\t\t\t\tusername : name,\n\t\t\t\t\twhichCard : cardV,\n\t\t\t\t\t\t\tx : xV,\n\t\t\t\t\t\t\ty : yV\n\t\t\t\t\t\t};\n\t const newThing = await API.graphql(graphqlOperation(mutations.updateQw, {input: thething}));\n\t\t\t\t\t})();\n\t}\n\t\n\t\n\n\n\n\t//click the card and make it move\n\tclickedBox(player,seat,userName){\n\t\t\n\t\tvar arrangepostion=0;\n\t\tthis.input.on('gameobjectdown', (pointer, gameObject) => {//when click\n\t\t\tfor(var i=0;i<36;i++){\n\t\t\t\tif(this.gameBoard[i] == i ){\n\t\t\t\t\tif(gameObject.x==player[seat].x||gameObject.y==player[seat].y){\n\t\t\t\t\t\t//this.updateCardData(3,gameObject.x,gameObject.y)\n\t\t\t\t\t\tthis.checkUserInfo(userName[seat],gameObject.x,gameObject.y,player[seat])\n\n\n\t\t\t\t\t\t//this.handlePlayerCard(gameObject,arrangepostion,seat,gameObject.data.get('card_number'))\n\t\t\t\t\t\t//arrangepostion+=15\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(seat<1){\n\t\t\t\t\t\t\tseat++\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tseat--\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\n\t\t\t\t\n\t\t\t}\t\n\t\n\t}\n\n\t\t\t\n\t});\n\n}\n\t\n\tupdate(time, delta) {\n\t\t\n\t\t\n\t}\n}"]},"metadata":{},"sourceType":"module"}