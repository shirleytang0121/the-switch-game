{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Clone = require('./Clone');\n/**\r\n * Creates a new Object using all values from obj1.\r\n * \r\n * Then scans obj2. If a property is found in obj2 that *also* exists in obj1, the value from obj2 is used, otherwise the property is skipped.\r\n *\r\n * @function Phaser.Utils.Objects.MergeRight\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj1 - The first object to merge.\r\n * @param {object} obj2 - The second object to merge. Keys from this object which also exist in `obj1` will be copied to `obj1`.\r\n *\r\n * @return {object} The merged object. `obj1` and `obj2` are not modified.\r\n */\n\n\nvar MergeRight = function MergeRight(obj1, obj2) {\n  var clone = Clone(obj1);\n\n  for (var key in obj2) {\n    if (clone.hasOwnProperty(key)) {\n      clone[key] = obj2[key];\n    }\n  }\n\n  return clone;\n};\n\nmodule.exports = MergeRight;","map":null,"metadata":{},"sourceType":"script"}