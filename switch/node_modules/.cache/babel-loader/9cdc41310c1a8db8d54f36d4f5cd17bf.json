{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * The Impact Bounce component.\r\n * Should be applied as a mixin.\r\n *\r\n * @name Phaser.Physics.Impact.Components.Bounce\r\n * @since 3.0.0\r\n */\nvar Bounce = {\n  /**\r\n   * Sets the impact physics bounce, or restitution, value.\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Bounce#setBounce\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - A value between 0 (no rebound) and 1 (full rebound)\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setBounce: function setBounce(value) {\n    this.body.bounciness = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the minimum velocity the body is allowed to be moving to be considered for rebound.\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Bounce#setMinBounceVelocity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The minimum allowed velocity.\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setMinBounceVelocity: function setMinBounceVelocity(value) {\n    this.body.minBounceVelocity = value;\n    return this;\n  },\n\n  /**\r\n   * The bounce, or restitution, value of this body.\r\n   * A value between 0 (no rebound) and 1 (full rebound)\r\n   *\r\n   * @name Phaser.Physics.Impact.Components.Bounce#bounce\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bounce: {\n    get: function get() {\n      return this.body.bounciness;\n    },\n    set: function set(value) {\n      this.body.bounciness = value;\n    }\n  }\n};\nmodule.exports = Bounce;","map":null,"metadata":{},"sourceType":"script"}