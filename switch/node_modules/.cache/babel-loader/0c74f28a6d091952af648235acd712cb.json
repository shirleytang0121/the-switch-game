{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n//  bitmask flag for GameObject.renderMask\nvar _FLAG = 8; // 1000\n\n/**\r\n * Provides methods used for getting and setting the texture of a Game Object.\r\n *\r\n * @name Phaser.GameObjects.Components.Texture\r\n * @since 3.0.0\r\n */\n\nvar Texture = {\n  /**\r\n   * The Texture this Game Object is using to render with.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Texture#texture\r\n   * @type {Phaser.Textures.Texture|Phaser.Textures.CanvasTexture}\r\n   * @since 3.0.0\r\n   */\n  texture: null,\n\n  /**\r\n   * The Texture Frame this Game Object is using to render with.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Texture#frame\r\n   * @type {Phaser.Textures.Frame}\r\n   * @since 3.0.0\r\n   */\n  frame: null,\n\n  /**\r\n   * Internal flag. Not to be set by this Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Texture#isCropped\r\n   * @type {boolean}\r\n   * @private\r\n   * @since 3.11.0\r\n   */\n  isCropped: false,\n\n  /**\r\n   * Sets the texture and frame this Game Object will use to render with.\r\n   *\r\n   * Textures are referenced by their string-based keys, as stored in the Texture Manager.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Texture#setTexture\r\n   * @since 3.0.0\r\n   *\r\n   * @param {string} key - The key of the texture to be used, as stored in the Texture Manager.\r\n   * @param {(string|integer)} [frame] - The name or index of the frame within the Texture.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setTexture: function setTexture(key, frame) {\n    this.texture = this.scene.sys.textures.get(key);\n    return this.setFrame(frame);\n  },\n\n  /**\r\n   * Sets the frame this Game Object will use to render with.\r\n   *\r\n   * The Frame has to belong to the current Texture being used.\r\n   *\r\n   * It can be either a string or an index.\r\n   *\r\n   * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n   * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Texture#setFrame\r\n   * @since 3.0.0\r\n   *\r\n   * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n   * @param {boolean} [updateSize=true] - Should this call adjust the size of the Game Object?\r\n   * @param {boolean} [updateOrigin=true] - Should this call adjust the origin of the Game Object?\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setFrame: function setFrame(frame, updateSize, updateOrigin) {\n    if (updateSize === undefined) {\n      updateSize = true;\n    }\n\n    if (updateOrigin === undefined) {\n      updateOrigin = true;\n    }\n\n    this.frame = this.texture.get(frame);\n\n    if (!this.frame.cutWidth || !this.frame.cutHeight) {\n      this.renderFlags &= ~_FLAG;\n    } else {\n      this.renderFlags |= _FLAG;\n    }\n\n    if (this._sizeComponent && updateSize) {\n      this.setSizeToFrame();\n    }\n\n    if (this._originComponent && updateOrigin) {\n      if (this.frame.customPivot) {\n        this.setOrigin(this.frame.pivotX, this.frame.pivotY);\n      } else {\n        this.updateDisplayOrigin();\n      }\n    }\n\n    return this;\n  }\n};\nmodule.exports = Texture;","map":null,"metadata":{},"sourceType":"script"}