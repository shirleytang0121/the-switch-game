{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Formats = require('../Formats');\n\nvar LayerData = require('../mapdata/LayerData');\n\nvar MapData = require('../mapdata/MapData');\n\nvar Tile = require('../Tile');\n/**\r\n * Parses a 2D array of tile indexes into a new MapData object with a single layer.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Parse2DArray\r\n * @since 3.0.0\r\n *\r\n * @param {string} name - The name of the tilemap, used to set the name on the MapData.\r\n * @param {integer[][]} data - 2D array, CSV string or Tiled JSON object.\r\n * @param {integer} tileWidth - The width of a tile in pixels.\r\n * @param {integer} tileHeight - The height of a tile in pixels.\r\n * @param {boolean} insertNull - Controls how empty tiles, tiles with an index of -1, in the map\r\n * data are handled. If `true`, empty locations will get a value of `null`. If `false`, empty\r\n * location will get a Tile object with an index of -1. If you've a large sparsely populated map and\r\n * the tile data doesn't need to change then setting this value to `true` will help with memory\r\n * consumption. However if your map is small or you need to update the tiles dynamically, then leave\r\n * the default value set.\r\n *\r\n * @return {Phaser.Tilemaps.MapData} [description]\r\n */\n\n\nvar Parse2DArray = function Parse2DArray(name, data, tileWidth, tileHeight, insertNull) {\n  var layerData = new LayerData({\n    tileWidth: tileWidth,\n    tileHeight: tileHeight\n  });\n  var mapData = new MapData({\n    name: name,\n    tileWidth: tileWidth,\n    tileHeight: tileHeight,\n    format: Formats.ARRAY_2D,\n    layers: [layerData]\n  });\n  var tiles = [];\n  var height = data.length;\n  var width = 0;\n\n  for (var y = 0; y < data.length; y++) {\n    tiles[y] = [];\n    var row = data[y];\n\n    for (var x = 0; x < row.length; x++) {\n      var tileIndex = parseInt(row[x], 10);\n\n      if (isNaN(tileIndex) || tileIndex === -1) {\n        tiles[y][x] = insertNull ? null : new Tile(layerData, -1, x, y, tileWidth, tileHeight);\n      } else {\n        tiles[y][x] = new Tile(layerData, tileIndex, x, y, tileWidth, tileHeight);\n      }\n    }\n\n    if (width === 0) {\n      width = row.length;\n    }\n  }\n\n  mapData.width = layerData.width = width;\n  mapData.height = layerData.height = height;\n  mapData.widthInPixels = layerData.widthInPixels = width * tileWidth;\n  mapData.heightInPixels = layerData.heightInPixels = height * tileHeight;\n  layerData.data = tiles;\n  return mapData;\n};\n\nmodule.exports = Parse2DArray;","map":null,"metadata":{},"sourceType":"script"}