{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Determines the full screen support of the browser running this Phaser Game instance.\r\n * These values are read-only and populated during the boot sequence of the game.\r\n * They are then referenced by internal game systems and are available for you to access\r\n * via `this.sys.game.device.fullscreen` from within any Scene.\r\n * \r\n * @typedef {object} Phaser.Device.Fullscreen\r\n * @since 3.0.0\r\n * \r\n * @property {boolean} available - Does the browser support the Full Screen API?\r\n * @property {boolean} keyboard - Does the browser support access to the Keyboard during Full Screen mode?\r\n * @property {string} cancel - If the browser supports the Full Screen API this holds the call you need to use to cancel it.\r\n * @property {string} request - If the browser supports the Full Screen API this holds the call you need to use to activate it.\r\n */\nvar Fullscreen = {\n  available: false,\n  cancel: '',\n  keyboard: false,\n  request: ''\n};\n/**\r\n* Checks for support of the Full Screen API.\r\n*/\n\nfunction init() {\n  var i;\n  var suffix1 = 'Fullscreen';\n  var suffix2 = 'FullScreen';\n  var fs = ['request' + suffix1, 'request' + suffix2, 'webkitRequest' + suffix1, 'webkitRequest' + suffix2, 'msRequest' + suffix1, 'msRequest' + suffix2, 'mozRequest' + suffix2, 'mozRequest' + suffix1];\n\n  for (i = 0; i < fs.length; i++) {\n    if (document.documentElement[fs[i]]) {\n      Fullscreen.available = true;\n      Fullscreen.request = fs[i];\n      break;\n    }\n  }\n\n  var cfs = ['cancel' + suffix2, 'exit' + suffix1, 'webkitCancel' + suffix2, 'webkitExit' + suffix1, 'msCancel' + suffix2, 'msExit' + suffix1, 'mozCancel' + suffix2, 'mozExit' + suffix1];\n\n  if (Fullscreen.available) {\n    for (i = 0; i < cfs.length; i++) {\n      if (document[cfs[i]]) {\n        Fullscreen.cancel = cfs[i];\n        break;\n      }\n    }\n  } //  Keyboard Input?\n  //  Safari 5.1 says it supports fullscreen keyboard, but is lying.\n\n\n  if (window['Element'] && Element['ALLOW_KEYBOARD_INPUT'] && !/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n    Fullscreen.keyboard = true;\n  }\n\n  Object.defineProperty(Fullscreen, 'active', {\n    get: function get() {\n      return !!(document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement);\n    }\n  });\n  return Fullscreen;\n}\n\nmodule.exports = init();","map":null,"metadata":{},"sourceType":"script"}