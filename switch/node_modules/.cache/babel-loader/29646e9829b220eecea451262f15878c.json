{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Class = require('../utils/Class');\n\nvar PluginCache = require('../plugins/PluginCache');\n\nvar SceneEvents = require('../scene/events');\n/**\r\n * @classdesc\r\n * The Game Object Creator is a Scene plugin that allows you to quickly create many common\r\n * types of Game Objects and return them. Unlike the Game Object Factory, they are not automatically\r\n * added to the Scene.\r\n *\r\n * Game Objects directly register themselves with the Creator and inject their own creation\r\n * methods into the class.\r\n *\r\n * @class GameObjectCreator\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object Factory belongs.\r\n */\n\n\nvar GameObjectCreator = new Class({\n  initialize: function GameObjectCreator(scene) {\n    /**\r\n     * The Scene to which this Game Object Creator belongs.\r\n     *\r\n     * @name Phaser.GameObjects.GameObjectCreator#scene\r\n     * @type {Phaser.Scene}\r\n     * @protected\r\n     * @since 3.0.0\r\n     */\n    this.scene = scene;\n    /**\r\n     * A reference to the Scene.Systems.\r\n     *\r\n     * @name Phaser.GameObjects.GameObjectCreator#systems\r\n     * @type {Phaser.Scenes.Systems}\r\n     * @protected\r\n     * @since 3.0.0\r\n     */\n\n    this.systems = scene.sys;\n    /**\r\n     * A reference to the Scene Display List.\r\n     *\r\n     * @name Phaser.GameObjects.GameObjectCreator#displayList\r\n     * @type {Phaser.GameObjects.DisplayList}\r\n     * @protected\r\n     * @since 3.0.0\r\n     */\n\n    this.displayList;\n    /**\r\n     * A reference to the Scene Update List.\r\n     *\r\n     * @name Phaser.GameObjects.GameObjectCreator#updateList;\r\n     * @type {Phaser.GameObjects.UpdateList}\r\n     * @protected\r\n     * @since 3.0.0\r\n     */\n\n    this.updateList;\n    scene.sys.events.once(SceneEvents.BOOT, this.boot, this);\n    scene.sys.events.on(SceneEvents.START, this.start, this);\n  },\n\n  /**\r\n   * This method is called automatically, only once, when the Scene is first created.\r\n   * Do not invoke it directly.\r\n   *\r\n   * @method Phaser.GameObjects.GameObjectCreator#boot\r\n   * @private\r\n   * @since 3.5.1\r\n   */\n  boot: function boot() {\n    this.displayList = this.systems.displayList;\n    this.updateList = this.systems.updateList;\n    this.systems.events.once(SceneEvents.DESTROY, this.destroy, this);\n  },\n\n  /**\r\n   * This method is called automatically by the Scene when it is starting up.\r\n   * It is responsible for creating local systems, properties and listening for Scene events.\r\n   * Do not invoke it directly.\r\n   *\r\n   * @method Phaser.GameObjects.GameObjectCreator#start\r\n   * @private\r\n   * @since 3.5.0\r\n   */\n  start: function start() {\n    this.systems.events.once(SceneEvents.SHUTDOWN, this.shutdown, this);\n  },\n\n  /**\r\n   * The Scene that owns this plugin is shutting down.\r\n   * We need to kill and reset all internal properties as well as stop listening to Scene events.\r\n   *\r\n   * @method Phaser.GameObjects.GameObjectCreator#shutdown\r\n   * @private\r\n   * @since 3.0.0\r\n   */\n  shutdown: function shutdown() {\n    this.systems.events.off(SceneEvents.SHUTDOWN, this.shutdown, this);\n  },\n\n  /**\r\n   * The Scene that owns this plugin is being destroyed.\r\n   * We need to shutdown and then kill off all external references.\r\n   *\r\n   * @method Phaser.GameObjects.GameObjectCreator#destroy\r\n   * @private\r\n   * @since 3.0.0\r\n   */\n  destroy: function destroy() {\n    this.shutdown();\n    this.scene.sys.events.off(SceneEvents.START, this.start, this);\n    this.scene = null;\n    this.systems = null;\n    this.displayList = null;\n    this.updateList = null;\n  }\n}); //  Static method called directly by the Game Object creator functions\n\nGameObjectCreator.register = function (factoryType, factoryFunction) {\n  if (!GameObjectCreator.prototype.hasOwnProperty(factoryType)) {\n    GameObjectCreator.prototype[factoryType] = factoryFunction;\n  }\n};\n\nPluginCache.register('GameObjectCreator', GameObjectCreator, 'make');\nmodule.exports = GameObjectCreator;","map":null,"metadata":{},"sourceType":"script"}