{"ast":null,"code":"/**\r\n * Takes in a buffer of event messages and splits them into individual messages.\r\n * @param {Buffer} buffer\r\n * @api private\r\n */\nfunction eventMessageChunker(buffer) {\n  /** @type Buffer[] */\n  var messages = [];\n  var offset = 0;\n\n  while (offset < buffer.length) {\n    var totalLength = buffer.readInt32BE(offset); // create new buffer for individual message (shares memory with original)\n\n    var message = buffer.slice(offset, totalLength + offset); // increment offset to it starts at the next message\n\n    offset += totalLength;\n    messages.push(message);\n  }\n\n  return messages;\n}\n/**\r\n * @api private\r\n */\n\n\nmodule.exports = {\n  eventMessageChunker: eventMessageChunker\n};","map":null,"metadata":{},"sourceType":"script"}