{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Searches the entire map layer for the first tile matching the given index, then returns that Tile\r\n * object. If no match is found, it returns null. The search starts from the top-left tile and\r\n * continues horizontally until it hits the end of the row, then it drops down to the next column.\r\n * If the reverse boolean is true, it scans starting from the bottom-right corner traveling up to\r\n * the top-left.\r\n *\r\n * @function Phaser.Tilemaps.Components.FindByIndex\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} index - The tile index value to search for.\r\n * @param {integer} [skip=0] - The number of times to skip a matching tile before returning.\r\n * @param {boolean} [reverse=false] - If true it will scan the layer in reverse, starting at the\r\n * bottom-right. Otherwise it scans from the top-left.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n *\r\n * @return {?Phaser.Tilemaps.Tile} The first (or n skipped) tile with the matching index.\r\n */\nvar FindByIndex = function FindByIndex(findIndex, skip, reverse, layer) {\n  if (skip === undefined) {\n    skip = 0;\n  }\n\n  if (reverse === undefined) {\n    reverse = false;\n  }\n\n  var count = 0;\n  var tx;\n  var ty;\n  var tile;\n\n  if (reverse) {\n    for (ty = layer.height - 1; ty >= 0; ty--) {\n      for (tx = layer.width - 1; tx >= 0; tx--) {\n        tile = layer.data[ty][tx];\n\n        if (tile && tile.index === findIndex) {\n          if (count === skip) {\n            return tile;\n          } else {\n            count += 1;\n          }\n        }\n      }\n    }\n  } else {\n    for (ty = 0; ty < layer.height; ty++) {\n      for (tx = 0; tx < layer.width; tx++) {\n        tile = layer.data[ty][tx];\n\n        if (tile && tile.index === findIndex) {\n          if (count === skip) {\n            return tile;\n          } else {\n            count += 1;\n          }\n        }\n      }\n    }\n  }\n\n  return null;\n};\n\nmodule.exports = FindByIndex;","map":null,"metadata":{},"sourceType":"script"}