{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Internally used method to keep track of the tile indexes that collide within a layer. This\r\n * updates LayerData.collideIndexes to either contain or not contain the given `tileIndex`.\r\n *\r\n * @function Phaser.Tilemaps.Components.SetLayerCollisionIndex\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileIndex - The tile index to set the collision boolean for.\r\n * @param {boolean} [collides=true] - Should the tile index collide or not?\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\nvar SetLayerCollisionIndex = function SetLayerCollisionIndex(tileIndex, collides, layer) {\n  var loc = layer.collideIndexes.indexOf(tileIndex);\n\n  if (collides && loc === -1) {\n    layer.collideIndexes.push(tileIndex);\n  } else if (!collides && loc !== -1) {\n    layer.collideIndexes.splice(loc, 1);\n  }\n};\n\nmodule.exports = SetLayerCollisionIndex;","map":null,"metadata":{},"sourceType":"script"}