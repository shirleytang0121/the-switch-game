{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetTileAt = require('./GetTileAt');\n/**\r\n * Calculates interesting faces at the given tile coordinates of the specified layer. Interesting\r\n * faces are used internally for optimizing collisions against tiles. This method is mostly used\r\n * internally to optimize recalculating faces when only one tile has been changed.\r\n *\r\n * @function Phaser.Tilemaps.Components.CalculateFacesAt\r\n * @private\r\n * @since 3.0.0\r\n * \r\n * @param {integer} tileX - The x coordinate.\r\n * @param {integer} tileY - The y coordinate.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\n\n\nvar CalculateFacesAt = function CalculateFacesAt(tileX, tileY, layer) {\n  var tile = GetTileAt(tileX, tileY, true, layer);\n  var above = GetTileAt(tileX, tileY - 1, true, layer);\n  var below = GetTileAt(tileX, tileY + 1, true, layer);\n  var left = GetTileAt(tileX - 1, tileY, true, layer);\n  var right = GetTileAt(tileX + 1, tileY, true, layer);\n  var tileCollides = tile && tile.collides; // Assume the changed tile has all interesting edges\n\n  if (tileCollides) {\n    tile.faceTop = true;\n    tile.faceBottom = true;\n    tile.faceLeft = true;\n    tile.faceRight = true;\n  } // Reset edges that are shared between tile and its neighbors\n\n\n  if (above && above.collides) {\n    if (tileCollides) {\n      tile.faceTop = false;\n    }\n\n    above.faceBottom = !tileCollides;\n  }\n\n  if (below && below.collides) {\n    if (tileCollides) {\n      tile.faceBottom = false;\n    }\n\n    below.faceTop = !tileCollides;\n  }\n\n  if (left && left.collides) {\n    if (tileCollides) {\n      tile.faceLeft = false;\n    }\n\n    left.faceRight = !tileCollides;\n  }\n\n  if (right && right.collides) {\n    if (tileCollides) {\n      tile.faceRight = false;\n    }\n\n    right.faceLeft = !tileCollides;\n  }\n\n  if (tile && !tile.collides) {\n    tile.resetFaces();\n  }\n\n  return tile;\n};\n\nmodule.exports = CalculateFacesAt;","map":null,"metadata":{},"sourceType":"script"}