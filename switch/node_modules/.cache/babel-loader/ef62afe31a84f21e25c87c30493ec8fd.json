{"ast":null,"code":"/**\r\n * The main AWS namespace\r\n */\nvar AWS = {\n  util: require('./util')\n};\n/**\r\n * @api private\r\n * @!macro [new] nobrowser\r\n *   @note This feature is not supported in the browser environment of the SDK.\r\n */\n\nvar _hidden = {};\n\n_hidden.toString(); // hack to parse macro\n\n/**\r\n * @api private\r\n */\n\n\nmodule.exports = AWS;\nAWS.util.update(AWS, {\n  /**\r\n   * @constant\r\n   */\n  VERSION: '2.329.0',\n\n  /**\r\n   * @api private\r\n   */\n  Signers: {},\n\n  /**\r\n   * @api private\r\n   */\n  Protocol: {\n    Json: require('./protocol/json'),\n    Query: require('./protocol/query'),\n    Rest: require('./protocol/rest'),\n    RestJson: require('./protocol/rest_json'),\n    RestXml: require('./protocol/rest_xml')\n  },\n\n  /**\r\n   * @api private\r\n   */\n  XML: {\n    Builder: require('./xml/builder'),\n    Parser: null // conditionally set based on environment\n\n  },\n\n  /**\r\n   * @api private\r\n   */\n  JSON: {\n    Builder: require('./json/builder'),\n    Parser: require('./json/parser')\n  },\n\n  /**\r\n   * @api private\r\n   */\n  Model: {\n    Api: require('./model/api'),\n    Operation: require('./model/operation'),\n    Shape: require('./model/shape'),\n    Paginator: require('./model/paginator'),\n    ResourceWaiter: require('./model/resource_waiter')\n  },\n\n  /**\r\n   * @api private\r\n   */\n  apiLoader: require('./api_loader')\n});\n\nrequire('./sequential_executor');\n\nrequire('./service');\n\nrequire('./config');\n\nrequire('./http');\n\nrequire('./event_listeners');\n\nrequire('./request');\n\nrequire('./response');\n\nrequire('./resource_waiter');\n\nrequire('./signers/request_signer');\n\nrequire('./param_validator');\n/**\r\n * @readonly\r\n * @return [AWS.SequentialExecutor] a collection of global event listeners that\r\n *   are attached to every sent request.\r\n * @see AWS.Request AWS.Request for a list of events to listen for\r\n * @example Logging the time taken to send a request\r\n *   AWS.events.on('send', function startSend(resp) {\r\n *     resp.startTime = new Date().getTime();\r\n *   }).on('complete', function calculateTime(resp) {\r\n *     var time = (new Date().getTime() - resp.startTime) / 1000;\r\n *     console.log('Request took ' + time + ' seconds');\r\n *   });\r\n *\r\n *   new AWS.S3().listBuckets(); // prints 'Request took 0.285 seconds'\r\n */\n\n\nAWS.events = new AWS.SequentialExecutor();","map":null,"metadata":{},"sourceType":"script"}