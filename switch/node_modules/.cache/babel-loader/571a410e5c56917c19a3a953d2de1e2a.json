{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * @typedef {object} XHRSettingsObject\r\n *\r\n * @property {XMLHttpRequestResponseType} responseType - The response type of the XHR request, i.e. `blob`, `text`, etc.\r\n * @property {boolean} [async=true] - Should the XHR request use async or not?\r\n * @property {string} [user=''] - Optional username for the XHR request.\r\n * @property {string} [password=''] - Optional password for the XHR request.\r\n * @property {integer} [timeout=0] - Optional XHR timeout value.\r\n * @property {(string|undefined)} [header] - This value is used to populate the XHR `setRequestHeader` and is undefined by default.\r\n * @property {(string|undefined)} [headerValue] - This value is used to populate the XHR `setRequestHeader` and is undefined by default.\r\n * @property {(string|undefined)} [requestedWith] - This value is used to populate the XHR `setRequestHeader` and is undefined by default.\r\n * @property {(string|undefined)} [overrideMimeType] - Provide a custom mime-type to use instead of the default.\r\n */\n\n/**\r\n * Creates an XHRSettings Object with default values.\r\n *\r\n * @function Phaser.Loader.XHRSettings\r\n * @since 3.0.0\r\n *\r\n * @param {XMLHttpRequestResponseType} [responseType=''] - The responseType, such as 'text'.\r\n * @param {boolean} [async=true] - Should the XHR request use async or not?\r\n * @param {string} [user=''] - Optional username for the XHR request.\r\n * @param {string} [password=''] - Optional password for the XHR request.\r\n * @param {integer} [timeout=0] - Optional XHR timeout value.\r\n *\r\n * @return {XHRSettingsObject} The XHRSettings object as used by the Loader.\r\n */\nvar XHRSettings = function XHRSettings(responseType, async, user, password, timeout) {\n  if (responseType === undefined) {\n    responseType = '';\n  }\n\n  if (async === undefined) {\n    async = true;\n  }\n\n  if (user === undefined) {\n    user = '';\n  }\n\n  if (password === undefined) {\n    password = '';\n  }\n\n  if (timeout === undefined) {\n    timeout = 0;\n  } // Before sending a request, set the xhr.responseType to \"text\",\n  // \"arraybuffer\", \"blob\", or \"document\", depending on your data needs.\n  // Note, setting xhr.responseType = '' (or omitting) will default the response to \"text\".\n\n\n  return {\n    //  Ignored by the Loader, only used by File.\n    responseType: responseType,\n    async: async,\n    //  credentials\n    user: user,\n    password: password,\n    //  timeout in ms (0 = no timeout)\n    timeout: timeout,\n    //  setRequestHeader\n    header: undefined,\n    headerValue: undefined,\n    requestedWith: false,\n    //  overrideMimeType\n    overrideMimeType: undefined\n  };\n};\n\nmodule.exports = XHRSettings;","map":null,"metadata":{},"sourceType":"script"}