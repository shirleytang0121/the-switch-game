{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar MarchingAnts = require('../geom/rectangle/MarchingAnts');\n\nvar RotateLeft = require('../utils/array/RotateLeft');\n\nvar RotateRight = require('../utils/array/RotateRight');\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the perimeter of a Rectangle.\r\n * \r\n * Placement starts from the top-left of the rectangle, and proceeds in a clockwise direction.\r\n * If the `shift` parameter is given you can offset where placement begins.\r\n *\r\n * @function Phaser.Actions.PlaceOnRectangle\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Rectangle} rect - The Rectangle to position the Game Objects on.\r\n * @param {integer} [shift=1] - An optional positional offset.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\n\n\nvar PlaceOnRectangle = function PlaceOnRectangle(items, rect, shift) {\n  if (shift === undefined) {\n    shift = 0;\n  }\n\n  var points = MarchingAnts(rect, false, items.length);\n\n  if (shift > 0) {\n    RotateLeft(points, shift);\n  } else if (shift < 0) {\n    RotateRight(points, Math.abs(shift));\n  }\n\n  for (var i = 0; i < items.length; i++) {\n    items[i].x = points[i].x;\n    items[i].y = points[i].y;\n  }\n\n  return items;\n};\n\nmodule.exports = PlaceOnRectangle;","map":null,"metadata":{},"sourceType":"script"}