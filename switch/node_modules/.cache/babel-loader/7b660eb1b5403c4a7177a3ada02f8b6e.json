{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @author       samme <samme.npm@gmail.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Wrap = require('../math/Wrap');\n/**\r\n * Wrap each item's coordinates within a rectangle's area.\r\n *\r\n * @function Phaser.Actions.WrapInRectangle\r\n * @since 3.0.0\r\n * @see Phaser.Math.Wrap\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Rectangle} rect - The rectangle.\r\n * @param {number} [padding=0] - An amount added to each side of the rectangle during the operation.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\n\n\nvar WrapInRectangle = function WrapInRectangle(items, rect, padding) {\n  if (padding === undefined) {\n    padding = 0;\n  }\n\n  for (var i = 0; i < items.length; i++) {\n    var item = items[i];\n    item.x = Wrap(item.x, rect.left - padding, rect.right + padding);\n    item.y = Wrap(item.y, rect.top - padding, rect.bottom + padding);\n  }\n\n  return items;\n};\n\nmodule.exports = WrapInRectangle;","map":null,"metadata":{},"sourceType":"script"}