{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Formats = require('../Formats');\n\nvar Parse2DArray = require('./Parse2DArray');\n\nvar ParseCSV = require('./ParseCSV');\n\nvar ParseJSONTiled = require('./tiled/ParseJSONTiled');\n\nvar ParseWeltmeister = require('./impact/ParseWeltmeister');\n/**\r\n * Parses raw data of a given Tilemap format into a new MapData object. If no recognized data format\r\n * is found, returns `null`. When loading from CSV or a 2D array, you should specify the tileWidth &\r\n * tileHeight. When parsing from a map from Tiled, the tileWidth & tileHeight will be pulled from\r\n * the map data.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Parse\r\n * @since 3.0.0\r\n *\r\n * @param {string} name - The name of the tilemap, used to set the name on the MapData.\r\n * @param {integer} mapFormat - See ../Formats.js.\r\n * @param {(integer[][]|string|object)} data - 2D array, CSV string or Tiled JSON object.\r\n * @param {integer} tileWidth - The width of a tile in pixels. Required for 2D array and CSV, but\r\n * ignored for Tiled JSON.\r\n * @param {integer} tileHeight - The height of a tile in pixels. Required for 2D array and CSV, but\r\n * ignored for Tiled JSON.\r\n * @param {boolean} insertNull - Controls how empty tiles, tiles with an index of -1, in the map\r\n * data are handled. If `true`, empty locations will get a value of `null`. If `false`, empty\r\n * location will get a Tile object with an index of -1. If you've a large sparsely populated map and\r\n * the tile data doesn't need to change then setting this value to `true` will help with memory\r\n * consumption. However if your map is small or you need to update the tiles dynamically, then leave\r\n * the default value set.\r\n *\r\n * @return {Phaser.Tilemaps.MapData} The created `MapData` object.\r\n */\n\n\nvar Parse = function Parse(name, mapFormat, data, tileWidth, tileHeight, insertNull) {\n  var newMap;\n\n  switch (mapFormat) {\n    case Formats.ARRAY_2D:\n      newMap = Parse2DArray(name, data, tileWidth, tileHeight, insertNull);\n      break;\n\n    case Formats.CSV:\n      newMap = ParseCSV(name, data, tileWidth, tileHeight, insertNull);\n      break;\n\n    case Formats.TILED_JSON:\n      newMap = ParseJSONTiled(name, data, insertNull);\n      break;\n\n    case Formats.WELTMEISTER:\n      newMap = ParseWeltmeister(name, data, insertNull);\n      break;\n\n    default:\n      console.warn('Unrecognized tilemap data format: ' + mapFormat);\n      newMap = null;\n  }\n\n  return newMap;\n};\n\nmodule.exports = Parse;","map":null,"metadata":{},"sourceType":"script"}