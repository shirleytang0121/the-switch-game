{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar BuildGameObject = require('../BuildGameObject');\n\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\n\nvar GetValue = require('../../utils/object/GetValue');\n\nvar Mesh = require('./Mesh');\n/**\r\n * Creates a new Mesh Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Mesh Game Object and WebGL support have been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#mesh\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Mesh} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('mesh', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var frame = GetAdvancedValue(config, 'frame', null);\n  var vertices = GetValue(config, 'vertices', []);\n  var colors = GetValue(config, 'colors', []);\n  var alphas = GetValue(config, 'alphas', []);\n  var uv = GetValue(config, 'uv', []);\n  var mesh = new Mesh(this.scene, 0, 0, vertices, uv, colors, alphas, key, frame);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, mesh, config);\n  return mesh;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":null,"metadata":{},"sourceType":"script"}