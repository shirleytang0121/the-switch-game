{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Triangle = require('./Triangle'); //  Builds a right triangle, with one 90 degree angle and two acute angles\n//  The x/y is the coordinate of the 90 degree angle (and will map to x1/y1 in the resulting Triangle)\n//  w/h can be positive or negative and represent the length of each side\n\n/**\r\n * Builds a right triangle, i.e. one which has a 90-degree angle and two acute angles.\r\n *\r\n * @function Phaser.Geom.Triangle.BuildRight\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The X coordinate of the right angle, which will also be the first X coordinate of the constructed Triangle.\r\n * @param {number} y - The Y coordinate of the right angle, which will also be the first Y coordinate of the constructed Triangle.\r\n * @param {number} width - The length of the side which is to the left or to the right of the right angle.\r\n * @param {number} height - The length of the side which is above or below the right angle.\r\n *\r\n * @return {Phaser.Geom.Triangle} The constructed right Triangle.\r\n */\n\n\nvar BuildRight = function BuildRight(x, y, width, height) {\n  if (height === undefined) {\n    height = width;\n  } //  90 degree angle\n\n\n  var x1 = x;\n  var y1 = y;\n  var x2 = x;\n  var y2 = y - height;\n  var x3 = x + width;\n  var y3 = y;\n  return new Triangle(x1, y1, x2, y2, x3, y3);\n};\n\nmodule.exports = BuildRight;","map":null,"metadata":{},"sourceType":"script"}