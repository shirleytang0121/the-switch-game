{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar BuildGameObject = require('../../BuildGameObject');\n\nvar GameObjectCreator = require('../../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../../utils/object/GetAdvancedValue');\n\nvar Text = require('./Text');\n/**\r\n * Creates a new Text Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Text Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#text\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Text} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('text', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  } // style Object = {\n  //     font: [ 'font', '16px Courier' ],\n  //     backgroundColor: [ 'backgroundColor', null ],\n  //     fill: [ 'fill', '#fff' ],\n  //     stroke: [ 'stroke', '#fff' ],\n  //     strokeThickness: [ 'strokeThickness', 0 ],\n  //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\n  //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\n  //     shadowColor: [ 'shadow.color', '#000' ],\n  //     shadowBlur: [ 'shadow.blur', 0 ],\n  //     shadowStroke: [ 'shadow.stroke', false ],\n  //     shadowFill: [ 'shadow.fill', false ],\n  //     align: [ 'align', 'left' ],\n  //     maxLines: [ 'maxLines', 0 ],\n  //     fixedWidth: [ 'fixedWidth', false ],\n  //     fixedHeight: [ 'fixedHeight', false ],\n  //     rtl: [ 'rtl', false ]\n  // }\n\n\n  var content = GetAdvancedValue(config, 'text', '');\n  var style = GetAdvancedValue(config, 'style', null); //  Padding\n  //      { padding: 2 }\n  //      { padding: { x: , y: }}\n  //      { padding: { left: , top: }}\n  //      { padding: { left: , right: , top: , bottom: }}\n\n  var padding = GetAdvancedValue(config, 'padding', null);\n\n  if (padding !== null) {\n    style.padding = padding;\n  }\n\n  var text = new Text(this.scene, 0, 0, content, style);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, text, config); //  Text specific config options:\n\n  text.autoRound = GetAdvancedValue(config, 'autoRound', true);\n  text.resolution = GetAdvancedValue(config, 'resolution', 1);\n  return text;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":null,"metadata":{},"sourceType":"script"}