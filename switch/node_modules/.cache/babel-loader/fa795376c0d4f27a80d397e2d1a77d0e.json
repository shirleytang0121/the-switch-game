{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar types = {};\n/**\r\n * @namespace Phaser.Loader.FileTypesManager\r\n */\n\nvar FileTypesManager = {\n  /**\r\n   * Static method called when a LoaderPlugin is created.\r\n   * \r\n   * Loops through the local types object and injects all of them as\r\n   * properties into the LoaderPlugin instance.\r\n   *\r\n   * @method Phaser.Loader.FileTypesManager.install\r\n   * @since 3.0.0\r\n   * \r\n   * @param {Phaser.Loader.LoaderPlugin} loader - The LoaderPlugin to install the types into.\r\n   */\n  install: function install(loader) {\n    for (var key in types) {\n      loader[key] = types[key];\n    }\n  },\n\n  /**\r\n   * Static method called directly by the File Types.\r\n   * \r\n   * The key is a reference to the function used to load the files via the Loader, i.e. `image`.\r\n   *\r\n   * @method Phaser.Loader.FileTypesManager.register\r\n   * @since 3.0.0\r\n   * \r\n   * @param {string} key - The key that will be used as the method name in the LoaderPlugin.\r\n   * @param {function} factoryFunction - The function that will be called when LoaderPlugin.key is invoked.\r\n   */\n  register: function register(key, factoryFunction) {\n    types[key] = factoryFunction;\n  },\n\n  /**\r\n   * Removed all associated file types.\r\n   *\r\n   * @method Phaser.Loader.FileTypesManager.destroy\r\n   * @since 3.0.0\r\n   */\n  destroy: function destroy() {\n    types = {};\n  }\n};\nmodule.exports = FileTypesManager;","map":null,"metadata":{},"sourceType":"script"}