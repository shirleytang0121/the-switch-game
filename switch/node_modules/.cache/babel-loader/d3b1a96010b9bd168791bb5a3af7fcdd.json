{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Point = require('./Point');\n/**\r\n * Get the centroid or geometric center of a plane figure (the arithmetic mean position of all the points in the figure).\r\n * Informally, it is the point at which a cutout of the shape could be perfectly balanced on the tip of a pin.\r\n *\r\n * @function Phaser.Geom.Point.GetCentroid\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Point[]} points - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\n\n\nvar GetCentroid = function GetCentroid(points, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  if (!Array.isArray(points)) {\n    throw new Error('GetCentroid points argument must be an array');\n  }\n\n  var len = points.length;\n\n  if (len < 1) {\n    throw new Error('GetCentroid points array must not be empty');\n  } else if (len === 1) {\n    out.x = points[0].x;\n    out.y = points[0].y;\n  } else {\n    for (var i = 0; i < len; i++) {\n      out.x += points[i].x;\n      out.y += points[i].y;\n    }\n\n    out.x /= len;\n    out.y /= len;\n  }\n\n  return out;\n};\n\nmodule.exports = GetCentroid;","map":null,"metadata":{},"sourceType":"script"}