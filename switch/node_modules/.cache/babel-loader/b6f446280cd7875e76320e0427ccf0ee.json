{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar ParseXMLBitmapFont = require('./ParseXMLBitmapFont');\n/**\r\n * Parse an XML Bitmap Font from an Atlas.\r\n *\r\n * Adds the parsed Bitmap Font data to the cache with the `fontName` key.\r\n *\r\n * @function ParseFromAtlas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to parse the Bitmap Font for.\r\n * @param {string} fontName - The key of the font to add to the Bitmap Font cache.\r\n * @param {string} textureKey - The key of the BitmapFont's texture.\r\n * @param {string} frameKey - The key of the BitmapFont texture's frame.\r\n * @param {string} xmlKey - The key of the XML data of the font to parse.\r\n * @param {integer} xSpacing - The x-axis spacing to add between each letter.\r\n * @param {integer} ySpacing - The y-axis spacing to add to the line height.\r\n *\r\n * @return {boolean} Whether the parsing was successful or not.\r\n */\n\n\nvar ParseFromAtlas = function ParseFromAtlas(scene, fontName, textureKey, frameKey, xmlKey, xSpacing, ySpacing) {\n  var frame = scene.sys.textures.getFrame(textureKey, frameKey);\n  var xml = scene.sys.cache.xml.get(xmlKey);\n\n  if (frame && xml) {\n    var data = ParseXMLBitmapFont(xml, xSpacing, ySpacing, frame);\n    scene.sys.cache.bitmapFont.add(fontName, {\n      data: data,\n      texture: textureKey,\n      frame: frameKey\n    });\n    return true;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = ParseFromAtlas;","map":null,"metadata":{},"sourceType":"script"}