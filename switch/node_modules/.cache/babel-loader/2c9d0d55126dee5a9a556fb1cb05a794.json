{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Provides methods used for visually flipping a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @name Phaser.GameObjects.Components.Flip\r\n * @since 3.0.0\r\n */\nvar Flip = {\n  /**\r\n   * The horizontally flipped state of the Game Object.\r\n   * A Game Object that is flipped horizontally will render inversed on the horizontal axis.\r\n   * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Flip#flipX\r\n   * @type {boolean}\r\n   * @default false\r\n   * @since 3.0.0\r\n   */\n  flipX: false,\n\n  /**\r\n   * The vertically flipped state of the Game Object.\r\n   * A Game Object that is flipped vertically will render inversed on the vertical axis (i.e. upside down)\r\n   * Flipping always takes place from the middle of the texture and does not impact the scale value.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Flip#flipY\r\n   * @type {boolean}\r\n   * @default false\r\n   * @since 3.0.0\r\n   */\n  flipY: false,\n\n  /**\r\n   * Toggles the horizontal flipped state of this Game Object.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#toggleFlipX\r\n   * @since 3.0.0\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  toggleFlipX: function toggleFlipX() {\n    this.flipX = !this.flipX;\n    return this;\n  },\n\n  /**\r\n   * Toggles the vertical flipped state of this Game Object.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#toggleFlipY\r\n   * @since 3.0.0\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  toggleFlipY: function toggleFlipY() {\n    this.flipY = !this.flipY;\n    return this;\n  },\n\n  /**\r\n   * Sets the horizontal flipped state of this Game Object.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#setFlipX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setFlipX: function setFlipX(value) {\n    this.flipX = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the vertical flipped state of this Game Object.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#setFlipY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - The flipped state. `false` for no flip, or `true` to be flipped.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setFlipY: function setFlipY(value) {\n    this.flipY = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the horizontal and vertical flipped state of this Game Object.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#setFlip\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} x - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n   * @param {boolean} y - The horizontal flipped state. `false` for no flip, or `true` to be flipped.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setFlip: function setFlip(x, y) {\n    this.flipX = x;\n    this.flipY = y;\n    return this;\n  },\n\n  /**\r\n   * Resets the horizontal and vertical flipped state of this Game Object back to their default un-flipped state.\r\n   * \r\n   * @method Phaser.GameObjects.Components.Flip#resetFlip\r\n   * @since 3.0.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  resetFlip: function resetFlip() {\n    this.flipX = false;\n    this.flipY = false;\n    return this;\n  }\n};\nmodule.exports = Flip;","map":null,"metadata":{},"sourceType":"script"}