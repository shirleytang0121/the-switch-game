{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * The Arcade Physics World Collide Event.\r\n * \r\n * This event is dispatched by an Arcade Physics World instance if two bodies collide _and_ at least\r\n * one of them has their [onCollide]{@link Phaser.Physics.Arcade.Body#onCollide} property set to `true`.\r\n * \r\n * It provides an alternative means to handling collide events rather than using the callback approach.\r\n * \r\n * Listen to it from a Scene using: `this.physics.world.on('collide', listener)`.\r\n * \r\n * Please note that 'collide' and 'overlap' are two different things in Arcade Physics.\r\n *\r\n * @event Phaser.Physics.Arcade.Events#COLLIDE\r\n * \r\n * @param {Phaser.GameObjects.GameObject} gameObject1 - The first Game Object involved in the collision. This is the parent of `body1`.\r\n * @param {Phaser.GameObjects.GameObject} gameObject2 - The second Game Object involved in the collision. This is the parent of `body2`.\r\n * @param {Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody} body1 - The first Physics Body involved in the collision.\r\n * @param {Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody} body2 - The second Physics Body involved in the collision.\r\n */\nmodule.exports = 'collide';","map":null,"metadata":{},"sourceType":"script"}