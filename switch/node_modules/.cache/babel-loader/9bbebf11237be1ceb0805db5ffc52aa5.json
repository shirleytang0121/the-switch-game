{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Takes an array of Game Objects and then modifies their `property` so the value equals, or is incremented, the\r\n * calculated spread value.\r\n * \r\n * The spread value is derived from the given `min` and `max` values and the total number of items in the array.//#endregion\r\n * \r\n * For example, to cause an array of Sprites to change in alpha from 0 to 1 you could call:\r\n * \r\n * ```javascript\r\n * Phaser.Actions.Spread(itemsArray, 'alpha', 0, 1);\r\n * ```\r\n *\r\n * @function Phaser.Actions.Spread\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {string} property - The property of the Game Object to spread.\r\n * @param {number} min - The minimum value.\r\n * @param {number} max - The maximum value.\r\n * @param {boolean} [inc=false] - Should the values be incremented? `true` or set (`false`)\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that were passed to this Action.\r\n */\nvar Spread = function Spread(items, property, min, max, inc) {\n  if (inc === undefined) {\n    inc = false;\n  }\n\n  var step = Math.abs(max - min) / items.length;\n  var i;\n\n  if (inc) {\n    for (i = 0; i < items.length; i++) {\n      items[i][property] += i * step;\n    }\n  } else {\n    for (i = 0; i < items.length; i++) {\n      items[i][property] = i * step;\n    }\n  }\n\n  return items;\n};\n\nmodule.exports = Spread;","map":null,"metadata":{},"sourceType":"script"}