{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar SafeRange = require('./SafeRange');\n/**\r\n * Returns the total number of elements in the array which have a property matching the given value.\r\n *\r\n * @function Phaser.Utils.Array.CountAllMatching\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {string} property - The property to test on each array element.\r\n * @param {*} value - The value to test the property against. Must pass a strict (`===`) comparison check.\r\n * @param {integer} [startIndex] - An optional start index to search from.\r\n * @param {integer} [endIndex] - An optional end index to search to.\r\n *\r\n * @return {integer} The total number of elements with properties matching the given value.\r\n */\n\n\nvar CountAllMatching = function CountAllMatching(array, property, value, startIndex, endIndex) {\n  if (startIndex === undefined) {\n    startIndex = 0;\n  }\n\n  if (endIndex === undefined) {\n    endIndex = array.length;\n  }\n\n  var total = 0;\n\n  if (SafeRange(array, startIndex, endIndex)) {\n    for (var i = startIndex; i < endIndex; i++) {\n      var child = array[i];\n\n      if (child[property] === value) {\n        total++;\n      }\n    }\n  }\n\n  return total;\n};\n\nmodule.exports = CountAllMatching;","map":null,"metadata":{},"sourceType":"script"}