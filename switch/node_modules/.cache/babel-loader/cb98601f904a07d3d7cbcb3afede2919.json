{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n/**\r\n * @classdesc\r\n * Contains information about a specific Gamepad Axis.\r\n * Axis objects are created automatically by the Gamepad as they are needed.\r\n *\r\n * @class Axis\r\n * @memberof Phaser.Input.Gamepad\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Input.Gamepad.Gamepad} pad - A reference to the Gamepad that this Axis belongs to.\r\n * @param {integer} index - The index of this Axis.\r\n */\n\n\nvar Axis = new Class({\n  initialize: function Axis(pad, index) {\n    /**\r\n     * A reference to the Gamepad that this Axis belongs to.\r\n     *\r\n     * @name Phaser.Input.Gamepad.Axis#pad\r\n     * @type {Phaser.Input.Gamepad.Gamepad}\r\n     * @since 3.0.0\r\n     */\n    this.pad = pad;\n    /**\r\n     * An event emitter to use to emit the axis events.\r\n     *\r\n     * @name Phaser.Input.Gamepad.Axis#events\r\n     * @type {Phaser.Events.EventEmitter}\r\n     * @since 3.0.0\r\n     */\n\n    this.events = pad.events;\n    /**\r\n     * The index of this Axis.\r\n     *\r\n     * @name Phaser.Input.Gamepad.Axis#index\r\n     * @type {integer}\r\n     * @since 3.0.0\r\n     */\n\n    this.index = index;\n    /**\r\n     * The raw axis value, between -1 and 1 with 0 being dead center.\r\n     * Use the method `getValue` to get a normalized value with the threshold applied.\r\n     *\r\n     * @name Phaser.Input.Gamepad.Axis#value\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\n\n    this.value = 0;\n    /**\r\n     * Movement tolerance threshold below which axis values are ignored in `getValue`.\r\n     *\r\n     * @name Phaser.Input.Gamepad.Axis#threshold\r\n     * @type {number}\r\n     * @default 0.1\r\n     * @since 3.0.0\r\n     */\n\n    this.threshold = 0.1;\n  },\n\n  /**\r\n   * Internal update handler for this Axis.\r\n   * Called automatically by the Gamepad as part of its update.\r\n   *\r\n   * @method Phaser.Input.Gamepad.Axis#update\r\n   * @private\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The value of the axis movement.\r\n   */\n  update: function update(value) {\n    this.value = value;\n  },\n\n  /**\r\n   * Applies the `threshold` value to the axis and returns it.\r\n   *\r\n   * @method Phaser.Input.Gamepad.Axis#getValue\r\n   * @since 3.0.0\r\n   *\r\n   * @return {number} The axis value, adjusted for the movement threshold.\r\n   */\n  getValue: function getValue() {\n    return Math.abs(this.value) < this.threshold ? 0 : this.value;\n  },\n\n  /**\r\n   * Destroys this Axis instance and releases external references it holds.\r\n   *\r\n   * @method Phaser.Input.Gamepad.Axis#destroy\r\n   * @since 3.10.0\r\n   */\n  destroy: function destroy() {\n    this.pad = null;\n    this.events = null;\n  }\n});\nmodule.exports = Axis;","map":null,"metadata":{},"sourceType":"script"}