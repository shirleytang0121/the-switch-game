{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Events = require('../events');\n\nvar MatterEvents = require('../lib/core/Events');\n/**\r\n * [description]\r\n *\r\n * @name Phaser.Physics.Matter.Components.Sleep\r\n * @since 3.0.0\r\n */\n\n\nvar Sleep = {\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Sleep#setSleepThreshold\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} [value=60] - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setSleepThreshold: function setSleepThreshold(value) {\n    if (value === undefined) {\n      value = 60;\n    }\n\n    this.body.sleepThreshold = value;\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Sleep#setSleepEvents\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} start - [description]\r\n   * @param {boolean} end - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setSleepEvents: function setSleepEvents(start, end) {\n    this.setSleepStartEvent(start);\n    this.setSleepEndEvent(end);\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Sleep#setSleepStartEvent\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setSleepStartEvent: function setSleepStartEvent(value) {\n    if (value) {\n      var world = this.world;\n      MatterEvents.on(this.body, 'sleepStart', function (event) {\n        world.emit(Events.SLEEP_START, event, this);\n      });\n    } else {\n      MatterEvents.off(this.body, 'sleepStart');\n    }\n\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Matter.Components.Sleep#setSleepEndEvent\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setSleepEndEvent: function setSleepEndEvent(value) {\n    if (value) {\n      var world = this.world;\n      MatterEvents.on(this.body, 'sleepEnd', function (event) {\n        world.emit(Events.SLEEP_END, event, this);\n      });\n    } else {\n      MatterEvents.off(this.body, 'sleepEnd');\n    }\n\n    return this;\n  }\n};\nmodule.exports = Sleep;","map":null,"metadata":{},"sourceType":"script"}