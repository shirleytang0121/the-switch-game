{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar PolygonRender = require('./PolygonRender');\n\nvar Class = require('../../../utils/Class');\n\nvar Earcut = require('../../../geom/polygon/Earcut');\n\nvar GetAABB = require('../../../geom/polygon/GetAABB');\n\nvar GeomPolygon = require('../../../geom/polygon/Polygon');\n\nvar Shape = require('../Shape');\n\nvar Smooth = require('../../../geom/polygon/Smooth');\n/**\r\n * @classdesc\r\n * The Polygon Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports both fill and stroke colors.\r\n * \r\n * The Polygon Shape is created by providing a list of points, which are then used to create an\r\n * internal Polygon geometry object. The points can be set from a variety of formats:\r\n *\r\n * - A string containing paired values separated by a single space: `'40 0 40 20 100 20 100 80 40 80 40 100 0 50'`\r\n * - An array of Point or Vector2 objects: `[new Phaser.Math.Vec2(x1, y1), ...]`\r\n * - An array of objects with public x/y properties: `[obj1, obj2, ...]`\r\n * - An array of paired numbers that represent point coordinates: `[x1,y1, x2,y2, ...]`\r\n * - An array of arrays with two elements representing x/y coordinates: `[[x1, y1], [x2, y2], ...]`\r\n * \r\n * By default the `x` and `y` coordinates of this Shape refer to the center of it. However, depending\r\n * on the coordinates of the points provided, the final shape may be rendered offset from its origin.\r\n *\r\n * @class Polygon\r\n * @extends Phaser.GameObjects.Shape\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.13.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {any} [points] - The points that make up the polygon.\r\n * @param {number} [fillColor] - The color the polygon will be filled with, i.e. 0xff0000 for red.\r\n * @param {number} [fillAlpha] - The alpha the polygon will be filled with. You can also set the alpha of the overall Shape using its `alpha` property.\r\n */\n\n\nvar Polygon = new Class({\n  Extends: Shape,\n  Mixins: [PolygonRender],\n  initialize: function Polygon(scene, x, y, points, fillColor, fillAlpha) {\n    if (x === undefined) {\n      x = 0;\n    }\n\n    if (y === undefined) {\n      y = 0;\n    }\n\n    Shape.call(this, scene, 'Polygon', new GeomPolygon(points));\n    var bounds = GetAABB(this.geom);\n    this.setPosition(x, y);\n    this.setSize(bounds.width, bounds.height);\n\n    if (fillColor !== undefined) {\n      this.setFillStyle(fillColor, fillAlpha);\n    }\n\n    this.updateDisplayOrigin();\n    this.updateData();\n  },\n\n  /**\r\n   * Smooths the polygon over the number of iterations specified.\r\n   * The base polygon data will be updated and replaced with the smoothed values.\r\n   * This call can be chained.\r\n   *\r\n   * @method Phaser.GameObjects.Polygon#smooth\r\n   * @since 3.13.0\r\n   * \r\n   * @param {integer} [iterations=1] - The number of times to apply the polygon smoothing.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  smooth: function smooth(iterations) {\n    if (iterations === undefined) {\n      iterations = 1;\n    }\n\n    for (var i = 0; i < iterations; i++) {\n      Smooth(this.geom);\n    }\n\n    return this.updateData();\n  },\n\n  /**\r\n   * Internal method that updates the data and path values.\r\n   *\r\n   * @method Phaser.GameObjects.Polygon#updateData\r\n   * @private\r\n   * @since 3.13.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  updateData: function updateData() {\n    var path = [];\n    var points = this.geom.points;\n\n    for (var i = 0; i < points.length; i++) {\n      path.push(points[i].x, points[i].y);\n    }\n\n    path.push(points[0].x, points[0].y);\n    this.pathIndexes = Earcut(path);\n    this.pathData = path;\n    return this;\n  }\n});\nmodule.exports = Polygon;","map":null,"metadata":{},"sourceType":"script"}