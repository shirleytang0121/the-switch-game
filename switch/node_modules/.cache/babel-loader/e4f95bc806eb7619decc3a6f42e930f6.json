{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Takes an array of Game Objects, or any objects that have a public property as defined in `key`,\r\n * and then sets it to the given value.\r\n *\r\n * The optional `step` property is applied incrementally, multiplied by each item in the array.\r\n *\r\n * To use this with a Group: `PropertyValueSet(group.getChildren(), key, value, step)`\r\n *\r\n * @function Phaser.Actions.PropertyValueSet\r\n * @since 3.3.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {string} key - The property to be updated.\r\n * @param {number} value - The amount to set the property to.\r\n * @param {number} [step=0] - This is added to the `value` amount, multiplied by the iteration counter.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\nvar PropertyValueSet = function PropertyValueSet(items, key, value, step, index, direction) {\n  if (step === undefined) {\n    step = 0;\n  }\n\n  if (index === undefined) {\n    index = 0;\n  }\n\n  if (direction === undefined) {\n    direction = 1;\n  }\n\n  var i;\n  var t = 0;\n  var end = items.length;\n\n  if (direction === 1) {\n    //  Start to End\n    for (i = index; i < end; i++) {\n      items[i][key] = value + t * step;\n      t++;\n    }\n  } else {\n    //  End to Start\n    for (i = index; i >= 0; i--) {\n      items[i][key] = value + t * step;\n      t++;\n    }\n  }\n\n  return items;\n};\n\nmodule.exports = PropertyValueSet;","map":null,"metadata":{},"sourceType":"script"}