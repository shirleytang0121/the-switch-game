{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Provides methods used for setting the WebGL rendering pipeline of a Game Object.\r\n *\r\n * @name Phaser.GameObjects.Components.Pipeline\r\n * @webglOnly\r\n * @since 3.0.0\r\n */\nvar Pipeline = {\n  /**\r\n   * The initial WebGL pipeline of this Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Pipeline#defaultPipeline\r\n   * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n   * @default null\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  defaultPipeline: null,\n\n  /**\r\n   * The current WebGL pipeline of this Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Pipeline#pipeline\r\n   * @type {Phaser.Renderer.WebGL.WebGLPipeline}\r\n   * @default null\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  pipeline: null,\n\n  /**\r\n   * Sets the initial WebGL Pipeline of this Game Object.\r\n   * This should only be called during the instantiation of the Game Object.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#initPipeline\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @param {string} [pipelineName=TextureTintPipeline] - The name of the pipeline to set on this Game Object. Defaults to the Texture Tint Pipeline.\r\n   *\r\n   * @return {boolean} `true` if the pipeline was set successfully, otherwise `false`.\r\n   */\n  initPipeline: function initPipeline(pipelineName) {\n    if (pipelineName === undefined) {\n      pipelineName = 'TextureTintPipeline';\n    }\n\n    var renderer = this.scene.sys.game.renderer;\n\n    if (renderer && renderer.gl && renderer.hasPipeline(pipelineName)) {\n      this.defaultPipeline = renderer.getPipeline(pipelineName);\n      this.pipeline = this.defaultPipeline;\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\r\n   * Sets the active WebGL Pipeline of this Game Object.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#setPipeline\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @param {string} pipelineName - The name of the pipeline to set on this Game Object.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setPipeline: function setPipeline(pipelineName) {\n    var renderer = this.scene.sys.game.renderer;\n\n    if (renderer && renderer.gl && renderer.hasPipeline(pipelineName)) {\n      this.pipeline = renderer.getPipeline(pipelineName);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Resets the WebGL Pipeline of this Game Object back to the default it was created with.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#resetPipeline\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @return {boolean} `true` if the pipeline was set successfully, otherwise `false`.\r\n   */\n  resetPipeline: function resetPipeline() {\n    this.pipeline = this.defaultPipeline;\n    return this.pipeline !== null;\n  },\n\n  /**\r\n   * Gets the name of the WebGL Pipeline this Game Object is currently using.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Pipeline#getPipelineName\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   *\r\n   * @return {string} The string-based name of the pipeline being used by this Game Object.\r\n   */\n  getPipelineName: function getPipelineName() {\n    return this.pipeline.name;\n  }\n};\nmodule.exports = Pipeline;","map":null,"metadata":{},"sourceType":"script"}