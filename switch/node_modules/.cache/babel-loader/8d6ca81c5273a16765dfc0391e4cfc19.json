{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Provides methods used for setting the enable properties of an Arcade Physics Body.\r\n *\r\n * @name Phaser.Physics.Arcade.Components.Enable\r\n * @since 3.0.0\r\n */\nvar Enable = {\n  /**\r\n   * Enables this Game Object's Body.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Enable#enableBody\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} reset - Also reset the Body and place it at (x, y).\r\n   * @param {number} x - The horizontal position to place the Game Object and Body.\r\n   * @param {number} y - The horizontal position to place the Game Object and Body.\r\n   * @param {boolean} enableGameObject - Also activate this Game Object.\r\n   * @param {boolean} showGameObject - Also show this Game Object.\r\n   *\r\n   * @return {this} This Game Object.\r\n   *\r\n   * @see Phaser.Physics.Arcade.Body#enable\r\n   * @see Phaser.Physics.Arcade.StaticBody#enable\r\n   * @see Phaser.Physics.Arcade.Body#reset\r\n   * @see Phaser.Physics.Arcade.StaticBody#reset\r\n   * @see Phaser.GameObjects.GameObject#active\r\n   * @see Phaser.GameObjects.GameObject#visible\r\n   */\n  enableBody: function enableBody(reset, x, y, enableGameObject, showGameObject) {\n    if (reset) {\n      this.body.reset(x, y);\n    }\n\n    if (enableGameObject) {\n      this.body.gameObject.active = true;\n    }\n\n    if (showGameObject) {\n      this.body.gameObject.visible = true;\n    }\n\n    this.body.enable = true;\n    return this;\n  },\n\n  /**\r\n   * Stops and disables this Game Object's Body.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Enable#disableBody\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} [disableGameObject=false] - Also deactivate this Game Object.\r\n   * @param {boolean} [hideGameObject=false] - Also hide this Game Object.\r\n   *\r\n   * @return {this} This Game Object.\r\n   *\r\n   * @see Phaser.Physics.Arcade.Body#enable\r\n   * @see Phaser.Physics.Arcade.StaticBody#enable\r\n   * @see Phaser.GameObjects.GameObject#active\r\n   * @see Phaser.GameObjects.GameObject#visible\r\n   */\n  disableBody: function disableBody(disableGameObject, hideGameObject) {\n    if (disableGameObject === undefined) {\n      disableGameObject = false;\n    }\n\n    if (hideGameObject === undefined) {\n      hideGameObject = false;\n    }\n\n    this.body.stop();\n    this.body.enable = false;\n\n    if (disableGameObject) {\n      this.body.gameObject.active = false;\n    }\n\n    if (hideGameObject) {\n      this.body.gameObject.visible = false;\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Syncs the Body's position and size with its parent Game Object.\r\n   * You don't need to call this for Dynamic Bodies, as it happens automatically.\r\n   * But for Static bodies it's a useful way of modifying the position of a Static Body\r\n   * in the Physics World, based on its Game Object.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Enable#refreshBody\r\n   * @since 3.1.0\r\n   *\r\n   * @return {this} This Game Object.\r\n   *\r\n   * @see Phaser.Physics.Arcade.StaticBody#updateFromGameObject\r\n   */\n  refreshBody: function refreshBody() {\n    this.body.updateFromGameObject();\n    return this;\n  }\n};\nmodule.exports = Enable;","map":null,"metadata":{},"sourceType":"script"}