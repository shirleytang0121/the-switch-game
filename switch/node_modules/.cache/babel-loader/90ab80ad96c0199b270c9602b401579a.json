{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Rotate a given point by a given angle around the origin (0, 0), in an anti-clockwise direction.\r\n *\r\n * @function Phaser.Math.Rotate\r\n * @since 3.0.0\r\n *\r\n * @param {(Phaser.Geom.Point|object)} point - The point to be rotated.\r\n * @param {number} angle - The angle to be rotated by in an anticlockwise direction.\r\n *\r\n * @return {Phaser.Geom.Point} The given point, rotated by the given angle in an anticlockwise direction.\r\n */\nvar Rotate = function Rotate(point, angle) {\n  var x = point.x;\n  var y = point.y;\n  point.x = x * Math.cos(angle) - y * Math.sin(angle);\n  point.y = x * Math.sin(angle) + y * Math.cos(angle);\n  return point;\n};\n\nmodule.exports = Rotate;","map":null,"metadata":{},"sourceType":"script"}