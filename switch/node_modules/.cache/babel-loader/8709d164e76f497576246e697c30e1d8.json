{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Provides methods used for setting the bounce properties of an Arcade Physics Body.\r\n *\r\n * @name Phaser.Physics.Arcade.Components.Bounce\r\n * @since 3.0.0\r\n */\nvar Bounce = {\n  /**\r\n   * Sets the bounce values of this body.\r\n   * \r\n   * Bounce is the amount of restitution, or elasticity, the body has when it collides with another object.\r\n   * A value of 1 means that it will retain its full velocity after the rebound. A value of 0 means it will not rebound at all.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Bounce#setBounce\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The amount of horizontal bounce to apply on collision. A float, typically between 0 and 1.\r\n   * @param {number} [y=x] - The amount of vertical bounce to apply on collision. A float, typically between 0 and 1.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setBounce: function setBounce(x, y) {\n    this.body.bounce.set(x, y);\n    return this;\n  },\n\n  /**\r\n   * Sets the horizontal bounce value for this body.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Bounce#setBounceX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of horizontal bounce to apply on collision. A float, typically between 0 and 1.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setBounceX: function setBounceX(value) {\n    this.body.bounce.x = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the vertical bounce value for this body.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Bounce#setBounceY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of vertical bounce to apply on collision. A float, typically between 0 and 1.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setBounceY: function setBounceY(value) {\n    this.body.bounce.y = value;\n    return this;\n  },\n\n  /**\r\n   * Sets if this body should collide with the world bounds or not.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Bounce#setCollideWorldBounds\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - `true` if this body should collide with the world bounds, otherwise `false`.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setCollideWorldBounds: function setCollideWorldBounds(value) {\n    this.body.collideWorldBounds = value;\n    return this;\n  }\n};\nmodule.exports = Bounce;","map":null,"metadata":{},"sourceType":"script"}