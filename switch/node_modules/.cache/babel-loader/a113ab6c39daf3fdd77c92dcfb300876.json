{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Utils = require('../../renderer/webgl/Utils');\n/**\r\n * Renders a stroke outline around the given Shape.\r\n *\r\n * @method Phaser.GameObjects.Shape#StrokePathWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLPipeline} pipeline - The WebGL Pipeline used to render this Shape.\r\n * @param {Phaser.GameObjects.Shape} src - The Game Object shape being rendered in this call.\r\n * @param {number} alpha - The base alpha value.\r\n * @param {number} dx - The source displayOriginX.\r\n * @param {number} dy - The source displayOriginY.\r\n */\n\n\nvar StrokePathWebGL = function StrokePathWebGL(pipeline, src, alpha, dx, dy) {\n  var strokeTint = pipeline.strokeTint;\n  var strokeTintColor = Utils.getTintAppendFloatAlphaAndSwap(src.strokeColor, src.strokeAlpha * alpha);\n  strokeTint.TL = strokeTintColor;\n  strokeTint.TR = strokeTintColor;\n  strokeTint.BL = strokeTintColor;\n  strokeTint.BR = strokeTintColor;\n  var path = src.pathData;\n  var pathLength = path.length - 1;\n  var lineWidth = src.lineWidth;\n  var halfLineWidth = lineWidth / 2;\n  var px1 = path[0] - dx;\n  var py1 = path[1] - dy;\n\n  if (!src.closePath) {\n    pathLength -= 2;\n  }\n\n  for (var i = 2; i < pathLength; i += 2) {\n    var px2 = path[i] - dx;\n    var py2 = path[i + 1] - dy;\n    pipeline.setTexture2D();\n    pipeline.batchLine(px1, py1, px2, py2, halfLineWidth, halfLineWidth, lineWidth, i - 2, src.closePath ? i === pathLength - 1 : false);\n    px1 = px2;\n    py1 = py2;\n  }\n};\n\nmodule.exports = StrokePathWebGL;","map":null,"metadata":{},"sourceType":"script"}