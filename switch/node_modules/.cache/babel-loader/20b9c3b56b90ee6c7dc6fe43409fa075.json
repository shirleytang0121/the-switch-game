{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Tileset = require('../../Tileset');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Impact.ParseTilesets\r\n * @since 3.0.0\r\n *\r\n * @param {object} json - [description]\r\n *\r\n * @return {array} [description]\r\n */\n\n\nvar ParseTilesets = function ParseTilesets(json) {\n  var tilesets = [];\n  var tilesetsNames = [];\n\n  for (var i = 0; i < json.layer.length; i++) {\n    var layer = json.layer[i]; // A relative filepath to the source image (within Weltmeister) is used for the name\n\n    var tilesetName = layer.tilesetName; // Only add unique tilesets that have a valid name. Collision layers will have a blank name.\n\n    if (tilesetName !== '' && tilesetsNames.indexOf(tilesetName) === -1) {\n      tilesetsNames.push(tilesetName); // Tiles are stored with an ID relative to the tileset, rather than a globally unique ID\n      // across all tilesets. Also, tilesets in Weltmeister have no margin or padding.\n\n      tilesets.push(new Tileset(tilesetName, 0, layer.tilesize, layer.tilesize, 0, 0));\n    }\n  }\n\n  return tilesets;\n};\n\nmodule.exports = ParseTilesets;","map":null,"metadata":{},"sourceType":"script"}