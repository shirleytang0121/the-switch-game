{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Compute a random position vector in a spherical area, optionally defined by the given radius.\r\n *\r\n * @function Phaser.Math.RandomXYZ\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Math.Vector3} vec3 - The Vector to compute random values for.\r\n * @param {number} [radius=1] - The radius.\r\n *\r\n * @return {Phaser.Math.Vector3} The given Vector.\r\n */\nvar RandomXYZ = function RandomXYZ(vec3, radius) {\n  if (radius === undefined) {\n    radius = 1;\n  }\n\n  var r = Math.random() * 2 * Math.PI;\n  var z = Math.random() * 2 - 1;\n  var zScale = Math.sqrt(1 - z * z) * radius;\n  vec3.x = Math.cos(r) * zScale;\n  vec3.y = Math.sin(r) * zScale;\n  vec3.z = z * radius;\n  return vec3;\n};\n\nmodule.exports = RandomXYZ;","map":null,"metadata":{},"sourceType":"script"}