{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Provides methods for setting the gravity properties of an Arcade Physics Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @name Phaser.Physics.Arcade.Components.Gravity\r\n * @since 3.0.0\r\n */\nvar Gravity = {\n  /**\r\n   * Set the X and Y values of the gravitational pull to act upon this Arcade Physics Game Object. Values can be positive or negative. Larger values result in a stronger effect.\r\n   * \r\n   * If only one value is provided, this value will be used for both the X and Y axis.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Gravity#setGravity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The gravitational force to be applied to the X-axis.\r\n   * @param {number} [y=x] - The gravitational force to be applied to the Y-axis. If this is not specified, the X value will be used.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setGravity: function setGravity(x, y) {\n    this.body.gravity.set(x, y);\n    return this;\n  },\n\n  /**\r\n   * Set the gravitational force to be applied to the X axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Gravity#setGravityX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The gravitational force to be applied to the X-axis.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setGravityX: function setGravityX(x) {\n    this.body.gravity.x = x;\n    return this;\n  },\n\n  /**\r\n   * Set the gravitational force to be applied to the Y axis. Value can be positive or negative. Larger values result in a stronger effect.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Gravity#setGravityY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} y - The gravitational force to be applied to the Y-axis.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setGravityY: function setGravityY(y) {\n    this.body.gravity.y = y;\n    return this;\n  }\n};\nmodule.exports = Gravity;","map":null,"metadata":{},"sourceType":"script"}