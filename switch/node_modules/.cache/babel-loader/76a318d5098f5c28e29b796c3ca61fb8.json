{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetValue = require('../../utils/object/GetValue');\n/**\r\n * Parses a Retro Font configuration object so you can pass it to the BitmapText constructor\r\n * and create a BitmapText object using a fixed-width retro font.\r\n *\r\n * @function Phaser.GameObjects.RetroFont.Parse\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - A reference to the Phaser Scene.\r\n * @param {Phaser.GameObjects.RetroFont.Config} config - The font configuration object.\r\n *\r\n * @return {object} A parsed Bitmap Font data entry for the Bitmap Font cache.\r\n */\n\n\nvar ParseRetroFont = function ParseRetroFont(scene, config) {\n  var w = config.width;\n  var h = config.height;\n  var cx = Math.floor(w / 2);\n  var cy = Math.floor(h / 2);\n  var letters = GetValue(config, 'chars', '');\n\n  if (letters === '') {\n    return;\n  }\n\n  var key = GetValue(config, 'image', '');\n  var offsetX = GetValue(config, 'offset.x', 0);\n  var offsetY = GetValue(config, 'offset.y', 0);\n  var spacingX = GetValue(config, 'spacing.x', 0);\n  var spacingY = GetValue(config, 'spacing.y', 0);\n  var lineSpacing = GetValue(config, 'lineSpacing', 0);\n  var charsPerRow = GetValue(config, 'charsPerRow', null);\n\n  if (charsPerRow === null) {\n    charsPerRow = scene.sys.textures.getFrame(key).width / w;\n\n    if (charsPerRow > letters.length) {\n      charsPerRow = letters.length;\n    }\n  }\n\n  var x = offsetX;\n  var y = offsetY;\n  var data = {\n    retroFont: true,\n    font: key,\n    size: w,\n    lineHeight: h + lineSpacing,\n    chars: {}\n  };\n  var r = 0;\n\n  for (var i = 0; i < letters.length; i++) {\n    // var node = letters[i];\n    var charCode = letters.charCodeAt(i);\n    data.chars[charCode] = {\n      x: x,\n      y: y,\n      width: w,\n      height: h,\n      centerX: cx,\n      centerY: cy,\n      xOffset: 0,\n      yOffset: 0,\n      xAdvance: w,\n      data: {},\n      kerning: {}\n    };\n    r++;\n\n    if (r === charsPerRow) {\n      r = 0;\n      x = offsetX;\n      y += h + spacingY;\n    } else {\n      x += w + spacingX;\n    }\n  }\n\n  var entry = {\n    data: data,\n    frame: null,\n    texture: key\n  };\n  return entry;\n};\n\nmodule.exports = ParseRetroFont;","map":null,"metadata":{},"sourceType":"script"}