{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Converts from world X coordinates (pixels) to tile X coordinates (tile units), factoring in the\r\n * layer's position, scale and scroll.\r\n *\r\n * @function Phaser.Tilemaps.Components.WorldToTileX\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {number} worldX - The x coordinate to be converted, in pixels, not tiles.\r\n * @param {boolean} [snapToFloor=true] - Whether or not to round the tile coordinate down to the nearest integer.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {number} The X location in tile units.\r\n */\nvar WorldToTileX = function WorldToTileX(worldX, snapToFloor, camera, layer) {\n  if (snapToFloor === undefined) {\n    snapToFloor = true;\n  }\n\n  var tileWidth = layer.baseTileWidth;\n  var tilemapLayer = layer.tilemapLayer;\n\n  if (tilemapLayer) {\n    if (camera === undefined) {\n      camera = tilemapLayer.scene.cameras.main;\n    } // Find the world position relative to the static or dynamic layer's top left origin,\n    // factoring in the camera's horizontal scroll\n\n\n    worldX = worldX - (tilemapLayer.x + camera.scrollX * (1 - tilemapLayer.scrollFactorX));\n    tileWidth *= tilemapLayer.scaleX;\n  }\n\n  return snapToFloor ? Math.floor(worldX / tileWidth) : worldX / tileWidth;\n};\n\nmodule.exports = WorldToTileX;","map":null,"metadata":{},"sourceType":"script"}