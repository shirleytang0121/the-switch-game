{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Formats = require('../../Formats');\n\nvar MapData = require('../../mapdata/MapData');\n\nvar ParseTileLayers = require('./ParseTileLayers');\n\nvar ParseTilesets = require('./ParseTilesets');\n/**\r\n * @namespace Phaser.Tilemaps.Parsers.Impact\r\n */\n\n/**\r\n * Parses a Weltmeister JSON object into a new MapData object.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Impact.ParseWeltmeister\r\n * @since 3.0.0\r\n *\r\n * @param {string} name - The name of the tilemap, used to set the name on the MapData.\r\n * @param {object} json - The Weltmeister JSON object.\r\n * @param {boolean} insertNull - Controls how empty tiles, tiles with an index of -1, in the map\r\n * data are handled. If `true`, empty locations will get a value of `null`. If `false`, empty\r\n * location will get a Tile object with an index of -1. If you've a large sparsely populated map and\r\n * the tile data doesn't need to change then setting this value to `true` will help with memory\r\n * consumption. However if your map is small or you need to update the tiles dynamically, then leave\r\n * the default value set.\r\n *\r\n * @return {?object} [description]\r\n */\n\n\nvar ParseWeltmeister = function ParseWeltmeister(name, json, insertNull) {\n  if (json.layer.length === 0) {\n    console.warn('No layers found in the Weltmeister map: ' + name);\n    return null;\n  }\n\n  var width = 0;\n  var height = 0;\n\n  for (var i = 0; i < json.layer.length; i++) {\n    if (json.layer[i].width > width) {\n      width = json.layer[i].width;\n    }\n\n    if (json.layer[i].height > height) {\n      height = json.layer[i].height;\n    }\n  }\n\n  var mapData = new MapData({\n    width: width,\n    height: height,\n    name: name,\n    tileWidth: json.layer[0].tilesize,\n    tileHeight: json.layer[0].tilesize,\n    format: Formats.WELTMEISTER\n  });\n  mapData.layers = ParseTileLayers(json, insertNull);\n  mapData.tilesets = ParseTilesets(json);\n  return mapData;\n};\n\nmodule.exports = ParseWeltmeister;","map":null,"metadata":{},"sourceType":"script"}