{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Point = require('../point/Point'); // The three angle bisectors of a triangle meet in one point called the incenter.\n// It is the center of the incircle, the circle inscribed in the triangle.\n\n\nfunction getLength(x1, y1, x2, y2) {\n  var x = x1 - x2;\n  var y = y1 - y2;\n  var magnitude = x * x + y * y;\n  return Math.sqrt(magnitude);\n}\n/**\r\n * Calculates the position of the incenter of a Triangle object. This is the point where its three angle bisectors meet and it's also the center of the incircle, which is the circle inscribed in the triangle.\r\n *\r\n * @function Phaser.Geom.Triangle.InCenter\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to find the incenter of.\r\n * @param {Phaser.Geom.Point} [out] - An optional Point in which to store the coordinates.\r\n *\r\n * @return {Phaser.Geom.Point} Point (x, y) of the center pixel of the triangle.\r\n */\n\n\nvar InCenter = function InCenter(triangle, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  var x1 = triangle.x1;\n  var y1 = triangle.y1;\n  var x2 = triangle.x2;\n  var y2 = triangle.y2;\n  var x3 = triangle.x3;\n  var y3 = triangle.y3;\n  var d1 = getLength(x3, y3, x2, y2);\n  var d2 = getLength(x1, y1, x3, y3);\n  var d3 = getLength(x2, y2, x1, y1);\n  var p = d1 + d2 + d3;\n  out.x = (x1 * d1 + x2 * d2 + x3 * d3) / p;\n  out.y = (y1 * d1 + y2 * d2 + y3 * d3) / p;\n  return out;\n};\n\nmodule.exports = InCenter;","map":null,"metadata":{},"sourceType":"script"}