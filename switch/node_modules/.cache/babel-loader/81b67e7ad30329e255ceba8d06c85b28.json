{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Extend = require('../utils/object/Extend');\n\nvar XHRSettings = require('./XHRSettings');\n/**\r\n * Takes two XHRSettings Objects and creates a new XHRSettings object from them.\r\n *\r\n * The new object is seeded by the values given in the global settings, but any setting in\r\n * the local object overrides the global ones.\r\n *\r\n * @function Phaser.Loader.MergeXHRSettings\r\n * @since 3.0.0\r\n *\r\n * @param {XHRSettingsObject} global - The global XHRSettings object.\r\n * @param {XHRSettingsObject} local - The local XHRSettings object.\r\n *\r\n * @return {XHRSettingsObject} A newly formed XHRSettings object.\r\n */\n\n\nvar MergeXHRSettings = function MergeXHRSettings(global, local) {\n  var output = global === undefined ? XHRSettings() : Extend({}, global);\n\n  if (local) {\n    for (var setting in local) {\n      if (local[setting] !== undefined) {\n        output[setting] = local[setting];\n      }\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = MergeXHRSettings;","map":null,"metadata":{},"sourceType":"script"}