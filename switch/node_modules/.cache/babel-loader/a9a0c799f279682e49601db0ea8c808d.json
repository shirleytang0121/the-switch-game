{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar IsInLayerBounds = require('./IsInLayerBounds');\n/**\r\n * Checks if there is a tile at the given location (in tile coordinates) in the given layer. Returns\r\n * false if there is no tile or if the tile at that location has an index of -1.\r\n *\r\n * @function Phaser.Tilemaps.Components.HasTileAt\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileX - X position to get the tile from (given in tile units, not pixels).\r\n * @param {integer} tileY - Y position to get the tile from (given in tile units, not pixels).\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {?boolean} Returns a boolean, or null if the layer given was invalid.\r\n */\n\n\nvar HasTileAt = function HasTileAt(tileX, tileY, layer) {\n  if (IsInLayerBounds(tileX, tileY, layer)) {\n    var tile = layer.data[tileY][tileX];\n    return tile !== null && tile.index > -1;\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = HasTileAt;","map":null,"metadata":{},"sourceType":"script"}