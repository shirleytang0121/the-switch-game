{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar imageHeight = 0;\n/**\r\n * @function addFrame\r\n * @private\r\n * @since 3.0.0\r\n */\n\nvar addFrame = function addFrame(texture, sourceIndex, name, frame) {\n  //  The frame values are the exact coordinates to cut the frame out of the atlas from\n  var y = imageHeight - frame.y - frame.height;\n  texture.add(name, sourceIndex, frame.x, y, frame.width, frame.height); //  These are the original (non-trimmed) sprite values\n\n  /*\r\n  if (src.trimmed)\r\n  {\r\n      newFrame.setTrim(\r\n          src.sourceSize.w,\r\n          src.sourceSize.h,\r\n          src.spriteSourceSize.x,\r\n          src.spriteSourceSize.y,\r\n          src.spriteSourceSize.w,\r\n          src.spriteSourceSize.h\r\n      );\r\n  }\r\n  */\n};\n/**\r\n * Parses a Unity YAML File and creates Frames in the Texture.\r\n * For more details about Sprite Meta Data see https://docs.unity3d.com/ScriptReference/SpriteMetaData.html\r\n *\r\n * @function Phaser.Textures.Parsers.UnityYAML\r\n * @memberof Phaser.Textures.Parsers\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Textures.Texture} texture - The Texture to add the Frames to.\r\n * @param {integer} sourceIndex - The index of the TextureSource.\r\n * @param {object} yaml - The YAML data.\r\n *\r\n * @return {Phaser.Textures.Texture} The Texture modified by this parser.\r\n */\n\n\nvar UnityYAML = function UnityYAML(texture, sourceIndex, yaml) {\n  //  Add in a __BASE entry (for the entire atlas)\n  var source = texture.source[sourceIndex];\n  texture.add('__BASE', sourceIndex, 0, 0, source.width, source.height);\n  imageHeight = source.height;\n  var data = yaml.split('\\n');\n  var lineRegExp = /^[ ]*(- )*(\\w+)+[: ]+(.*)/;\n  var prevSprite = '';\n  var currentSprite = '';\n  var rect = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }; // var pivot = { x: 0, y: 0 };\n  // var border = { x: 0, y: 0, z: 0, w: 0 };\n\n  for (var i = 0; i < data.length; i++) {\n    var results = data[i].match(lineRegExp);\n\n    if (!results) {\n      continue;\n    }\n\n    var isList = results[1] === '- ';\n    var key = results[2];\n    var value = results[3];\n\n    if (isList) {\n      if (currentSprite !== prevSprite) {\n        addFrame(texture, sourceIndex, currentSprite, rect);\n        prevSprite = currentSprite;\n      }\n\n      rect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (key === 'name') {\n      //  Start new list\n      currentSprite = value;\n      continue;\n    }\n\n    switch (key) {\n      case 'x':\n      case 'y':\n      case 'width':\n      case 'height':\n        rect[key] = parseInt(value, 10);\n        break;\n      // case 'pivot':\n      //     pivot = eval('var obj = ' + value);\n      //     break;\n      // case 'border':\n      //     border = eval('var obj = ' + value);\n      //     break;\n    }\n  }\n\n  if (currentSprite !== prevSprite) {\n    addFrame(texture, sourceIndex, currentSprite, rect);\n  }\n\n  return texture;\n};\n\nmodule.exports = UnityYAML;\n/*\r\nExample data:\r\n\r\nTextureImporter:\r\n  spritePivot: {x: .5, y: .5}\r\n  spriteBorder: {x: 0, y: 0, z: 0, w: 0}\r\n  spritePixelsToUnits: 100\r\n  spriteSheet:\r\n    sprites:\r\n    - name: asteroids_0\r\n      rect:\r\n        serializedVersion: 2\r\n        x: 5\r\n        y: 328\r\n        width: 65\r\n        height: 82\r\n      alignment: 0\r\n      pivot: {x: 0, y: 0}\r\n      border: {x: 0, y: 0, z: 0, w: 0}\r\n    - name: asteroids_1\r\n      rect:\r\n        serializedVersion: 2\r\n        x: 80\r\n        y: 322\r\n        width: 53\r\n        height: 88\r\n      alignment: 0\r\n      pivot: {x: 0, y: 0}\r\n      border: {x: 0, y: 0, z: 0, w: 0}\r\n  spritePackingTag: Asteroids\r\n*/","map":null,"metadata":{},"sourceType":"script"}