{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Centroid = require('./Centroid');\n\nvar Offset = require('./Offset');\n/**\r\n * @callback CenterFunction\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to return the center coordinates of.\r\n *\r\n * @return {Phaser.Math.Vector2} The center point of the Triangle according to the function.\r\n */\n\n/**\r\n * Positions the Triangle so that it is centered on the given coordinates.\r\n *\r\n * @function Phaser.Geom.Triangle.CenterOn\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The triangle to be positioned.\r\n * @param {number} x - The horizontal coordinate to center on.\r\n * @param {number} y - The vertical coordinate to center on.\r\n * @param {CenterFunction} [centerFunc] - The function used to center the triangle. Defaults to Centroid centering.\r\n *\r\n * @return {Phaser.Geom.Triangle} The Triangle that was centered.\r\n */\n\n\nvar CenterOn = function CenterOn(triangle, x, y, centerFunc) {\n  if (centerFunc === undefined) {\n    centerFunc = Centroid;\n  } //  Get the center of the triangle\n\n\n  var center = centerFunc(triangle); //  Difference\n\n  var diffX = x - center.x;\n  var diffY = y - center.y;\n  return Offset(triangle, diffX, diffY);\n};\n\nmodule.exports = CenterOn;","map":null,"metadata":{},"sourceType":"script"}