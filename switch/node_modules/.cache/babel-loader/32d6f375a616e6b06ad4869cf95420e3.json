{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Blitter = require('./Blitter');\n\nvar BuildGameObject = require('../BuildGameObject');\n\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\n/**\r\n * Creates a new Blitter Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Blitter Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#blitter\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Blitter} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('blitter', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var frame = GetAdvancedValue(config, 'frame', null);\n  var blitter = new Blitter(this.scene, 0, 0, key, frame);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, blitter, config);\n  return blitter;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":null,"metadata":{},"sourceType":"script"}