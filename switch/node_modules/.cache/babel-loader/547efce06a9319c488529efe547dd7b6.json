{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Point = require('../point/Point');\n\nvar DegToRad = require('../../math/DegToRad');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Rectangle.PerimeterPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - [description]\r\n * @param {integer} angle - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\n\n\nvar PerimeterPoint = function PerimeterPoint(rectangle, angle, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  angle = DegToRad(angle);\n  var s = Math.sin(angle);\n  var c = Math.cos(angle);\n  var dx = c > 0 ? rectangle.width / 2 : rectangle.width / -2;\n  var dy = s > 0 ? rectangle.height / 2 : rectangle.height / -2;\n\n  if (Math.abs(dx * s) < Math.abs(dy * c)) {\n    dy = dx * s / c;\n  } else {\n    dx = dy * c / s;\n  }\n\n  out.x = dx + rectangle.centerX;\n  out.y = dy + rectangle.centerY;\n  return out;\n};\n\nmodule.exports = PerimeterPoint;","map":null,"metadata":{},"sourceType":"script"}