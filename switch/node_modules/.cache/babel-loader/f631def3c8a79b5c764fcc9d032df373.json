{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Takes the given data string and parses it as XML.\r\n * First tries to use the window.DOMParser and reverts to the Microsoft.XMLDOM if that fails.\r\n * The parsed XML object is returned, or `null` if there was an error while parsing the data.\r\n *\r\n * @function Phaser.DOM.ParseXML\r\n * @since 3.0.0\r\n *\r\n * @param {string} data - The XML source stored in a string.\r\n *\r\n * @return {?(DOMParser|ActiveXObject)} The parsed XML data, or `null` if the data could not be parsed.\r\n */\nvar ParseXML = function ParseXML(data) {\n  var xml = '';\n\n  try {\n    if (window['DOMParser']) {\n      var domparser = new DOMParser();\n      xml = domparser.parseFromString(data, 'text/xml');\n    } else {\n      xml = new ActiveXObject('Microsoft.XMLDOM');\n      xml.loadXML(data);\n    }\n  } catch (e) {\n    xml = null;\n  }\n\n  if (!xml || !xml.documentElement || xml.getElementsByTagName('parsererror').length) {\n    return null;\n  } else {\n    return xml;\n  }\n};\n\nmodule.exports = ParseXML;","map":null,"metadata":{},"sourceType":"script"}