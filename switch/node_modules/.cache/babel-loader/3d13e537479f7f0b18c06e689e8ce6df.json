{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Used internally by the KeyCombo class.\r\n * Return `true` if it reached the end of the combo, `false` if not.\r\n *\r\n * @function Phaser.Input.Keyboard.KeyCombo.AdvanceKeyCombo\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {KeyboardEvent} event - The native Keyboard Event.\r\n * @param {Phaser.Input.Keyboard.KeyCombo} combo - The KeyCombo object to advance.\r\n *\r\n * @return {boolean} `true` if it reached the end of the combo, `false` if not.\r\n */\nvar AdvanceKeyCombo = function AdvanceKeyCombo(event, combo) {\n  combo.timeLastMatched = event.timeStamp;\n  combo.index++;\n\n  if (combo.index === combo.size) {\n    return true;\n  } else {\n    combo.current = combo.keyCodes[combo.index];\n    return false;\n  }\n};\n\nmodule.exports = AdvanceKeyCombo;","map":null,"metadata":{},"sourceType":"script"}