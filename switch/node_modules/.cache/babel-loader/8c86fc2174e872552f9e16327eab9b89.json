{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar SafeRange = require('./SafeRange');\n/**\r\n * Passes each element in the array, between the start and end indexes, to the given callback.\r\n *\r\n * @function Phaser.Utils.Array.EachInRange\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to search.\r\n * @param {function} callback - A callback to be invoked for each item in the array.\r\n * @param {object} context - The context in which the callback is invoked.\r\n * @param {integer} startIndex - The start index to search from.\r\n * @param {integer} endIndex - The end index to search to.\r\n * @param {...*} [args] - Additional arguments that will be passed to the callback, after the child.\r\n *\r\n * @return {array} The input array.\r\n */\n\n\nvar EachInRange = function EachInRange(array, callback, context, startIndex, endIndex) {\n  if (startIndex === undefined) {\n    startIndex = 0;\n  }\n\n  if (endIndex === undefined) {\n    endIndex = array.length;\n  }\n\n  if (SafeRange(array, startIndex, endIndex)) {\n    var i;\n    var args = [null];\n\n    for (i = 5; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    for (i = startIndex; i < endIndex; i++) {\n      args[0] = array[i];\n      callback.apply(context, args);\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = EachInRange;","map":null,"metadata":{},"sourceType":"script"}