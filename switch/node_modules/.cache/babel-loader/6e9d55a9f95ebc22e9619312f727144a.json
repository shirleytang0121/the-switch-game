{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Snap a value to nearest grid slice, using ceil.\r\n *\r\n * Example: if you have an interval gap of `5` and a position of `12`... you will snap to `15`.\r\n * As will `14` snap to `15`... but `16` will snap to `20`.\r\n *\r\n * @function Phaser.Math.Snap.Ceil\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to snap.\r\n * @param {number} gap - The interval gap of the grid.\r\n * @param {number} [start=0] - Optional starting offset for gap.\r\n * @param {boolean} [divide=false] - If `true` it will divide the snapped value by the gap before returning.\r\n *\r\n * @return {number} The snapped value.\r\n */\nvar SnapCeil = function SnapCeil(value, gap, start, divide) {\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (gap === 0) {\n    return value;\n  }\n\n  value -= start;\n  value = gap * Math.ceil(value / gap);\n  return divide ? (start + value) / gap : start + value;\n};\n\nmodule.exports = SnapCeil;","map":null,"metadata":{},"sourceType":"script"}