{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Contains = require('../circle/Contains');\n\nvar Point = require('../point/Point');\n\nvar tmp = new Point();\n/**\r\n * Checks for intersection between the line segment and circle.\r\n *\r\n * Based on code by [Matt DesLauriers](https://github.com/mattdesl/line-circle-collision/blob/master/LICENSE.md).\r\n *\r\n * @function Phaser.Geom.Intersects.LineToCircle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line segment to check.\r\n * @param {Phaser.Geom.Circle} circle - The circle to check against the line.\r\n * @param {(Phaser.Geom.Point|any)} [nearest] - An optional Point-like object. If given the closest point on the Line where the circle intersects will be stored in this object.\r\n *\r\n * @return {boolean} `true` if the two objects intersect, otherwise `false`.\r\n */\n\nvar LineToCircle = function LineToCircle(line, circle, nearest) {\n  if (nearest === undefined) {\n    nearest = tmp;\n  }\n\n  if (Contains(circle, line.x1, line.y1)) {\n    nearest.x = line.x1;\n    nearest.y = line.y1;\n    return true;\n  }\n\n  if (Contains(circle, line.x2, line.y2)) {\n    nearest.x = line.x2;\n    nearest.y = line.y2;\n    return true;\n  }\n\n  var dx = line.x2 - line.x1;\n  var dy = line.y2 - line.y1;\n  var lcx = circle.x - line.x1;\n  var lcy = circle.y - line.y1; //  project lc onto d, resulting in vector p\n\n  var dLen2 = dx * dx + dy * dy;\n  var px = dx;\n  var py = dy;\n\n  if (dLen2 > 0) {\n    var dp = (lcx * dx + lcy * dy) / dLen2;\n    px *= dp;\n    py *= dp;\n  }\n\n  nearest.x = line.x1 + px;\n  nearest.y = line.y1 + py; //  len2 of p\n\n  var pLen2 = px * px + py * py;\n  return pLen2 <= dLen2 && px * dx + py * dy >= 0 && Contains(circle, nearest.x, nearest.y);\n};\n\nmodule.exports = LineToCircle;","map":null,"metadata":{},"sourceType":"script"}