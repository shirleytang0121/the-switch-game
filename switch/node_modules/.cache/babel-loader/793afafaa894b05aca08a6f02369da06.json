{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * @typedef {object} SinCosTable\r\n *\r\n * @property {number} sin - The sine value.\r\n * @property {number} cos - The cosine value.\r\n * @property {number} length - The length.\r\n */\n\n/**\r\n * Generate a series of sine and cosine values.\r\n *\r\n * @function Phaser.Math.SinCosTableGenerator\r\n * @since 3.0.0\r\n *\r\n * @param {number} length - The number of values to generate.\r\n * @param {number} [sinAmp=1] - The sine value amplitude.\r\n * @param {number} [cosAmp=1] - The cosine value amplitude.\r\n * @param {number} [frequency=1] - The frequency of the values.\r\n *\r\n * @return {SinCosTable} The generated values.\r\n */\nvar SinCosTableGenerator = function SinCosTableGenerator(length, sinAmp, cosAmp, frequency) {\n  if (sinAmp === undefined) {\n    sinAmp = 1;\n  }\n\n  if (cosAmp === undefined) {\n    cosAmp = 1;\n  }\n\n  if (frequency === undefined) {\n    frequency = 1;\n  }\n\n  frequency *= Math.PI / length;\n  var cos = [];\n  var sin = [];\n\n  for (var c = 0; c < length; c++) {\n    cosAmp -= sinAmp * frequency;\n    sinAmp += cosAmp * frequency;\n    cos[c] = cosAmp;\n    sin[c] = sinAmp;\n  }\n\n  return {\n    sin: sin,\n    cos: cos,\n    length: length\n  };\n};\n\nmodule.exports = SinCosTableGenerator;","map":null,"metadata":{},"sourceType":"script"}