{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar Graphics = require('./Graphics');\n/**\r\n * Creates a new Graphics Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Graphics Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#graphics\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Graphics} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('graphics', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  var graphics = new Graphics(this.scene, config);\n\n  if (config.add) {\n    this.scene.sys.displayList.add(graphics);\n  }\n\n  return graphics;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":null,"metadata":{},"sourceType":"script"}