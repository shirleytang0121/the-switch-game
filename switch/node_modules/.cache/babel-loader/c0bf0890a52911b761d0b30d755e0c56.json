{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Clamp = require('../../math/Clamp');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Physics.Impact.GetVelocity\r\n * @since 3.0.0\r\n *\r\n * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n * @param {number} vel - [description]\r\n * @param {number} accel - [description]\r\n * @param {number} friction - [description]\r\n * @param {number} max - [description]\r\n *\r\n * @return {number} [description]\r\n */\n\n\nvar GetVelocity = function GetVelocity(delta, vel, accel, friction, max) {\n  if (accel) {\n    return Clamp(vel + accel * delta, -max, max);\n  } else if (friction) {\n    var frictionDelta = friction * delta;\n\n    if (vel - frictionDelta > 0) {\n      return vel - frictionDelta;\n    } else if (vel + frictionDelta < 0) {\n      return vel + frictionDelta;\n    } else {\n      return 0;\n    }\n  }\n\n  return Clamp(vel, -max, max);\n};\n\nmodule.exports = GetVelocity;","map":null,"metadata":{},"sourceType":"script"}