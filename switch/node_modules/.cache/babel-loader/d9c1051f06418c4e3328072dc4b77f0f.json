{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shirl\\\\Desktop\\\\the-switch-game-master\\\\the-switch-game-master\\\\switch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport Phaser from 'phaser';\nimport { Blank } from '../objects/Blank';\nimport { Player } from '../objects/Player';\nimport { Card } from '../objects/Card';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Amplify, { Auth } from 'aws-amplify';\nimport * as mutations from '../../../graphql/mutations';\nimport * as subscriptions from '../../../graphql/subscriptions';\nimport * as queries from '../../../graphql/queries';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport aws_config from '../../../aws-exports';\nimport gql from 'graphql-tag';\nvar client = new AWSAppSyncClient({\n  url: aws_config.aws_appsync_graphqlEndpoint,\n  region: aws_config.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.API_KEY,\n    apiKey: aws_config.aws_appsync_apiKey\n  }\n});\nexport var GameBoard =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(GameBoard, _Phaser$Scene);\n\n  function GameBoard() {\n    _classCallCheck(this, GameBoard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GameBoard).call(this, {\n      key: 'GameBoard'\n    }));\n  }\n\n  _createClass(GameBoard, [{\n    key: \"create\",\n    value: function create() {\n      var _this = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.appsync();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n\n      this.gameBoard = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]; //display board\n\n      var boardbg = this.add.image(400, 80, 'boardbg');\n      boardbg.setOrigin(0, 0).setScale(2.8, 2.8);\n      var x_pos1 = 0;\n      var y_pos1 = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          this.blank = new Blank(this, 405 + x_pos1, 85 + y_pos1, 'blank').data.set('card_number', 53);\n          x_pos1 += 65;\n        }\n\n        y_pos1 += 65;\n        x_pos1 = 0;\n      }\n\n      var card_number = 0;\n      var nums = [],\n          ranNums = [];\n\n      for (var k = 0; k < 52; k++) {\n        nums.push(k);\n      }\n\n      var m = nums.length,\n          n = 0;\n\n      while (m--) {\n        n = Math.floor(Math.random() * (m + 1));\n        ranNums.push(nums[n]);\n        nums.splice(n, 1);\n      } //display board\n\n\n      var x_pos = 0;\n      var y_pos = 0;\n\n      for (var i = 0; i < 6; i++) {\n        for (var j = 0; j < 6; j++) {\n          var generatecard = ranNums[card_number];\n          this.card = new Card(this, 405 + x_pos, 85 + y_pos, 'cards', generatecard).setOrigin(0, 0).setInteractive().setDataEnabled();\n          this.card.data.set('card_number', card_number);\n          x_pos += 65;\n          card_number++;\n        }\n\n        y_pos += 65;\n        x_pos = 0;\n      }\n\n      var player1 = new Player(this, 405, 85, 'chess_red', 1).setOrigin(0, 0);\n      var player2 = new Player(this, 730, 85, 'chess_blue', 2).setOrigin(0, 0);\n      var player = [];\n      player.push(player1);\n      player.push(player2);\n      var gameState = 'gaming'; //need user name array\n\n      var userName = ['switch', 'noviah'];\n      var seat = 0;\n      this.clickedBox(player, seat, userName);\n    } //check if the login user is in his round\n\n  }, {\n    key: \"checkUserInfo\",\n    value: function checkUserInfo(name, x, y, player) {\n      var _this2 = this;\n\n      Auth.currentUserInfo().then(function (userInfo) {\n        var username = userInfo.username;\n\n        if (name == username) {\n          _this2.decideMove(x, y, player);\n        } else {\n          console.log('update');\n        }\n      });\n    } //move card\n\n  }, {\n    key: \"decideMove\",\n    value: function decideMove(x, y, player) {\n      player.setX(x);\n      player.setY(y);\n    } //move the card to the side\n\n  }, {\n    key: \"handlePlayerCard\",\n    value: function handlePlayerCard(card, arrangepostion, seat, data) {\n      if (seat == 0 && data != 53) {\n        arrangepostion -= 10;\n        card.setX(10 + arrangepostion);\n        card.setY(70);\n        card.setScale(0.1, 0.1);\n      } else if (seat == 1 && data != 53) {\n        arrangepostion -= 10;\n        card.setX(900 + arrangepostion);\n        card.setY(70);\n        card.setScale(0.1, 0.1);\n      }\n    } //************************************************ */\n    //the thing you need\n    //*********************************************** */\n\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var nameWeGot, result2;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return client.hydrated();\n\n              case 2:\n                nameWeGot = 'noviah'; // const result1 = await client.query({\n                // \tquery: gql(queries.listQws),\n                // \tfetchPolicy: 'cache-only',\n                // });\n\n                _context2.next = 5;\n                return client.query({\n                  query: gql(queries.getQw),\n                  variables: {\n                    username: nameWeGot\n                  },\n                  fetchPolicy: 'cache-first'\n                });\n\n              case 5:\n                result2 = _context2.sent;\n                //\tconsole.log(result1.data.listQws.items);\n                console.log('the result is' + result2.data.getQw.x);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"updateCardData\",\n    value: function () {\n      var _updateCardData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(card, x, y) {\n        var cardV, xV, yV, getUser, name, thething, newThing;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                cardV = card;\n                console.log(cardV);\n                xV = x;\n                console.log(\"x : \" + xV);\n                yV = y;\n                console.log(\"y : \" + yV);\n                _context3.next = 8;\n                return Auth.currentAuthenticatedUser();\n\n              case 8:\n                getUser = _context3.sent;\n                name = getUser.username;\n                console.log('your name : ' + name);\n                thething = {\n                  username: name,\n                  whichCard: cardV,\n                  x: xV,\n                  y: yV\n                };\n                _context3.next = 14;\n                return API.graphql(graphqlOperation(mutations.updateQw, {\n                  input: thething\n                }));\n\n              case 14:\n                newThing = _context3.sent;\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateCardData(_x, _x2, _x3) {\n        return _updateCardData.apply(this, arguments);\n      }\n\n      return updateCardData;\n    }() //click the card and make it move\n\n  }, {\n    key: \"clickedBox\",\n    value: function clickedBox(player, seat, userName) {\n      var _this3 = this;\n\n      var arrangepostion = 0;\n      this.input.on('gameobjectdown', function (pointer, gameObject) {\n        for (var i = 0; i < 36; i++) {\n          if (_this3.gameBoard[i] == i) {\n            if (gameObject.x == player[seat].x || gameObject.y == player[seat].y) {\n              _this3.checkUserInfo(userName[seat], gameObject.x, gameObject.y, player[seat]); //this.handlePlayerCard(gameObject,arrangepostion,seat,gameObject.data.get('card_number'))\n              //arrangepostion+=15\n\n\n              _this3.updateCardData(3, gameObject.x, gameObject.y);\n\n              _this3.getData();\n\n              if (seat < 1) {\n                seat++;\n              } else {\n                seat--;\n              }\n\n              break;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(time, delta) {}\n  }]);\n\n  return GameBoard;\n}(Phaser.Scene);","map":{"version":3,"sources":["C:\\Users\\shirl\\Desktop\\the-switch-game-master\\the-switch-game-master\\switch\\src\\Pages\\phaser\\scenes\\GameBoard.js"],"names":["Phaser","Blank","Player","Card","API","graphqlOperation","Amplify","Auth","mutations","subscriptions","queries","ConsoleLogger","AWSAppSyncClient","AUTH_TYPE","aws_config","gql","client","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","API_KEY","apiKey","aws_appsync_apiKey","GameBoard","key","appsync","gameBoard","boardbg","add","image","setOrigin","setScale","x_pos1","y_pos1","i","j","blank","data","set","card_number","nums","ranNums","k","push","m","length","n","Math","floor","random","splice","x_pos","y_pos","generatecard","card","setInteractive","setDataEnabled","player1","player2","player","gameState","userName","seat","clickedBox","name","x","y","currentUserInfo","then","userInfo","username","decideMove","console","log","setX","setY","arrangepostion","hydrated","nameWeGot","query","getQw","variables","fetchPolicy","result2","cardV","xV","yV","currentAuthenticatedUser","getUser","thething","whichCard","graphql","updateQw","input","newThing","on","pointer","gameObject","checkUserInfo","updateCardData","getData","time","delta","Scene"],"mappings":"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","sourcesContent":["import Phaser from 'phaser';\nimport {Blank} from '../objects/Blank';\nimport {Player} from '../objects/Player';\nimport {Card} from '../objects/Card';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport Amplify, { Auth } from 'aws-amplify';\nimport * as mutations from '../../../graphql/mutations';\nimport * as subscriptions from '../../../graphql/subscriptions'\nimport * as queries from '../../../graphql/queries'\n\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport aws_config from '../../../aws-exports';\nimport gql from 'graphql-tag';\n\nconst client = new AWSAppSyncClient({\n  url: aws_config.aws_appsync_graphqlEndpoint,\n  region: aws_config.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.API_KEY,\n    apiKey: aws_config.aws_appsync_apiKey,\n  }\n});\n\nexport class GameBoard extends Phaser.Scene {\n\tconstructor() {\n\t\tsuper({\n\t\t\tkey: 'GameBoard',\n\t\t});\n\t\t\n\n\t}\n\t\n\n\n\tcreate() {\n\n\t\t(async () => {\n\t\t\tthis.appsync();\n\t\t})();\n\t\n\t\t\n\n\n\t\tthis.gameBoard = [0,1,2,3,4,5,6,7,8,9,10,\n\t\t\t11,12,13,14,15,16,17,18,19,20,21,22,\n\t\t\t23,24,25,26,27,28,29,30,31,32,33,34,35,36];\n\t\t\n        //display board\n\t\tlet boardbg = this.add.image(400, 80, 'boardbg');\n\t\tboardbg.setOrigin(0, 0).setScale(2.8,2.8);\n\t\tlet x_pos1=0;\n\t\tlet y_pos1=0;\n\t\tfor(var i=0;i<6;i++){\n\t\t\tfor(var j=0 ;j<6;j++){\n\t\t\t   this.blank=new Blank(this,405+x_pos1,85+y_pos1,'blank').data.set('card_number', 53);\n\t\t\t\tx_pos1+=65;\n\t\t\t }\n\t\t\t   y_pos1+=65;\n\t\t\t   x_pos1=0;\n\t\t   }\n\t\t   let card_number=0;\n\t\t   let nums=[],\n\t\t\t   ranNums = [];\n\t\t  for(var k=0;k<52;k++){\n\t\t   nums.push(k);\n\t\t\t}\n\t\t   let m = nums.length,\n\t\t\t   n = 0;\n\t   while (m--) {\n\t\t   n = Math.floor(Math.random() * (m+1));\n\t\t   ranNums.push(nums[n]);\n\t\t   nums.splice(n,1);\n\t   }\n\t   //display board\n\t\t\tlet x_pos=0;\n\t\t\tlet y_pos=0;  \n\t\t   for(var i=0;i<6;i++){\n\t\t\tfor(var j=0 ;j<6;j++){\n\t\t\t   var generatecard=ranNums[card_number]\n\t\t\t   this.card=new Card(this,405+x_pos,85+y_pos,'cards',generatecard).setOrigin(0, 0).setInteractive().setDataEnabled()\n\t\t\t   this.card.data.set('card_number', card_number);\n\t\t\t\tx_pos+=65;\n\t\t\t\tcard_number++;\n\t\t\t }\n\t\t\t   y_pos+=65;\n\t\t\t   x_pos=0;\n\t\t   }\n\t\t\t let player1=new Player(this,405,85,'chess_red',1).setOrigin(0,0)\n\t\t\t let player2=new Player(this,730,85,'chess_blue',2).setOrigin(0,0)\n\n\t\t\t let player=[]\n\t\t\t player.push(player1)\n\t\t\t player.push(player2)\n\t\t\t\t\n\t\t\t let gameState='gaming';\n\t\t//need user name array\n\t\tlet userName=['switch','noviah']\n\n\t\tlet seat=0;\n\t\t\t\n\t\tthis.clickedBox(player,seat,userName)\n\t\t   \n\t}\n\n\t//check if the login user is in his round\n\tcheckUserInfo(name,x,y,player) {\n    Auth.currentUserInfo().then((userInfo) => {\n\t\t\tconst { username } = userInfo;\n      if(name==username){\n\t\t\t\tthis.decideMove(x,y,player)\n\t\t\t}else{\n\t\t\t\tconsole.log('update')\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t)\n  }\n\t\t\n\n\n\t//move card\n\tdecideMove(x,y,player){\n\t\tplayer.setX(x)\n\t\tplayer.setY(y)\n\t}\n\n\t//move the card to the side\n\thandlePlayerCard(card,arrangepostion,seat,data){\n\t\tif(seat==0&&data!=53){\n\t\tarrangepostion-=10\n\t\tcard.setX(10+arrangepostion);\n\t\tcard.setY(70);\n\t\tcard.setScale(0.1,0.1)\n\t\t}else if(seat==1&&data!=53){\n\t\tarrangepostion-=10\n\t\tcard.setX(900+arrangepostion);\n\t\tcard.setY(70);\n\t\tcard.setScale(0.1,0.1)\n\t\t}\n\t}\n\n//************************************************ */\n//the thing you need\n//*********************************************** */\n\n\n\tasync getData (){\n\n\t\t\t//result1  show the list\n\t\t\t//result2  show only username = 'test5' \n\t\t\tawait client.hydrated();\n\t\t\tconst nameWeGot = 'noviah';\n\t\t\t// const result1 = await client.query({\n\t\t\t// \tquery: gql(queries.listQws),\n\t\t\t// \tfetchPolicy: 'cache-only',\n\t\t\t// });\n\t\t\tconst result2 = await client.query({\n\t\t\t\tquery: gql(queries.getQw),\n\t\t\t\tvariables: {\n\t\t\t\t\tusername: nameWeGot\n\t\t\t\t},\n\t\t\t\tfetchPolicy: 'cache-first',\n\t\t\t});\n\t\t//\tconsole.log(result1.data.listQws.items);\n\t\t\tconsole.log('the result is'+result2.data.getQw.x)\n\t\t}\t\n\n\t\n\t\n\tasync updateCardData(card,x,y){\n\t\tconst cardV = card;\n\t\tconsole.log(cardV)\n\t\tconst xV =x;\n\t\tconsole.log(\"x : \"+xV)\n\t\tconst yV = y;\n\t\tconsole.log(\"y : \"+yV);\n\t\tconst getUser = await Auth.currentAuthenticatedUser();\n\t\t\t\t\t\t\tconst name = getUser.username;\n\t\t\t\t\t\t\tconsole.log('your name : ' +name);\n\t\tconst thething = {\n\t\t\t\t\tusername : name,\n\t\t\t\t\twhichCard : cardV,\n\t\t\t\t\t\t\tx : xV,\n\t\t\t\t\t\t\ty : yV\n\t\t\t\t\t\t};\n\t const newThing = await API.graphql(graphqlOperation(mutations.updateQw, {input: thething}));\n\t}\n\t\n\t\n\n\n\n\t//click the card and make it move\n\tclickedBox(player,seat,userName){\n\t\t\n\t\tvar arrangepostion=0;\n\t\tthis.input.on('gameobjectdown', (pointer, gameObject) => {\n\t\t\tfor(var i=0;i<36;i++){\n\t\t\t\tif(this.gameBoard[i] == i ){\n\t\t\t\t\tif(gameObject.x==player[seat].x||gameObject.y==player[seat].y){\n\t\t\t\t\t\tthis.checkUserInfo(userName[seat],gameObject.x,gameObject.y,player[seat])\n\t\t\t\t\t\t//this.handlePlayerCard(gameObject,arrangepostion,seat,gameObject.data.get('card_number'))\n\t\t\t\t\t\t//arrangepostion+=15\n\t\t\t\t\t\tthis.updateCardData(3,gameObject.x,gameObject.y)\n\t\t\t\t\t\tthis.getData()\n\t\t\t\t\t\tif(seat<1){\n\t\t\t\t\t\t\tseat++\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tseat--\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\n\t\t\t\t\n\t\t\t}\t\n\t\n\t}\n\n\t\t\t\n\t});\n\n}\n\t\n\tupdate(time, delta) {\n\t\t\n\t\t\n\t}\n}"]},"metadata":{},"sourceType":"module"}