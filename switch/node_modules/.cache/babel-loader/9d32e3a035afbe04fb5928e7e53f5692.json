{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Provides methods used for setting the angular acceleration properties of an Arcade Physics Body.\r\n *\r\n * @name Phaser.Physics.Arcade.Components.Angular\r\n * @since 3.0.0\r\n */\nvar Angular = {\n  /**\r\n   * Sets the angular velocity of the body.\r\n   * \r\n   * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n   * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n   * causing them to visually rotate, even though the body remains axis-aligned.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Angular#setAngularVelocity\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of angular velocity.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAngularVelocity: function setAngularVelocity(value) {\n    this.body.angularVelocity = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the angular acceleration of the body.\r\n   * \r\n   * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\r\n   * However, they can have angular motion, which is passed on to the Game Object bound to the body,\r\n   * causing them to visually rotate, even though the body remains axis-aligned.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Angular#setAngularAcceleration\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of angular acceleration.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAngularAcceleration: function setAngularAcceleration(value) {\n    this.body.angularAcceleration = value;\n    return this;\n  },\n\n  /**\r\n   * Sets the angular drag of the body. Drag is applied to the current velocity, providing a form of deceleration.\r\n   *\r\n   * @method Phaser.Physics.Arcade.Components.Angular#setAngularDrag\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} value - The amount of drag.\r\n   *\r\n   * @return {this} This Game Object.\r\n   */\n  setAngularDrag: function setAngularDrag(value) {\n    this.body.angularDrag = value;\n    return this;\n  }\n};\nmodule.exports = Angular;","map":null,"metadata":{},"sourceType":"script"}