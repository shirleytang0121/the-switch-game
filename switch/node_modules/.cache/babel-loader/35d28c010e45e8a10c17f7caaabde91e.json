{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar CSSBlendModes = require('./CSSBlendModes');\n\nvar GameObject = require('../GameObject');\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.DOMElement#renderWebGL\r\n * @since 3.12.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active renderer.\r\n * @param {Phaser.GameObjects.DOMElement} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n */\n\n\nvar DOMElementCSSRenderer = function DOMElementCSSRenderer(renderer, src, interpolationPercentage, camera) {\n  var node = src.node;\n\n  if (!node || GameObject.RENDER_MASK !== src.renderFlags || src.cameraFilter !== 0 && src.cameraFilter & camera.id) {\n    if (node) {\n      node.style.display = 'none';\n    }\n\n    return;\n  }\n\n  var camMatrix = renderer._tempMatrix1;\n  var spriteMatrix = renderer._tempMatrix2;\n  var calcMatrix = renderer._tempMatrix3;\n  var x = src.originX * src.width;\n  var y = src.originY * src.height;\n  spriteMatrix.applyITRS(src.x - x - camera.scrollX * src.scrollFactorX, src.y - y - camera.scrollY * src.scrollFactorY, src.rotation, src.scaleX, src.scaleY);\n  camMatrix.copyFrom(camera.matrix);\n  camMatrix.multiply(spriteMatrix, calcMatrix);\n  node.style.display = 'block';\n  node.style.opacity = src.alpha;\n  node.style.zIndex = src._depth;\n  node.style.pointerEvents = 'auto';\n  node.style.mixBlendMode = CSSBlendModes[src._blendMode]; // https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n\n  node.style.transform = calcMatrix.getCSSMatrix() + ' skew(' + src.skewX + 'rad, ' + src.skewY + 'rad)' + ' rotate3d(' + src.rotate3d.x + ',' + src.rotate3d.y + ',' + src.rotate3d.z + ',' + src.rotate3d.w + src.rotate3dAngle + ')'; // node.style.transform = calcMatrix.getCSSMatrix();\n\n  node.style.transformOrigin = 100 * src.originX + '% ' + 100 * src.originY + '%';\n};\n\nmodule.exports = DOMElementCSSRenderer;","map":null,"metadata":{},"sourceType":"script"}