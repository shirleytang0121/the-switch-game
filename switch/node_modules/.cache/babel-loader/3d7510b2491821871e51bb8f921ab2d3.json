{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Rotates an entire Triangle at a given angle about a specific point.\r\n *\r\n * @function Phaser.Geom.Triangle.RotateAroundXY\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle} O - [triangle,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to rotate.\r\n * @param {number} x - The X coordinate of the point to rotate the Triangle about.\r\n * @param {number} y - The Y coordinate of the point to rotate the Triangle about.\r\n * @param {number} angle - The angle by which to rotate the Triangle, in radians.\r\n *\r\n * @return {Phaser.Geom.Triangle} The rotated Triangle.\r\n */\nvar RotateAroundXY = function RotateAroundXY(triangle, x, y, angle) {\n  var c = Math.cos(angle);\n  var s = Math.sin(angle);\n  var tx = triangle.x1 - x;\n  var ty = triangle.y1 - y;\n  triangle.x1 = tx * c - ty * s + x;\n  triangle.y1 = tx * s + ty * c + y;\n  tx = triangle.x2 - x;\n  ty = triangle.y2 - y;\n  triangle.x2 = tx * c - ty * s + x;\n  triangle.y2 = tx * s + ty * c + y;\n  tx = triangle.x3 - x;\n  ty = triangle.y3 - y;\n  triangle.x3 = tx * c - ty * s + x;\n  triangle.y3 = tx * s + ty * c + y;\n  return triangle;\n};\n\nmodule.exports = RotateAroundXY;","map":null,"metadata":{},"sourceType":"script"}