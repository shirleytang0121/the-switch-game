{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Takes an array of Game Objects and positions them on evenly spaced points around the perimeter of an Ellipse.\r\n * \r\n * If you wish to pass a `Phaser.GameObjects.Ellipse` Shape to this function, you should pass its `geom` property.\r\n *\r\n * @function Phaser.Actions.PlaceOnEllipse\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to position the Game Objects on.\r\n * @param {number} [startAngle=0] - Optional angle to start position from, in radians.\r\n * @param {number} [endAngle=6.28] - Optional angle to stop position at, in radians.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\nvar PlaceOnEllipse = function PlaceOnEllipse(items, ellipse, startAngle, endAngle) {\n  if (startAngle === undefined) {\n    startAngle = 0;\n  }\n\n  if (endAngle === undefined) {\n    endAngle = 6.28;\n  }\n\n  var angle = startAngle;\n  var angleStep = (endAngle - startAngle) / items.length;\n  var a = ellipse.width / 2;\n  var b = ellipse.height / 2;\n\n  for (var i = 0; i < items.length; i++) {\n    items[i].x = ellipse.x + a * Math.cos(angle);\n    items[i].y = ellipse.y + b * Math.sin(angle);\n    angle += angleStep;\n  }\n\n  return items;\n};\n\nmodule.exports = PlaceOnEllipse;","map":null,"metadata":{},"sourceType":"script"}