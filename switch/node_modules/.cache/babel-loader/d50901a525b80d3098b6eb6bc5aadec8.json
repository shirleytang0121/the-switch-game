{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar LayerData = require('../../mapdata/LayerData');\n\nvar Tile = require('../../Tile');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Impact.ParseTileLayers\r\n * @since 3.0.0\r\n *\r\n * @param {object} json - [description]\r\n * @param {boolean} insertNull - [description]\r\n *\r\n * @return {array} [description]\r\n */\n\n\nvar ParseTileLayers = function ParseTileLayers(json, insertNull) {\n  var tileLayers = [];\n\n  for (var i = 0; i < json.layer.length; i++) {\n    var layer = json.layer[i];\n    var layerData = new LayerData({\n      name: layer.name,\n      width: layer.width,\n      height: layer.height,\n      tileWidth: layer.tilesize,\n      tileHeight: layer.tilesize,\n      visible: layer.visible === 1\n    });\n    var row = [];\n    var tileGrid = []; //  Loop through the data field in the JSON. This is a 2D array containing the tile indexes,\n    //  one after the other. The indexes are relative to the tileset that contains the tile.\n\n    for (var y = 0; y < layer.data.length; y++) {\n      for (var x = 0; x < layer.data[y].length; x++) {\n        // In Weltmeister, 0 = no tile, but the Tilemap API expects -1 = no tile.\n        var index = layer.data[y][x] - 1;\n        var tile;\n\n        if (index > -1) {\n          tile = new Tile(layerData, index, x, y, layer.tilesize, layer.tilesize);\n        } else {\n          tile = insertNull ? null : new Tile(layerData, -1, x, y, layer.tilesize, layer.tilesize);\n        }\n\n        row.push(tile);\n      }\n\n      tileGrid.push(row);\n      row = [];\n    }\n\n    layerData.data = tileGrid;\n    tileLayers.push(layerData);\n  }\n\n  return tileLayers;\n};\n\nmodule.exports = ParseTileLayers;","map":null,"metadata":{},"sourceType":"script"}