{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Return the component parts of a color as an Object with the properties alpha, red, green, blue.\r\n *\r\n * Alpha will only be set if it exists in the given color (0xAARRGGBB)\r\n *\r\n * @function Phaser.Display.Color.IntegerToRGB\r\n * @since 3.0.0\r\n *\r\n * @param {integer} input - The color value to convert into a Color object.\r\n *\r\n * @return {ColorObject} An object with the red, green and blue values set in the r, g and b properties.\r\n */\nvar IntegerToRGB = function IntegerToRGB(color) {\n  if (color > 16777215) {\n    //  The color value has an alpha component\n    return {\n      a: color >>> 24,\n      r: color >> 16 & 0xFF,\n      g: color >> 8 & 0xFF,\n      b: color & 0xFF\n    };\n  } else {\n    return {\n      a: 255,\n      r: color >> 16 & 0xFF,\n      g: color >> 8 & 0xFF,\n      b: color & 0xFF\n    };\n  }\n};\n\nmodule.exports = IntegerToRGB;","map":null,"metadata":{},"sourceType":"script"}