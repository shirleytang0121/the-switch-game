{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar HasTileAt = require('./HasTileAt');\n\nvar WorldToTileX = require('./WorldToTileX');\n\nvar WorldToTileY = require('./WorldToTileY');\n/**\r\n * Checks if there is a tile at the given location (in world coordinates) in the given layer. Returns\r\n * false if there is no tile or if the tile at that location has an index of -1.\r\n *\r\n * @function Phaser.Tilemaps.Components.HasTileAtWorldXY\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {number} worldX - The X coordinate of the world position.\r\n * @param {number} worldY - The Y coordinate of the world position.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when factoring in which tiles to return.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {?boolean} Returns a boolean, or null if the layer given was invalid.\r\n */\n\n\nvar HasTileAtWorldXY = function HasTileAtWorldXY(worldX, worldY, camera, layer) {\n  var tileX = WorldToTileX(worldX, true, camera, layer);\n  var tileY = WorldToTileY(worldY, true, camera, layer);\n  return HasTileAt(tileX, tileY, layer);\n};\n\nmodule.exports = HasTileAtWorldXY;","map":null,"metadata":{},"sourceType":"script"}