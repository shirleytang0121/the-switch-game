{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Bounce ease-in/out.\r\n *\r\n * @function Phaser.Math.Easing.Bounce.InOut\r\n * @since 3.0.0\r\n *\r\n * @param {number} v - The value to be tweened.\r\n *\r\n * @return {number} The tweened value.\r\n */\nvar InOut = function InOut(v) {\n  var reverse = false;\n\n  if (v < 0.5) {\n    v = 1 - v * 2;\n    reverse = true;\n  } else {\n    v = v * 2 - 1;\n  }\n\n  if (v < 1 / 2.75) {\n    v = 7.5625 * v * v;\n  } else if (v < 2 / 2.75) {\n    v = 7.5625 * (v -= 1.5 / 2.75) * v + 0.75;\n  } else if (v < 2.5 / 2.75) {\n    v = 7.5625 * (v -= 2.25 / 2.75) * v + 0.9375;\n  } else {\n    v = 7.5625 * (v -= 2.625 / 2.75) * v + 0.984375;\n  }\n\n  if (reverse) {\n    return (1 - v) * 0.5;\n  } else {\n    return v * 0.5 + 0.5;\n  }\n};\n\nmodule.exports = InOut;","map":null,"metadata":{},"sourceType":"script"}