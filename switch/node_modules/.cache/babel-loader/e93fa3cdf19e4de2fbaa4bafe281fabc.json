{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Extend = require('../../../utils/object/Extend');\n/**\r\n * Copy properties from tileset to tiles.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Tiled.AssignTileProperties\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Tilemaps.MapData} mapData - [description]\r\n */\n\n\nvar AssignTileProperties = function AssignTileProperties(mapData) {\n  var layerData;\n  var tile;\n  var sid;\n  var set;\n  var row; // go through each of the map data layers\n\n  for (var i = 0; i < mapData.layers.length; i++) {\n    layerData = mapData.layers[i];\n    set = null; // rows of tiles\n\n    for (var j = 0; j < layerData.data.length; j++) {\n      row = layerData.data[j]; // individual tiles\n\n      for (var k = 0; k < row.length; k++) {\n        tile = row[k];\n\n        if (tile === null || tile.index < 0) {\n          continue;\n        } // find the relevant tileset\n\n\n        sid = mapData.tiles[tile.index][2];\n        set = mapData.tilesets[sid]; // Ensure that a tile's size matches its tileset\n\n        tile.width = set.tileWidth;\n        tile.height = set.tileHeight; // if that tile type has any properties, add them to the tile object\n\n        if (set.tileProperties && set.tileProperties[tile.index - set.firstgid]) {\n          tile.properties = Extend(tile.properties, set.tileProperties[tile.index - set.firstgid]);\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = AssignTileProperties;","map":null,"metadata":{},"sourceType":"script"}