{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\n/**\r\n * @classdesc\r\n * A class for representing data about about a layer in a map. Maps are parsed from CSV, Tiled,\r\n * etc. into this format. Tilemap, StaticTilemapLayer and DynamicTilemapLayer have a reference\r\n * to this data and use it to look up and perform operations on tiles.\r\n *\r\n * @class LayerData\r\n * @memberof Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {object} [config] - [description]\r\n */\n\n\nvar LayerData = new Class({\n  initialize: function LayerData(config) {\n    if (config === undefined) {\n      config = {};\n    }\n    /**\r\n     * The name of the layer, if specified in Tiled.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#name\r\n     * @type {string}\r\n     * @since 3.0.0\r\n     */\n\n\n    this.name = GetFastValue(config, 'name', 'layer');\n    /**\r\n     * The x offset of where to draw from the top left\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#x\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.x = GetFastValue(config, 'x', 0);\n    /**\r\n     * The y offset of where to draw from the top left\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#y\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.y = GetFastValue(config, 'y', 0);\n    /**\r\n     * The width in tile of the layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#width\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.width = GetFastValue(config, 'width', 0);\n    /**\r\n     * The height in tiles of the layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#height\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.height = GetFastValue(config, 'height', 0);\n    /**\r\n     * The pixel width of the tiles.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#tileWidth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.tileWidth = GetFastValue(config, 'tileWidth', 0);\n    /**\r\n     * The pixel height of the tiles.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#tileHeight\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.tileHeight = GetFastValue(config, 'tileHeight', 0);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#baseTileWidth\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.baseTileWidth = GetFastValue(config, 'baseTileWidth', this.tileWidth);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#baseTileHeight\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.baseTileHeight = GetFastValue(config, 'baseTileHeight', this.tileHeight);\n    /**\r\n     * The width in pixels of the entire layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#widthInPixels\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.widthInPixels = GetFastValue(config, 'widthInPixels', this.width * this.baseTileWidth);\n    /**\r\n     * The height in pixels of the entire layer.\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#heightInPixels\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.heightInPixels = GetFastValue(config, 'heightInPixels', this.height * this.baseTileHeight);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#alpha\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.alpha = GetFastValue(config, 'alpha', 1);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#visible\r\n     * @type {boolean}\r\n     * @since 3.0.0\r\n     */\n\n    this.visible = GetFastValue(config, 'visible', true);\n    /**\r\n     * Layer specific properties (can be specified in Tiled)\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#properties\r\n     * @type {object}\r\n     * @since 3.0.0\r\n     */\n\n    this.properties = GetFastValue(config, 'properties', {});\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#indexes\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.indexes = GetFastValue(config, 'indexes', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#collideIndexes\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.collideIndexes = GetFastValue(config, 'collideIndexes', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#callbacks\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.callbacks = GetFastValue(config, 'callbacks', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#bodies\r\n     * @type {array}\r\n     * @since 3.0.0\r\n     */\n\n    this.bodies = GetFastValue(config, 'bodies', []);\n    /**\r\n     * An array of the tile indexes\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#data\r\n     * @type {(number[])}\r\n     * @since 3.0.0\r\n     */\n\n    this.data = GetFastValue(config, 'data', []);\n    /**\r\n     * [description]\r\n     *\r\n     * @name Phaser.Tilemaps.LayerData#tilemapLayer\r\n     * @type {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)}\r\n     * @since 3.0.0\r\n     */\n\n    this.tilemapLayer = GetFastValue(config, 'tilemapLayer', null);\n  }\n});\nmodule.exports = LayerData;","map":null,"metadata":{},"sourceType":"script"}