{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetTilesWithin = require('./GetTilesWithin');\n\nvar CalculateFacesWithin = require('./CalculateFacesWithin');\n\nvar SetTileCollision = require('./SetTileCollision');\n/**\r\n * Sets the tiles in the given rectangular area (in tile coordinates) of the layer with the\r\n * specified index. Tiles will be set to collide if the given index is a colliding index.\r\n * Collision information in the region will be recalculated.\r\n *\r\n * @function Phaser.Tilemaps.Components.Fill\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} index - The tile index to fill the area with.\r\n * @param {integer} tileX - The left most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} tileY - The top most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} width - How many tiles wide from the `tileX` index the area will be.\r\n * @param {integer} height - How many tiles tall from the `tileY` index the area will be.\r\n * @param {boolean} recalculateFaces - `true` if the faces data should be recalculated.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The tile layer to use. If not given the current layer is used.\r\n */\n\n\nvar Fill = function Fill(index, tileX, tileY, width, height, recalculateFaces, layer) {\n  var doesIndexCollide = layer.collideIndexes.indexOf(index) !== -1;\n  var tiles = GetTilesWithin(tileX, tileY, width, height, null, layer);\n\n  for (var i = 0; i < tiles.length; i++) {\n    tiles[i].index = index;\n    SetTileCollision(tiles[i], doesIndexCollide);\n  }\n\n  if (recalculateFaces) {\n    // Recalculate the faces within the area and neighboring tiles\n    CalculateFacesWithin(tileX - 1, tileY - 1, width + 2, height + 2, layer);\n  }\n};\n\nmodule.exports = Fill;","map":null,"metadata":{},"sourceType":"script"}