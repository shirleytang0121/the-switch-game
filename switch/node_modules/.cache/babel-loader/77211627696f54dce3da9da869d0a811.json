{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetValue = require('./GetValue');\n\nvar Clamp = require('../../math/Clamp');\n/**\r\n * Retrieves and clamps a numerical value from an object.\r\n *\r\n * @function Phaser.Utils.Objects.GetMinMaxValue\r\n * @since 3.0.0\r\n *\r\n * @param {object} source - The object to retrieve the value from.\r\n * @param {string} key - The name of the property to retrieve from the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`).\r\n * @param {number} min - The minimum value which can be returned.\r\n * @param {number} max - The maximum value which can be returned.\r\n * @param {number} defaultValue - The value to return if the property doesn't exist. It's also constrained to the given bounds.\r\n *\r\n * @return {number} The clamped value from the `source` object.\r\n */\n\n\nvar GetMinMaxValue = function GetMinMaxValue(source, key, min, max, defaultValue) {\n  if (defaultValue === undefined) {\n    defaultValue = min;\n  }\n\n  var value = GetValue(source, key, defaultValue);\n  return Clamp(value, min, max);\n};\n\nmodule.exports = GetMinMaxValue;","map":null,"metadata":{},"sourceType":"script"}