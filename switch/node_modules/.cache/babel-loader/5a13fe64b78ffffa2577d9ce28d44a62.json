{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\n/**\r\n * @classdesc\r\n * A class for representing a Tiled object layer in a map. This mirrors the structure of a Tiled\r\n * object layer, except:\r\n *  - \"x\" & \"y\" properties are ignored since these cannot be changed in Tiled.\r\n *  - \"offsetx\" & \"offsety\" are applied to the individual object coordinates directly, so they\r\n *    are ignored as well.\r\n *  - \"draworder\" is ignored.\r\n *\r\n * @class ObjectLayer\r\n * @memberof Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {object} [config] - The data for the layer from the Tiled JSON object.\r\n */\n\n\nvar ObjectLayer = new Class({\n  initialize: function ObjectLayer(config) {\n    if (config === undefined) {\n      config = {};\n    }\n    /**\r\n     * The name of the Object Layer.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#name\r\n     * @type {string}\r\n     * @since 3.0.0\r\n     */\n\n\n    this.name = GetFastValue(config, 'name', 'object layer');\n    /**\r\n     * The opacity of the layer, between 0 and 1.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#opacity\r\n     * @type {number}\r\n     * @since 3.0.0\r\n     */\n\n    this.opacity = GetFastValue(config, 'opacity', 1);\n    /**\r\n     * The custom properties defined on the Object Layer, keyed by their name.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#properties\r\n     * @type {object}\r\n     * @since 3.0.0\r\n     */\n\n    this.properties = GetFastValue(config, 'properties', {});\n    /**\r\n     * The type of each custom property defined on the Object Layer, keyed by its name.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#propertyTypes\r\n     * @type {object}\r\n     * @since 3.0.0\r\n     */\n\n    this.propertyTypes = GetFastValue(config, 'propertytypes', {});\n    /**\r\n     * The type of the layer, which should be `objectgroup`.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#type\r\n     * @type {string}\r\n     * @since 3.0.0\r\n     */\n\n    this.type = GetFastValue(config, 'type', 'objectgroup');\n    /**\r\n     * Whether the layer is shown (`true`) or hidden (`false`).\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#visible\r\n     * @type {boolean}\r\n     * @since 3.0.0\r\n     */\n\n    this.visible = GetFastValue(config, 'visible', true);\n    /**\r\n     * An array of all objects on this Object Layer.\r\n     *\r\n     * Each Tiled object corresponds to a JavaScript object in this array. It has an `id` (unique), `name` (as assigned in Tiled), `type` (as assigned in Tiled), `rotation` (in clockwise degrees), `properties` (if any), `visible` state (`true` if visible, `false` otherwise), `x` and `y` coordinates (in pixels, relative to the tilemap), and a `width` and `height` (in pixels).\r\n     *\r\n     * An object tile has a `gid` property (GID of the represented tile), a `flippedHorizontal` property, a `flippedVertical` property, and `flippedAntiDiagonal` property. The {@link http://docs.mapeditor.org/en/latest/reference/tmx-map-format/|Tiled documentation} contains information on flipping and rotation.\r\n     *\r\n     * Polylines have a `polyline` property, which is an array of objects corresponding to points, where each point has an `x` property and a `y` property. Polygons have an identically structured array in their `polygon` property. Text objects have a `text` property with the text's properties.\r\n     *\r\n     * Rectangles and ellipses have a `rectangle` or `ellipse` property set to `true`.\r\n     *\r\n     * @name Phaser.Tilemaps.ObjectLayer#objects\r\n     * @type {Phaser.GameObjects.GameObject[]}\r\n     * @since 3.0.0\r\n     */\n\n    this.objects = GetFastValue(config, 'objects', []);\n  }\n});\nmodule.exports = ObjectLayer;","map":null,"metadata":{},"sourceType":"script"}