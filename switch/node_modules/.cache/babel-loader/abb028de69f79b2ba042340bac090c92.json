{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar SafeRange = require('./SafeRange');\n/**\r\n * Removes the item within the given range in the array.\r\n * \r\n * The array is modified in-place.\r\n * \r\n * You can optionally specify a callback to be invoked for the item/s successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.RemoveBetween\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {integer} startIndex - The start index to remove from.\r\n * @param {integer} endIndex - The end index to remove to.\r\n * @param {function} [callback] - A callback to be invoked for the item removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {Array.<*>} An array of items that were removed.\r\n */\n\n\nvar RemoveBetween = function RemoveBetween(array, startIndex, endIndex, callback, context) {\n  if (startIndex === undefined) {\n    startIndex = 0;\n  }\n\n  if (endIndex === undefined) {\n    endIndex = array.length;\n  }\n\n  if (context === undefined) {\n    context = array;\n  }\n\n  if (SafeRange(array, startIndex, endIndex)) {\n    var size = endIndex - startIndex;\n    var removed = array.splice(startIndex, size);\n\n    if (callback) {\n      for (var i = 0; i < removed.length; i++) {\n        var entry = removed[i];\n        callback.call(context, entry);\n      }\n    }\n\n    return removed;\n  } else {\n    return [];\n  }\n};\n\nmodule.exports = RemoveBetween;","map":null,"metadata":{},"sourceType":"script"}