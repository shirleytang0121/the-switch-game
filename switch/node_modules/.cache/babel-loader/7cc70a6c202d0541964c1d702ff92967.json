{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Point = require('../point/Point');\n/**\r\n * Returns a uniformly distributed random point from anywhere within the given Circle.\r\n *\r\n * @function Phaser.Geom.Circle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get a random point from.\r\n * @param {(Phaser.Geom.Point|object)} [out] - A Point or point-like object to set the random `x` and `y` values in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object with the random values set in the `x` and `y` properties.\r\n */\n\n\nvar Random = function Random(circle, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  var t = 2 * Math.PI * Math.random();\n  var u = Math.random() + Math.random();\n  var r = u > 1 ? 2 - u : u;\n  var x = r * Math.cos(t);\n  var y = r * Math.sin(t);\n  out.x = circle.x + x * circle.radius;\n  out.y = circle.y + y * circle.radius;\n  return out;\n};\n\nmodule.exports = Random;","map":null,"metadata":{},"sourceType":"script"}