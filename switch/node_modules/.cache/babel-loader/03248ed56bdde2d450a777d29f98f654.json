{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Determines the video support of the browser running this Phaser Game instance.\r\n * These values are read-only and populated during the boot sequence of the game.\r\n * They are then referenced by internal game systems and are available for you to access\r\n * via `this.sys.game.device.video` from within any Scene.\r\n * \r\n * @typedef {object} Phaser.Device.Video\r\n * @since 3.0.0\r\n * \r\n * @property {boolean} h264Video - Can this device play h264 mp4 video files?\r\n * @property {boolean} hlsVideo - Can this device play hls video files?\r\n * @property {boolean} mp4Video - Can this device play h264 mp4 video files?\r\n * @property {boolean} oggVideo - Can this device play ogg video files?\r\n * @property {boolean} vp9Video - Can this device play vp9 video files?\r\n * @property {boolean} webmVideo - Can this device play webm video files?\r\n */\nvar Video = {\n  h264Video: false,\n  hlsVideo: false,\n  mp4Video: false,\n  oggVideo: false,\n  vp9Video: false,\n  webmVideo: false\n};\n\nfunction init() {\n  var videoElement = document.createElement('video');\n  var result = !!videoElement.canPlayType;\n\n  try {\n    if (result) {\n      if (videoElement.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/, '')) {\n        Video.oggVideo = true;\n      }\n\n      if (videoElement.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/, '')) {\n        // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n        Video.h264Video = true;\n        Video.mp4Video = true;\n      }\n\n      if (videoElement.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/, '')) {\n        Video.webmVideo = true;\n      }\n\n      if (videoElement.canPlayType('video/webm; codecs=\"vp9\"').replace(/^no$/, '')) {\n        Video.vp9Video = true;\n      }\n\n      if (videoElement.canPlayType('application/x-mpegURL; codecs=\"avc1.42E01E\"').replace(/^no$/, '')) {\n        Video.hlsVideo = true;\n      }\n    }\n  } catch (e) {//  Nothing to do\n  }\n\n  return Video;\n}\n\nmodule.exports = init();","map":null,"metadata":{},"sourceType":"script"}