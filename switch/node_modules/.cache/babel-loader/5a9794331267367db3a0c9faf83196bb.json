{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Perimeter = require('./Perimeter');\n\nvar Point = require('../point/Point');\n/**\r\n * Position is a value between 0 and 1 where 0 = the top-left of the rectangle and 0.5 = the bottom right.\r\n *\r\n * @function Phaser.Geom.Rectangle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Rectangle} rectangle - [description]\r\n * @param {number} position - [description]\r\n * @param {(Phaser.Geom.Point|object)} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\n\n\nvar GetPoint = function GetPoint(rectangle, position, out) {\n  if (out === undefined) {\n    out = new Point();\n  }\n\n  if (position <= 0 || position >= 1) {\n    out.x = rectangle.x;\n    out.y = rectangle.y;\n    return out;\n  }\n\n  var p = Perimeter(rectangle) * position;\n\n  if (position > 0.5) {\n    p -= rectangle.width + rectangle.height;\n\n    if (p <= rectangle.width) {\n      //  Face 3\n      out.x = rectangle.right - p;\n      out.y = rectangle.bottom;\n    } else {\n      //  Face 4\n      out.x = rectangle.x;\n      out.y = rectangle.bottom - (p - rectangle.width);\n    }\n  } else if (p <= rectangle.width) {\n    //  Face 1\n    out.x = rectangle.x + p;\n    out.y = rectangle.y;\n  } else {\n    //  Face 2\n    out.x = rectangle.right;\n    out.y = rectangle.y + (p - rectangle.width);\n  }\n\n  return out;\n};\n\nmodule.exports = GetPoint;","map":null,"metadata":{},"sourceType":"script"}