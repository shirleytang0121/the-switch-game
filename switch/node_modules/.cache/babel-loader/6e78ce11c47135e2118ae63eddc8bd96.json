{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar Components = require('./components');\n\nvar Image = require('../../gameobjects/image/Image');\n/**\r\n * @classdesc\r\n * An Impact Physics Image Game Object.\r\n * \r\n * An Image is a light-weight Game Object useful for the display of static images in your game,\r\n * such as logos, backgrounds, scenery or other non-animated elements. Images can have input\r\n * events and physics bodies, or be tweened, tinted or scrolled. The main difference between an\r\n * Image and a Sprite is that you cannot animate an Image as they do not have the Animation component.\r\n *\r\n * @class ImpactImage\r\n * @extends Phaser.GameObjects.Image\r\n * @memberof Phaser.Physics.Impact\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Impact.Components.Acceleration\r\n * @extends Phaser.Physics.Impact.Components.BodyScale\r\n * @extends Phaser.Physics.Impact.Components.BodyType\r\n * @extends Phaser.Physics.Impact.Components.Bounce\r\n * @extends Phaser.Physics.Impact.Components.CheckAgainst\r\n * @extends Phaser.Physics.Impact.Components.Collides\r\n * @extends Phaser.Physics.Impact.Components.Debug\r\n * @extends Phaser.Physics.Impact.Components.Friction\r\n * @extends Phaser.Physics.Impact.Components.Gravity\r\n * @extends Phaser.Physics.Impact.Components.Offset\r\n * @extends Phaser.Physics.Impact.Components.SetGameObject\r\n * @extends Phaser.Physics.Impact.Components.Velocity\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScaleMode\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Size\r\n * @extends Phaser.GameObjects.Components.Texture\r\n * @extends Phaser.GameObjects.Components.Tint\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - The physics world of the Impact physics system.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\n\n\nvar ImpactImage = new Class({\n  Extends: Image,\n  Mixins: [Components.Acceleration, Components.BodyScale, Components.BodyType, Components.Bounce, Components.CheckAgainst, Components.Collides, Components.Debug, Components.Friction, Components.Gravity, Components.Offset, Components.SetGameObject, Components.Velocity],\n  initialize: function ImpactImage(world, x, y, texture, frame) {\n    Image.call(this, world.scene, x, y, texture, frame);\n    /**\r\n     * The Physics Body linked to an ImpactImage.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#body\r\n     * @type {Phaser.Physics.Impact.Body}\r\n     * @since 3.0.0\r\n     */\n\n    this.body = world.create(x - this.frame.centerX, y - this.frame.centerY, this.width, this.height);\n    this.body.parent = this;\n    this.body.gameObject = this;\n    /**\r\n     * The size of the physics Body.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#size\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.size = this.body.size;\n    /**\r\n     * The X and Y offset of the Body from the left and top of the Image.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#offset\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.offset = this.body.offset;\n    /**\r\n     * The velocity, or rate of change the Body's position. Measured in pixels per second.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#vel\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.vel = this.body.vel;\n    /**\r\n     * The acceleration is the rate of change of the velocity. Measured in pixels per second squared.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#accel\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.accel = this.body.accel;\n    /**\r\n     * Friction between colliding bodies.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#friction\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.friction = this.body.friction;\n    /**\r\n     * The maximum velocity of the body.\r\n     *\r\n     * @name Phaser.Physics.Impact.ImpactImage#maxVel\r\n     * @type {{x: number, y: number}}\r\n     * @since 3.0.0\r\n     */\n\n    this.maxVel = this.body.maxVel;\n  }\n});\nmodule.exports = ImpactImage;","map":null,"metadata":{},"sourceType":"script"}