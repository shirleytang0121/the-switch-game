{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Point = require('../point/Point');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Triangle.Random\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - [description]\r\n * @param {Phaser.Geom.Point} [out] - [description]\r\n *\r\n * @return {Phaser.Geom.Point} [description]\r\n */\n\n\nvar Random = function Random(triangle, out) {\n  if (out === undefined) {\n    out = new Point();\n  } //  Basis vectors\n\n\n  var ux = triangle.x2 - triangle.x1;\n  var uy = triangle.y2 - triangle.y1;\n  var vx = triangle.x3 - triangle.x1;\n  var vy = triangle.y3 - triangle.y1; //  Random point within the unit square\n\n  var r = Math.random();\n  var s = Math.random(); //  Point outside the triangle? Remap it.\n\n  if (r + s >= 1) {\n    r = 1 - r;\n    s = 1 - s;\n  }\n\n  out.x = triangle.x1 + (ux * r + vx * s);\n  out.y = triangle.y1 + (uy * r + vy * s);\n  return out;\n};\n\nmodule.exports = Random;","map":null,"metadata":{},"sourceType":"script"}