{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetAdvancedValue = require('../utils/object/GetAdvancedValue');\n/**\r\n * Adds an Animation component to a Sprite and populates it based on the given config.\r\n *\r\n * @function Phaser.GameObjects.BuildGameObjectAnimation\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Sprite} sprite - The sprite to add an Animation component to.\r\n * @param {object} config - The animation config.\r\n *\r\n * @return {Phaser.GameObjects.Sprite} The updated Sprite.\r\n */\n\n\nvar BuildGameObjectAnimation = function BuildGameObjectAnimation(sprite, config) {\n  var animConfig = GetAdvancedValue(config, 'anims', null);\n\n  if (animConfig === null) {\n    return sprite;\n  }\n\n  if (typeof animConfig === 'string') {\n    //  { anims: 'key' }\n    sprite.anims.play(animConfig);\n  } else if (typeof animConfig === 'object') {\n    //  { anims: {\n    //              key: string\n    //              startFrame: [string|integer]\n    //              delay: [float]\n    //              repeat: [integer]\n    //              repeatDelay: [float]\n    //              yoyo: [boolean]\n    //              play: [boolean]\n    //              delayedPlay: [boolean]\n    //           }\n    //  }\n    var anims = sprite.anims;\n    var key = GetAdvancedValue(animConfig, 'key', undefined);\n    var startFrame = GetAdvancedValue(animConfig, 'startFrame', undefined);\n    var delay = GetAdvancedValue(animConfig, 'delay', 0);\n    var repeat = GetAdvancedValue(animConfig, 'repeat', 0);\n    var repeatDelay = GetAdvancedValue(animConfig, 'repeatDelay', 0);\n    var yoyo = GetAdvancedValue(animConfig, 'yoyo', false);\n    var play = GetAdvancedValue(animConfig, 'play', false);\n    var delayedPlay = GetAdvancedValue(animConfig, 'delayedPlay', 0);\n    anims.setDelay(delay);\n    anims.setRepeat(repeat);\n    anims.setRepeatDelay(repeatDelay);\n    anims.setYoyo(yoyo);\n\n    if (play) {\n      anims.play(key, startFrame);\n    } else if (delayedPlay > 0) {\n      anims.delayedPlay(delayedPlay, key, startFrame);\n    } else {\n      anims.load(key);\n    }\n  }\n\n  return sprite;\n};\n\nmodule.exports = BuildGameObjectAnimation;","map":null,"metadata":{},"sourceType":"script"}