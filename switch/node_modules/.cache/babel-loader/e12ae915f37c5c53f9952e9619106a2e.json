{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetTilesWithin = require('./GetTilesWithin');\n\nvar GetRandom = require('../../utils/array/GetRandom');\n/**\r\n * Randomizes the indexes of a rectangular region of tiles (in tile coordinates) within the\r\n * specified layer. Each tile will receive a new index. If an array of indexes is passed in, then\r\n * those will be used for randomly assigning new tile indexes. If an array is not provided, the\r\n * indexes found within the region (excluding -1) will be used for randomly assigning new tile\r\n * indexes. This method only modifies tile indexes and does not change collision information.\r\n *\r\n * @function Phaser.Tilemaps.Components.Randomize\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} [tileX=0] - The left most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} [tileY=0] - The top most tile index (in tile coordinates) to use as the origin of the area.\r\n * @param {integer} [width=max width based on tileX] - How many tiles wide from the `tileX` index the area will be.\r\n * @param {integer} [height=max height based on tileY] - How many tiles tall from the `tileY` index the area will be.\r\n * @param {integer[]} [indexes] - An array of indexes to randomly draw from during randomization.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\n\n\nvar Randomize = function Randomize(tileX, tileY, width, height, indexes, layer) {\n  var i;\n  var tiles = GetTilesWithin(tileX, tileY, width, height, null, layer); // If no indicies are given, then find all the unique indexes within the specified region\n\n  if (indexes === undefined) {\n    indexes = [];\n\n    for (i = 0; i < tiles.length; i++) {\n      if (indexes.indexOf(tiles[i].index) === -1) {\n        indexes.push(tiles[i].index);\n      }\n    }\n  }\n\n  for (i = 0; i < tiles.length; i++) {\n    tiles[i].index = GetRandom(indexes);\n  }\n};\n\nmodule.exports = Randomize;","map":null,"metadata":{},"sourceType":"script"}