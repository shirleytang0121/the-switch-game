{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GetOverlapX = require('./GetOverlapX');\n/**\r\n * Separates two overlapping bodies on the X-axis (horizontally).\r\n *\r\n * Separation involves moving two overlapping bodies so they don't overlap anymore and adjusting their velocities based on their mass. This is a core part of collision detection.\r\n *\r\n * The bodies won't be separated if there is no horizontal overlap between them, if they are static, or if either one uses custom logic for its separation.\r\n *\r\n * @function Phaser.Physics.Arcade.SeparateX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body1 - The first Body to separate.\r\n * @param {Phaser.Physics.Arcade.Body} body2 - The second Body to separate.\r\n * @param {boolean} overlapOnly - If `true`, the bodies will only have their overlap data set and no separation will take place.\r\n * @param {number} bias - A value to add to the delta value during overlap checking. Used to prevent sprite tunneling.\r\n *\r\n * @return {boolean} `true` if the two bodies overlap horizontally, otherwise `false`.\r\n */\n\n\nvar SeparateX = function SeparateX(body1, body2, overlapOnly, bias) {\n  var overlap = GetOverlapX(body1, body2, overlapOnly, bias); //  Can't separate two immovable bodies, or a body with its own custom separation logic\n\n  if (overlapOnly || overlap === 0 || body1.immovable && body2.immovable || body1.customSeparateX || body2.customSeparateX) {\n    //  return true if there was some overlap, otherwise false\n    return overlap !== 0 || body1.embedded && body2.embedded;\n  } //  Adjust their positions and velocities accordingly (if there was any overlap)\n\n\n  var v1 = body1.velocity.x;\n  var v2 = body2.velocity.x;\n\n  if (!body1.immovable && !body2.immovable) {\n    overlap *= 0.5;\n    body1.x -= overlap;\n    body2.x += overlap;\n    var nv1 = Math.sqrt(v2 * v2 * body2.mass / body1.mass) * (v2 > 0 ? 1 : -1);\n    var nv2 = Math.sqrt(v1 * v1 * body1.mass / body2.mass) * (v1 > 0 ? 1 : -1);\n    var avg = (nv1 + nv2) * 0.5;\n    nv1 -= avg;\n    nv2 -= avg;\n    body1.velocity.x = avg + nv1 * body1.bounce.x;\n    body2.velocity.x = avg + nv2 * body2.bounce.x;\n  } else if (!body1.immovable) {\n    body1.x -= overlap;\n    body1.velocity.x = v2 - v1 * body1.bounce.x; //  This is special case code that handles things like vertically moving platforms you can ride\n\n    if (body2.moves) {\n      body1.y += (body2.y - body2.prev.y) * body2.friction.y;\n    }\n  } else {\n    body2.x += overlap;\n    body2.velocity.x = v1 - v2 * body2.bounce.x; //  This is special case code that handles things like vertically moving platforms you can ride\n\n    if (body1.moves) {\n      body2.y += (body1.y - body1.prev.y) * body1.friction.y;\n    }\n  } //  If we got this far then there WAS overlap, and separation is complete, so return true\n\n\n  return true;\n};\n\nmodule.exports = SeparateX;","map":null,"metadata":{},"sourceType":"script"}