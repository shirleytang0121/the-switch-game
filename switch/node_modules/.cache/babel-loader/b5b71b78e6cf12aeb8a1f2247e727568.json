{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar ProcessTileSeparationY = require('./ProcessTileSeparationY');\n/**\r\n * Check the body against the given tile on the Y axis.\r\n * Used internally by the SeparateTile function.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.TileCheckY\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {Phaser.Tilemaps.Tile} tile - The tile to check.\r\n * @param {number} tileTop - The top position of the tile within the tile world.\r\n * @param {number} tileBottom - The bottom position of the tile within the tile world.\r\n * @param {number} tileBias - The tile bias value. Populated by the `World.TILE_BIAS` constant.\r\n *\r\n * @return {number} The amount of separation that occurred.\r\n */\n\n\nvar TileCheckY = function TileCheckY(body, tile, tileTop, tileBottom, tileBias) {\n  var oy = 0;\n\n  if (body.deltaY() < 0 && !body.blocked.up && tile.collideDown && body.checkCollision.up) {\n    //  Body is moving UP\n    if (tile.faceBottom && body.y < tileBottom) {\n      oy = body.y - tileBottom;\n\n      if (oy < -tileBias) {\n        oy = 0;\n      }\n    }\n  } else if (body.deltaY() > 0 && !body.blocked.down && tile.collideUp && body.checkCollision.down) {\n    //  Body is moving DOWN\n    if (tile.faceTop && body.bottom > tileTop) {\n      oy = body.bottom - tileTop;\n\n      if (oy > tileBias) {\n        oy = 0;\n      }\n    }\n  }\n\n  if (oy !== 0) {\n    if (body.customSeparateY) {\n      body.overlapY = oy;\n    } else {\n      ProcessTileSeparationY(body, oy);\n    }\n  }\n\n  return oy;\n};\n\nmodule.exports = TileCheckY;","map":null,"metadata":{},"sourceType":"script"}