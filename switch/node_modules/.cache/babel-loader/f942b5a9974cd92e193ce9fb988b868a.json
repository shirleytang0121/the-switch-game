{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar Mesh = require('../mesh/Mesh');\n/**\r\n * @classdesc\r\n * A Quad Game Object.\r\n *\r\n * A Quad is a Mesh Game Object pre-configured with two triangles arranged into a rectangle, with a single\r\n * texture spread across them.\r\n *\r\n * You can manipulate the corner points of the quad via the getters and setters such as `topLeftX`, and also\r\n * change their alpha and color values. The quad itself can be moved by adjusting the `x` and `y` properties.\r\n *\r\n * @class Quad\r\n * @extends Phaser.GameObjects.Mesh\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @webglOnly\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Quad belongs.\r\n * @param {number} x - The horizontal position of this Game Object in the world.\r\n * @param {number} y - The vertical position of this Game Object in the world.\r\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\r\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\r\n */\n\n\nvar Quad = new Class({\n  Extends: Mesh,\n  initialize: function Quad(scene, x, y, texture, frame) {\n    //  0----3\n    //  |\\  B|\n    //  | \\  |\n    //  |  \\ |\n    //  | A \\|\n    //  |    \\\n    //  1----2\n    var vertices = [0, 0, // tl\n    0, 0, // bl\n    0, 0, // br\n    0, 0, // tl\n    0, 0, // br\n    0, 0 // tr\n    ];\n    var uv = [0, 0, // tl\n    0, 1, // bl\n    1, 1, // br\n    0, 0, // tl\n    1, 1, // br\n    1, 0 // tr\n    ];\n    var colors = [0xffffff, // tl\n    0xffffff, // bl\n    0xffffff, // br\n    0xffffff, // tl\n    0xffffff, // br\n    0xffffff // tr\n    ];\n    var alphas = [1, // tl\n    1, // bl\n    1, // br\n    1, // tl\n    1, // br\n    1 // tr\n    ];\n    Mesh.call(this, scene, x, y, vertices, uv, colors, alphas, texture, frame);\n    this.resetPosition();\n  },\n\n  /**\r\n   * Sets the frame this Game Object will use to render with.\r\n   *\r\n   * The Frame has to belong to the current Texture being used.\r\n   *\r\n   * It can be either a string or an index.\r\n   *\r\n   * Calling `setFrame` will modify the `width` and `height` properties of your Game Object.\r\n   * It will also change the `origin` if the Frame has a custom pivot point, as exported from packages like Texture Packer.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setFrame\r\n   * @since 3.11.0\r\n   *\r\n   * @param {(string|integer)} frame - The name or index of the frame within the Texture.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setFrame: function setFrame(frame) {\n    this.frame = this.texture.get(frame);\n\n    if (!this.frame.cutWidth || !this.frame.cutHeight) {\n      this.renderFlags &= ~8;\n    } else {\n      this.renderFlags |= 8;\n    }\n\n    frame = this.frame; //   TL\n\n    this.uv[0] = frame.u0;\n    this.uv[1] = frame.v0; //   BL\n\n    this.uv[2] = frame.u0;\n    this.uv[3] = frame.v1; //   BR\n\n    this.uv[4] = frame.u1;\n    this.uv[5] = frame.v1; //   TL\n\n    this.uv[6] = frame.u0;\n    this.uv[7] = frame.v0; //   BR\n\n    this.uv[8] = frame.u1;\n    this.uv[9] = frame.v1; //   TR\n\n    this.uv[10] = frame.u1;\n    this.uv[11] = frame.v0;\n    return this;\n  },\n\n  /**\r\n   * The top-left x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftX: {\n    get: function get() {\n      return this.x + this.vertices[0];\n    },\n    set: function set(value) {\n      this.vertices[0] = value - this.x;\n      this.vertices[6] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The top-left y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftY: {\n    get: function get() {\n      return this.y + this.vertices[1];\n    },\n    set: function set(value) {\n      this.vertices[1] = value - this.y;\n      this.vertices[7] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The top-right x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightX: {\n    get: function get() {\n      return this.x + this.vertices[10];\n    },\n    set: function set(value) {\n      this.vertices[10] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The top-right y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightY: {\n    get: function get() {\n      return this.y + this.vertices[11];\n    },\n    set: function set(value) {\n      this.vertices[11] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The bottom-left x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftX: {\n    get: function get() {\n      return this.x + this.vertices[2];\n    },\n    set: function set(value) {\n      this.vertices[2] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The bottom-left y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftY: {\n    get: function get() {\n      return this.y + this.vertices[3];\n    },\n    set: function set(value) {\n      this.vertices[3] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The bottom-right x vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightX: {\n    get: function get() {\n      return this.x + this.vertices[4];\n    },\n    set: function set(value) {\n      this.vertices[4] = value - this.x;\n      this.vertices[8] = value - this.x;\n    }\n  },\n\n  /**\r\n   * The bottom-right y vertex of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightY: {\n    get: function get() {\n      return this.y + this.vertices[5];\n    },\n    set: function set(value) {\n      this.vertices[5] = value - this.y;\n      this.vertices[9] = value - this.y;\n    }\n  },\n\n  /**\r\n   * The top-left alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftAlpha: {\n    get: function get() {\n      return this.alphas[0];\n    },\n    set: function set(value) {\n      this.alphas[0] = value;\n      this.alphas[3] = value;\n    }\n  },\n\n  /**\r\n   * The top-right alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightAlpha: {\n    get: function get() {\n      return this.alphas[5];\n    },\n    set: function set(value) {\n      this.alphas[5] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-left alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftAlpha: {\n    get: function get() {\n      return this.alphas[1];\n    },\n    set: function set(value) {\n      this.alphas[1] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-right alpha value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightAlpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightAlpha: {\n    get: function get() {\n      return this.alphas[2];\n    },\n    set: function set(value) {\n      this.alphas[2] = value;\n      this.alphas[4] = value;\n    }\n  },\n\n  /**\r\n   * The top-left color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topLeftColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topLeftColor: {\n    get: function get() {\n      return this.colors[0];\n    },\n    set: function set(value) {\n      this.colors[0] = value;\n      this.colors[3] = value;\n    }\n  },\n\n  /**\r\n   * The top-right color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#topRightColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  topRightColor: {\n    get: function get() {\n      return this.colors[5];\n    },\n    set: function set(value) {\n      this.colors[5] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-left color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomLeftColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomLeftColor: {\n    get: function get() {\n      return this.colors[1];\n    },\n    set: function set(value) {\n      this.colors[1] = value;\n    }\n  },\n\n  /**\r\n   * The bottom-right color value of this Quad.\r\n   *\r\n   * @name Phaser.GameObjects.Quad#bottomRightColor\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  bottomRightColor: {\n    get: function get() {\n      return this.colors[2];\n    },\n    set: function set(value) {\n      this.colors[2] = value;\n      this.colors[4] = value;\n    }\n  },\n\n  /**\r\n   * Sets the top-left vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setTopLeft\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setTopLeft: function setTopLeft(x, y) {\n    this.topLeftX = x;\n    this.topLeftY = y;\n    return this;\n  },\n\n  /**\r\n   * Sets the top-right vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setTopRight\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setTopRight: function setTopRight(x, y) {\n    this.topRightX = x;\n    this.topRightY = y;\n    return this;\n  },\n\n  /**\r\n   * Sets the bottom-left vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setBottomLeft\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setBottomLeft: function setBottomLeft(x, y) {\n    this.bottomLeftX = x;\n    this.bottomLeftY = y;\n    return this;\n  },\n\n  /**\r\n   * Sets the bottom-right vertex position of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#setBottomRight\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - The horizontal coordinate of the vertex.\r\n   * @param {number} y - The vertical coordinate of the vertex.\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  setBottomRight: function setBottomRight(x, y) {\n    this.bottomRightX = x;\n    this.bottomRightY = y;\n    return this;\n  },\n\n  /**\r\n   * Resets the positions of the four corner vertices of this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#resetPosition\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  resetPosition: function resetPosition() {\n    var x = this.x;\n    var y = this.y;\n    var halfWidth = Math.floor(this.width / 2);\n    var halfHeight = Math.floor(this.height / 2);\n    this.setTopLeft(x - halfWidth, y - halfHeight);\n    this.setTopRight(x + halfWidth, y - halfHeight);\n    this.setBottomLeft(x - halfWidth, y + halfHeight);\n    this.setBottomRight(x + halfWidth, y + halfHeight);\n    return this;\n  },\n\n  /**\r\n   * Resets the alpha values used by this Quad back to 1.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#resetAlpha\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  resetAlpha: function resetAlpha() {\n    var alphas = this.alphas;\n    alphas[0] = 1;\n    alphas[1] = 1;\n    alphas[2] = 1;\n    alphas[3] = 1;\n    alphas[4] = 1;\n    alphas[5] = 1;\n    return this;\n  },\n\n  /**\r\n   * Resets the color values used by this Quad back to 0xffffff.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#resetColors\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  resetColors: function resetColors() {\n    var colors = this.colors;\n    colors[0] = 0xffffff;\n    colors[1] = 0xffffff;\n    colors[2] = 0xffffff;\n    colors[3] = 0xffffff;\n    colors[4] = 0xffffff;\n    colors[5] = 0xffffff;\n    return this;\n  },\n\n  /**\r\n   * Resets the position, alpha and color values used by this Quad.\r\n   *\r\n   * @method Phaser.GameObjects.Quad#reset\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.GameObjects.Quad} This Game Object.\r\n   */\n  reset: function reset() {\n    this.resetPosition();\n    this.resetAlpha();\n    return this.resetColors();\n  }\n});\nmodule.exports = Quad;","map":null,"metadata":{},"sourceType":"script"}