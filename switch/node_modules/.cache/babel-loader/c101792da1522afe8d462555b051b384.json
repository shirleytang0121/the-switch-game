{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar EaseMap = require('../../math/easing/EaseMap');\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Tweens.Builders.GetEaseFunction\r\n * @since 3.0.0\r\n *\r\n * @param {(string|function)} ease - [description]\r\n * @param {array} easeParams - [description]\r\n *\r\n * @return {function} [description]\r\n */\n\n\nvar GetEaseFunction = function GetEaseFunction(ease, easeParams) {\n  if (typeof ease === 'string' && EaseMap.hasOwnProperty(ease)) {\n    if (easeParams) {\n      var cloneParams = easeParams.slice(0);\n      cloneParams.unshift(0);\n      return function (v) {\n        cloneParams[0] = v;\n        return EaseMap[ease].apply(this, cloneParams);\n      };\n    } else {\n      //  String based look-up\n      return EaseMap[ease];\n    }\n  } else if (typeof ease === 'function') {\n    //  Custom function\n    return ease;\n  } else if (Array.isArray(ease) && ease.length === 4) {//  Bezier function (TODO)\n  }\n\n  return EaseMap.Power0;\n};\n\nmodule.exports = GetEaseFunction;","map":null,"metadata":{},"sourceType":"script"}