{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Length = require('./Length');\n/**\r\n * Extends the start and end points of a Line by the given amounts.\r\n *\r\n * The amounts can be positive or negative. Positive points will increase the length of the line,\r\n * while negative ones will decrease it.\r\n *\r\n * If no `right` value is provided it will extend the length of the line equally in both directions.\r\n *\r\n * Pass a value of zero to leave the start or end point unchanged.\r\n *\r\n * @function Phaser.Geom.Line.Extend\r\n * @since 3.16.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The line instance to extend.\r\n * @param {number} left - The amount to extend the start of the line by.\r\n * @param {number} [right] - The amount to extend the end of the line by. If not given it will be set to the `left` value.\r\n *\r\n * @return {Phaser.Geom.Line} The modified Line instance.\r\n */\n\n\nvar Extend = function Extend(line, left, right) {\n  if (right === undefined) {\n    right = left;\n  }\n\n  var length = Length(line);\n  var slopX = line.x2 - line.x1;\n  var slopY = line.y2 - line.y1;\n\n  if (left) {\n    line.x1 = line.x1 - slopX / length * left;\n    line.y1 = line.y1 - slopY / length * left;\n  }\n\n  if (right) {\n    line.x2 = line.x2 + slopX / length * right;\n    line.y2 = line.y2 + slopY / length * right;\n  }\n\n  return line;\n};\n\nmodule.exports = Extend;","map":null,"metadata":{},"sourceType":"script"}