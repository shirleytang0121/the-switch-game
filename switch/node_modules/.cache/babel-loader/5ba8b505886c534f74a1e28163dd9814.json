{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Clone = require('../../utils/object/Clone');\n/**\r\n * Parses a Texture Atlas JSON Hash and adds the Frames to the Texture.\r\n * JSON format expected to match that defined by Texture Packer, with the frames property containing an object of Frames.\r\n *\r\n * @function Phaser.Textures.Parsers.JSONHash\r\n * @memberof Phaser.Textures.Parsers\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Textures.Texture} texture - The Texture to add the Frames to.\r\n * @param {integer} sourceIndex - The index of the TextureSource.\r\n * @param {object} json - The JSON data.\r\n *\r\n * @return {Phaser.Textures.Texture} The Texture modified by this parser.\r\n */\n\n\nvar JSONHash = function JSONHash(texture, sourceIndex, json) {\n  //  Malformed?\n  if (!json['frames']) {\n    console.warn('Invalid Texture Atlas JSON Hash given, missing \\'frames\\' Object');\n    return;\n  } //  Add in a __BASE entry (for the entire atlas)\n\n\n  var source = texture.source[sourceIndex];\n  texture.add('__BASE', sourceIndex, 0, 0, source.width, source.height); //  By this stage frames is a fully parsed Object\n\n  var frames = json['frames'];\n  var newFrame;\n\n  for (var key in frames) {\n    var src = frames[key]; //  The frame values are the exact coordinates to cut the frame out of the atlas from\n\n    newFrame = texture.add(key, sourceIndex, src.frame.x, src.frame.y, src.frame.w, src.frame.h); //  These are the original (non-trimmed) sprite values\n\n    if (src.trimmed) {\n      newFrame.setTrim(src.sourceSize.w, src.sourceSize.h, src.spriteSourceSize.x, src.spriteSourceSize.y, src.spriteSourceSize.w, src.spriteSourceSize.h);\n    }\n\n    if (src.rotated) {\n      newFrame.rotated = true;\n      newFrame.updateUVsInverted();\n    } //  Copy over any extra data\n\n\n    newFrame.customData = Clone(src);\n  } //  Copy over any additional data that was in the JSON to Texture.customData\n\n\n  for (var dataKey in json) {\n    if (dataKey === 'frames') {\n      continue;\n    }\n\n    if (Array.isArray(json[dataKey])) {\n      texture.customData[dataKey] = json[dataKey].slice(0);\n    } else {\n      texture.customData[dataKey] = json[dataKey];\n    }\n  }\n\n  return texture;\n};\n\nmodule.exports = JSONHash;","map":null,"metadata":{},"sourceType":"script"}