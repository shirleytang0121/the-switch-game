{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Provides methods used for getting and setting the origin of a Game Object.\r\n * Values are normalized, given in the range 0 to 1.\r\n * Display values contain the calculated pixel values.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @name Phaser.GameObjects.Components.Origin\r\n * @since 3.0.0\r\n */\nvar Origin = {\n  /**\r\n   * A property indicating that a Game Object has this component.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#_originComponent\r\n   * @type {boolean}\r\n   * @private\r\n   * @default true\r\n   * @since 3.2.0\r\n   */\n  _originComponent: true,\n\n  /**\r\n   * The horizontal origin of this Game Object.\r\n   * The origin maps the relationship between the size and position of the Game Object.\r\n   * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n   * Setting the value to 0 means the position now relates to the left of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#originX\r\n   * @type {number}\r\n   * @default 0.5\r\n   * @since 3.0.0\r\n   */\n  originX: 0.5,\n\n  /**\r\n   * The vertical origin of this Game Object.\r\n   * The origin maps the relationship between the size and position of the Game Object.\r\n   * The default value is 0.5, meaning all Game Objects are positioned based on their center.\r\n   * Setting the value to 0 means the position now relates to the top of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#originY\r\n   * @type {number}\r\n   * @default 0.5\r\n   * @since 3.0.0\r\n   */\n  originY: 0.5,\n  //  private + read only\n  _displayOriginX: 0,\n  _displayOriginY: 0,\n\n  /**\r\n   * The horizontal display origin of this Game Object.\r\n   * The origin is a normalized value between 0 and 1.\r\n   * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#displayOriginX\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  displayOriginX: {\n    get: function get() {\n      return this._displayOriginX;\n    },\n    set: function set(value) {\n      this._displayOriginX = value;\n      this.originX = value / this.width;\n    }\n  },\n\n  /**\r\n   * The vertical display origin of this Game Object.\r\n   * The origin is a normalized value between 0 and 1.\r\n   * The displayOrigin is a pixel value, based on the size of the Game Object combined with the origin.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Origin#displayOriginY\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  displayOriginY: {\n    get: function get() {\n      return this._displayOriginY;\n    },\n    set: function set(value) {\n      this._displayOriginY = value;\n      this.originY = value / this.height;\n    }\n  },\n\n  /**\r\n   * Sets the origin of this Game Object.\r\n   *\r\n   * The values are given in the range 0 to 1.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#setOrigin\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} [x=0.5] - The horizontal origin value.\r\n   * @param {number} [y=x] - The vertical origin value. If not defined it will be set to the value of `x`.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setOrigin: function setOrigin(x, y) {\n    if (x === undefined) {\n      x = 0.5;\n    }\n\n    if (y === undefined) {\n      y = x;\n    }\n\n    this.originX = x;\n    this.originY = y;\n    return this.updateDisplayOrigin();\n  },\n\n  /**\r\n   * Sets the origin of this Game Object based on the Pivot values in its Frame.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#setOriginFromFrame\r\n   * @since 3.0.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setOriginFromFrame: function setOriginFromFrame() {\n    if (!this.frame || !this.frame.customPivot) {\n      return this.setOrigin();\n    } else {\n      this.originX = this.frame.pivotX;\n      this.originY = this.frame.pivotY;\n    }\n\n    return this.updateDisplayOrigin();\n  },\n\n  /**\r\n   * Sets the display origin of this Game Object.\r\n   * The difference between this and setting the origin is that you can use pixel values for setting the display origin.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#setDisplayOrigin\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} [x=0] - The horizontal display origin value.\r\n   * @param {number} [y=x] - The vertical display origin value. If not defined it will be set to the value of `x`.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setDisplayOrigin: function setDisplayOrigin(x, y) {\n    if (x === undefined) {\n      x = 0;\n    }\n\n    if (y === undefined) {\n      y = x;\n    }\n\n    this.displayOriginX = x;\n    this.displayOriginY = y;\n    return this;\n  },\n\n  /**\r\n   * Updates the Display Origin cached values internally stored on this Game Object.\r\n   * You don't usually call this directly, but it is exposed for edge-cases where you may.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Origin#updateDisplayOrigin\r\n   * @since 3.0.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  updateDisplayOrigin: function updateDisplayOrigin() {\n    this._displayOriginX = Math.round(this.originX * this.width);\n    this._displayOriginY = Math.round(this.originY * this.height);\n    return this;\n  }\n};\nmodule.exports = Origin;","map":null,"metadata":{},"sourceType":"script"}