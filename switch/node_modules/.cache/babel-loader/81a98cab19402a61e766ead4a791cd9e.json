{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Clamp = require('../../math/Clamp'); //  bitmask flag for GameObject.renderMask\n\n\nvar _FLAG = 2; // 0010\n\n/**\r\n * Provides methods used for setting the alpha properties of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n *\r\n * @name Phaser.GameObjects.Components.Alpha\r\n * @since 3.0.0\r\n */\n\nvar Alpha = {\n  /**\r\n   * Private internal value. Holds the global alpha value.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#_alpha\r\n   * @type {number}\r\n   * @private\r\n   * @default 1\r\n   * @since 3.0.0\r\n   */\n  _alpha: 1,\n\n  /**\r\n   * Private internal value. Holds the top-left alpha value.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#_alphaTL\r\n   * @type {number}\r\n   * @private\r\n   * @default 1\r\n   * @since 3.0.0\r\n   */\n  _alphaTL: 1,\n\n  /**\r\n   * Private internal value. Holds the top-right alpha value.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#_alphaTR\r\n   * @type {number}\r\n   * @private\r\n   * @default 1\r\n   * @since 3.0.0\r\n   */\n  _alphaTR: 1,\n\n  /**\r\n   * Private internal value. Holds the bottom-left alpha value.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#_alphaBL\r\n   * @type {number}\r\n   * @private\r\n   * @default 1\r\n   * @since 3.0.0\r\n   */\n  _alphaBL: 1,\n\n  /**\r\n   * Private internal value. Holds the bottom-right alpha value.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#_alphaBR\r\n   * @type {number}\r\n   * @private\r\n   * @default 1\r\n   * @since 3.0.0\r\n   */\n  _alphaBR: 1,\n\n  /**\r\n   * Clears all alpha values associated with this Game Object.\r\n   *\r\n   * Immediately sets the alpha levels back to 1 (fully opaque).\r\n   *\r\n   * @method Phaser.GameObjects.Components.Alpha#clearAlpha\r\n   * @since 3.0.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  clearAlpha: function clearAlpha() {\n    return this.setAlpha(1);\n  },\n\n  /**\r\n   * Set the Alpha level of this Game Object. The alpha controls the opacity of the Game Object as it renders.\r\n   * Alpha values are provided as a float between 0, fully transparent, and 1, fully opaque.\r\n   *\r\n   * If your game is running under WebGL you can optionally specify four different alpha values, each of which\r\n   * correspond to the four corners of the Game Object. Under Canvas only the `topLeft` value given is used.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Alpha#setAlpha\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} [topLeft=1] - The alpha value used for the top-left of the Game Object. If this is the only value given it's applied across the whole Game Object.\r\n   * @param {number} [topRight] - The alpha value used for the top-right of the Game Object. WebGL only.\r\n   * @param {number} [bottomLeft] - The alpha value used for the bottom-left of the Game Object. WebGL only.\r\n   * @param {number} [bottomRight] - The alpha value used for the bottom-right of the Game Object. WebGL only.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setAlpha: function setAlpha(topLeft, topRight, bottomLeft, bottomRight) {\n    if (topLeft === undefined) {\n      topLeft = 1;\n    } //  Treat as if there is only one alpha value for the whole Game Object\n\n\n    if (topRight === undefined) {\n      this.alpha = topLeft;\n    } else {\n      this._alphaTL = Clamp(topLeft, 0, 1);\n      this._alphaTR = Clamp(topRight, 0, 1);\n      this._alphaBL = Clamp(bottomLeft, 0, 1);\n      this._alphaBR = Clamp(bottomRight, 0, 1);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * The alpha value of the Game Object.\r\n   *\r\n   * This is a global value, impacting the entire Game Object, not just a region of it.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#alpha\r\n   * @type {number}\r\n   * @since 3.0.0\r\n   */\n  alpha: {\n    get: function get() {\n      return this._alpha;\n    },\n    set: function set(value) {\n      var v = Clamp(value, 0, 1);\n      this._alpha = v;\n      this._alphaTL = v;\n      this._alphaTR = v;\n      this._alphaBL = v;\n      this._alphaBR = v;\n\n      if (v === 0) {\n        this.renderFlags &= ~_FLAG;\n      } else {\n        this.renderFlags |= _FLAG;\n      }\n    }\n  },\n\n  /**\r\n   * The alpha value starting from the top-left of the Game Object.\r\n   * This value is interpolated from the corner to the center of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#alphaTopLeft\r\n   * @type {number}\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  alphaTopLeft: {\n    get: function get() {\n      return this._alphaTL;\n    },\n    set: function set(value) {\n      var v = Clamp(value, 0, 1);\n      this._alphaTL = v;\n\n      if (v !== 0) {\n        this.renderFlags |= _FLAG;\n      }\n    }\n  },\n\n  /**\r\n   * The alpha value starting from the top-right of the Game Object.\r\n   * This value is interpolated from the corner to the center of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#alphaTopRight\r\n   * @type {number}\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  alphaTopRight: {\n    get: function get() {\n      return this._alphaTR;\n    },\n    set: function set(value) {\n      var v = Clamp(value, 0, 1);\n      this._alphaTR = v;\n\n      if (v !== 0) {\n        this.renderFlags |= _FLAG;\n      }\n    }\n  },\n\n  /**\r\n   * The alpha value starting from the bottom-left of the Game Object.\r\n   * This value is interpolated from the corner to the center of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#alphaBottomLeft\r\n   * @type {number}\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  alphaBottomLeft: {\n    get: function get() {\n      return this._alphaBL;\n    },\n    set: function set(value) {\n      var v = Clamp(value, 0, 1);\n      this._alphaBL = v;\n\n      if (v !== 0) {\n        this.renderFlags |= _FLAG;\n      }\n    }\n  },\n\n  /**\r\n   * The alpha value starting from the bottom-right of the Game Object.\r\n   * This value is interpolated from the corner to the center of the Game Object.\r\n   *\r\n   * @name Phaser.GameObjects.Components.Alpha#alphaBottomRight\r\n   * @type {number}\r\n   * @webglOnly\r\n   * @since 3.0.0\r\n   */\n  alphaBottomRight: {\n    get: function get() {\n      return this._alphaBR;\n    },\n    set: function set(value) {\n      var v = Clamp(value, 0, 1);\n      this._alphaBR = v;\n\n      if (v !== 0) {\n        this.renderFlags |= _FLAG;\n      }\n    }\n  }\n};\nmodule.exports = Alpha;","map":null,"metadata":{},"sourceType":"script"}