{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar COLLIDES = require('./COLLIDES');\n\nvar Events = require('./events');\n\nvar SeparateX = require('./SeparateX');\n\nvar SeparateY = require('./SeparateY');\n/**\r\n * Impact Physics Solver\r\n *\r\n * @function Phaser.Physics.Impact.Solver\r\n * @fires Phaser.Physics.Impact.Events#COLLIDE\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - The Impact simulation to run the solver in.\r\n * @param {Phaser.Physics.Impact.Body} bodyA - The first body in the collision.\r\n * @param {Phaser.Physics.Impact.Body} bodyB - The second body in the collision.\r\n */\n\n\nvar Solver = function Solver(world, bodyA, bodyB) {\n  var weak = null;\n\n  if (bodyA.collides === COLLIDES.LITE || bodyB.collides === COLLIDES.FIXED) {\n    weak = bodyA;\n  } else if (bodyB.collides === COLLIDES.LITE || bodyA.collides === COLLIDES.FIXED) {\n    weak = bodyB;\n  }\n\n  if (bodyA.last.x + bodyA.size.x > bodyB.last.x && bodyA.last.x < bodyB.last.x + bodyB.size.x) {\n    if (bodyA.last.y < bodyB.last.y) {\n      SeparateY(world, bodyA, bodyB, weak);\n    } else {\n      SeparateY(world, bodyB, bodyA, weak);\n    }\n\n    bodyA.collideWith(bodyB, 'y');\n    bodyB.collideWith(bodyA, 'y');\n    world.emit(Events.COLLIDE, bodyA, bodyB, 'y');\n  } else if (bodyA.last.y + bodyA.size.y > bodyB.last.y && bodyA.last.y < bodyB.last.y + bodyB.size.y) {\n    if (bodyA.last.x < bodyB.last.x) {\n      SeparateX(world, bodyA, bodyB, weak);\n    } else {\n      SeparateX(world, bodyB, bodyA, weak);\n    }\n\n    bodyA.collideWith(bodyB, 'x');\n    bodyB.collideWith(bodyA, 'x');\n    world.emit(Events.COLLIDE, bodyA, bodyB, 'x');\n  }\n};\n\nmodule.exports = Solver;","map":null,"metadata":{},"sourceType":"script"}