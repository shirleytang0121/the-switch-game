{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Components = require('./components');\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\n\nvar Vector2 = require('../../math/Vector2');\n/**\r\n * Internal function to check if the object has a getter or setter.\r\n *\r\n * @function hasGetterOrSetter\r\n * @private\r\n *\r\n * @param {object} def - The object to check.\r\n *\r\n * @return {boolean} True if it has a getter or setter, otherwise false.\r\n */\n\n\nfunction hasGetterOrSetter(def) {\n  return !!def.get && typeof def.get === 'function' || !!def.set && typeof def.set === 'function';\n}\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Physics.Matter.MatterGameObject\r\n * @since 3.3.0\r\n *\r\n * @param {Phaser.Physics.Matter.World} world - The Matter world to add the body to.\r\n * @param {Phaser.GameObjects.GameObject} gameObject - The Game Object that will have the Matter body applied to it.\r\n * @param {object} options - Matter options config object.\r\n *\r\n * @return {Phaser.GameObjects.GameObject} The Game Object that was created with the Matter body.\r\n */\n\n\nvar MatterGameObject = function MatterGameObject(world, gameObject, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  var x = gameObject.x;\n  var y = gameObject.y; //  Temp body pos to avoid body null checks\n\n  gameObject.body = {\n    temp: true,\n    position: {\n      x: x,\n      y: y\n    }\n  };\n  var mixins = [Components.Bounce, Components.Collision, Components.Force, Components.Friction, Components.Gravity, Components.Mass, Components.Sensor, Components.SetBody, Components.Sleep, Components.Static, Components.Transform, Components.Velocity]; //  First let's inject all of the components into the Game Object\n\n  mixins.forEach(function (mixin) {\n    for (var key in mixin) {\n      if (hasGetterOrSetter(mixin[key])) {\n        Object.defineProperty(gameObject, key, {\n          get: mixin[key].get,\n          set: mixin[key].set\n        });\n      } else {\n        Object.defineProperty(gameObject, key, {\n          value: mixin[key]\n        });\n      }\n    }\n  });\n  gameObject.world = world;\n  gameObject._tempVec2 = new Vector2(x, y);\n  var shape = GetFastValue(options, 'shape', null);\n\n  if (!shape) {\n    shape = 'rectangle';\n  }\n\n  gameObject.setBody(shape, options);\n  return gameObject;\n};\n\nmodule.exports = MatterGameObject;","map":null,"metadata":{},"sourceType":"script"}