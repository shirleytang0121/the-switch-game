{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar ProcessTileSeparationX = require('./ProcessTileSeparationX');\n/**\r\n * Check the body against the given tile on the X axis.\r\n * Used internally by the SeparateTile function.\r\n *\r\n * @function Phaser.Physics.Arcade.Tilemap.TileCheckX\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\r\n * @param {Phaser.Tilemaps.Tile} tile - The tile to check.\r\n * @param {number} tileLeft - The left position of the tile within the tile world.\r\n * @param {number} tileRight - The right position of the tile within the tile world.\r\n * @param {number} tileBias - The tile bias value. Populated by the `World.TILE_BIAS` constant.\r\n *\r\n * @return {number} The amount of separation that occurred.\r\n */\n\n\nvar TileCheckX = function TileCheckX(body, tile, tileLeft, tileRight, tileBias) {\n  var ox = 0;\n\n  if (body.deltaX() < 0 && !body.blocked.left && tile.collideRight && body.checkCollision.left) {\n    //  Body is moving LEFT\n    if (tile.faceRight && body.x < tileRight) {\n      ox = body.x - tileRight;\n\n      if (ox < -tileBias) {\n        ox = 0;\n      }\n    }\n  } else if (body.deltaX() > 0 && !body.blocked.right && tile.collideLeft && body.checkCollision.right) {\n    //  Body is moving RIGHT\n    if (tile.faceLeft && body.right > tileLeft) {\n      ox = body.right - tileLeft;\n\n      if (ox > tileBias) {\n        ox = 0;\n      }\n    }\n  }\n\n  if (ox !== 0) {\n    if (body.customSeparateX) {\n      body.overlapX = ox;\n    } else {\n      ProcessTileSeparationX(body, ox);\n    }\n  }\n\n  return ox;\n};\n\nmodule.exports = TileCheckX;","map":null,"metadata":{},"sourceType":"script"}