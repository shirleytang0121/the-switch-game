{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar SpliceOne = require('./SpliceOne');\n/**\r\n * Removes the given item, or array of items, from the array.\r\n * \r\n * The array is modified in-place.\r\n * \r\n * You can optionally specify a callback to be invoked for each item successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.Remove\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {*|Array.<*>} item - The item, or array of items, to be removed from the array.\r\n * @param {function} [callback] - A callback to be invoked for each item successfully removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*|Array.<*>} The item, or array of items, that were successfully removed from the array.\r\n */\n\n\nvar Remove = function Remove(array, item, callback, context) {\n  if (context === undefined) {\n    context = array;\n  }\n\n  var index; //  Fast path to avoid array mutation and iteration\n\n  if (!Array.isArray(item)) {\n    index = array.indexOf(item);\n\n    if (index !== -1) {\n      SpliceOne(array, index);\n\n      if (callback) {\n        callback.call(context, item);\n      }\n\n      return item;\n    } else {\n      return null;\n    }\n  } //  If we got this far, we have an array of items to remove\n\n\n  var itemLength = item.length - 1;\n\n  while (itemLength >= 0) {\n    var entry = item[itemLength];\n    index = array.indexOf(entry);\n\n    if (index !== -1) {\n      SpliceOne(array, index);\n\n      if (callback) {\n        callback.call(context, entry);\n      }\n    } else {\n      //  Item wasn't found in the array, so remove it from our return results\n      item.pop();\n    }\n\n    itemLength--;\n  }\n\n  return item;\n};\n\nmodule.exports = Remove;","map":null,"metadata":{},"sourceType":"script"}