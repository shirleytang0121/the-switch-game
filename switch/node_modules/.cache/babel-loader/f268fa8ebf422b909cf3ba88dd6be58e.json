{"ast":null,"code":"var AWS = require('../core');\n/**\r\n * @api private\r\n */\n\n\nvar cachedSecret = {};\n/**\r\n * @api private\r\n */\n\nvar cacheQueue = [];\n/**\r\n * @api private\r\n */\n\nvar maxCacheEntries = 50;\n/**\r\n * @api private\r\n */\n\nvar v4Identifier = 'aws4_request';\n/**\r\n * @api private\r\n */\n\nmodule.exports = {\n  /**\r\n   * @api private\r\n   *\r\n   * @param date [String]\r\n   * @param region [String]\r\n   * @param serviceName [String]\r\n   * @return [String]\r\n   */\n  createScope: function createScope(date, region, serviceName) {\n    return [date.substr(0, 8), region, serviceName, v4Identifier].join('/');\n  },\n\n  /**\r\n   * @api private\r\n   *\r\n   * @param credentials [Credentials]\r\n   * @param date [String]\r\n   * @param region [String]\r\n   * @param service [String]\r\n   * @param shouldCache [Boolean]\r\n   * @return [String]\r\n   */\n  getSigningKey: function getSigningKey(credentials, date, region, service, shouldCache) {\n    var credsIdentifier = AWS.util.crypto.hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');\n    var cacheKey = [credsIdentifier, date, region, service].join('_');\n    shouldCache = shouldCache !== false;\n\n    if (shouldCache && cacheKey in cachedSecret) {\n      return cachedSecret[cacheKey];\n    }\n\n    var kDate = AWS.util.crypto.hmac('AWS4' + credentials.secretAccessKey, date, 'buffer');\n    var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');\n    var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');\n    var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');\n\n    if (shouldCache) {\n      cachedSecret[cacheKey] = signingKey;\n      cacheQueue.push(cacheKey);\n\n      if (cacheQueue.length > maxCacheEntries) {\n        // remove the oldest entry (not the least recently used)\n        delete cachedSecret[cacheQueue.shift()];\n      }\n    }\n\n    return signingKey;\n  },\n\n  /**\r\n   * @api private\r\n   *\r\n   * Empties the derived signing key cache. Made available for testing purposes\r\n   * only.\r\n   */\n  emptyCache: function emptyCache() {\n    cachedSecret = {};\n    cacheQueue = [];\n  }\n};","map":null,"metadata":{},"sourceType":"script"}