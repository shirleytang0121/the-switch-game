{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar BuildGameObject = require('../../../../src/gameobjects/BuildGameObject');\n\nvar BuildGameObjectAnimation = require('../../../../src/gameobjects/BuildGameObjectAnimation');\n\nvar GameObjectCreator = require('../../../../src/gameobjects/GameObjectCreator');\n\nvar GetAdvancedValue = require('../../../../src/utils/object/GetAdvancedValue');\n\nvar Sprite3D = require('./Sprite3D');\n/**\r\n * Creates a new Sprite3D Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Sprite3D Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#sprite3D\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Sprite3D} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('sprite3D', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var frame = GetAdvancedValue(config, 'frame', null);\n  var sprite = new Sprite3D(this.scene, 0, 0, key, frame);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  BuildGameObject(this.scene, sprite, config); //  Sprite specific config options:\n\n  BuildGameObjectAnimation(sprite, config);\n  return sprite;\n}); //  When registering a factory function 'this' refers to the GameObjectCreator context.","map":null,"metadata":{},"sourceType":"script"}