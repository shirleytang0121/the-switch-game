{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar Class = require('../../utils/Class');\n\nvar GetValue = require('../../utils/object/GetValue');\n/**\r\n * @typedef {object} FixedKeyControlConfig\r\n *\r\n * @property {Phaser.Cameras.Scene2D.Camera} [camera] - The Camera that this Control will update.\r\n * @property {Phaser.Input.Keyboard.Key} [left] - The Key to be pressed that will move the Camera left.\r\n * @property {Phaser.Input.Keyboard.Key} [right] - The Key to be pressed that will move the Camera right.\r\n * @property {Phaser.Input.Keyboard.Key} [up] - The Key to be pressed that will move the Camera up.\r\n * @property {Phaser.Input.Keyboard.Key} [down] - The Key to be pressed that will move the Camera down.\r\n * @property {Phaser.Input.Keyboard.Key} [zoomIn] - The Key to be pressed that will zoom the Camera in.\r\n * @property {Phaser.Input.Keyboard.Key} [zoomOut] - The Key to be pressed that will zoom the Camera out.\r\n * @property {number} [zoomSpeed=0.01] - The speed at which the camera will zoom if the `zoomIn` or `zoomOut` keys are pressed.\r\n * @property {(number|{x:number,y:number})} [speed=0] - The horizontal and vertical speed the camera will move.\r\n */\n\n/**\r\n * @classdesc\r\n * A Fixed Key Camera Control.\r\n *\r\n * This allows you to control the movement and zoom of a camera using the defined keys.\r\n *\r\n * ```javascript\r\n * var camControl = new FixedKeyControl({\r\n *     camera: this.cameras.main,\r\n *     left: cursors.left,\r\n *     right: cursors.right,\r\n *     speed: float OR { x: 0, y: 0 }\r\n * });\r\n * ```\r\n *\r\n * Movement is precise and has no 'smoothing' applied to it.\r\n *\r\n * You must call the `update` method of this controller every frame.\r\n *\r\n * @class FixedKeyControl\r\n * @memberof Phaser.Cameras.Controls\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {FixedKeyControlConfig} config - The Fixed Key Control configuration object.\r\n */\n\n\nvar FixedKeyControl = new Class({\n  initialize: function FixedKeyControl(config) {\n    /**\r\n     * The Camera that this Control will update.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#camera\r\n     * @type {?Phaser.Cameras.Scene2D.Camera}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n    this.camera = GetValue(config, 'camera', null);\n    /**\r\n     * The Key to be pressed that will move the Camera left.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#left\r\n     * @type {?Phaser.Input.Keyboard.Key}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n\n    this.left = GetValue(config, 'left', null);\n    /**\r\n     * The Key to be pressed that will move the Camera right.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#right\r\n     * @type {?Phaser.Input.Keyboard.Key}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n\n    this.right = GetValue(config, 'right', null);\n    /**\r\n     * The Key to be pressed that will move the Camera up.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#up\r\n     * @type {?Phaser.Input.Keyboard.Key}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n\n    this.up = GetValue(config, 'up', null);\n    /**\r\n     * The Key to be pressed that will move the Camera down.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#down\r\n     * @type {?Phaser.Input.Keyboard.Key}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n\n    this.down = GetValue(config, 'down', null);\n    /**\r\n     * The Key to be pressed that will zoom the Camera in.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#zoomIn\r\n     * @type {?Phaser.Input.Keyboard.Key}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n\n    this.zoomIn = GetValue(config, 'zoomIn', null);\n    /**\r\n     * The Key to be pressed that will zoom the Camera out.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#zoomOut\r\n     * @type {?Phaser.Input.Keyboard.Key}\r\n     * @default null\r\n     * @since 3.0.0\r\n     */\n\n    this.zoomOut = GetValue(config, 'zoomOut', null);\n    /**\r\n     * The speed at which the camera will zoom if the `zoomIn` or `zoomOut` keys are pressed.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#zoomSpeed\r\n     * @type {number}\r\n     * @default 0.01\r\n     * @since 3.0.0\r\n     */\n\n    this.zoomSpeed = GetValue(config, 'zoomSpeed', 0.01);\n    /**\r\n     * The horizontal speed the camera will move.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#speedX\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\n\n    this.speedX = 0;\n    /**\r\n     * The vertical speed the camera will move.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#speedY\r\n     * @type {number}\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\n\n    this.speedY = 0;\n    var speed = GetValue(config, 'speed', null);\n\n    if (typeof speed === 'number') {\n      this.speedX = speed;\n      this.speedY = speed;\n    } else {\n      this.speedX = GetValue(config, 'speed.x', 0);\n      this.speedY = GetValue(config, 'speed.y', 0);\n    }\n    /**\r\n     * Internal property to track the current zoom level.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#_zoom\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     * @since 3.0.0\r\n     */\n\n\n    this._zoom = 0;\n    /**\r\n     * A flag controlling if the Controls will update the Camera or not.\r\n     *\r\n     * @name Phaser.Cameras.Controls.FixedKeyControl#active\r\n     * @type {boolean}\r\n     * @since 3.0.0\r\n     */\n\n    this.active = this.camera !== null;\n  },\n\n  /**\r\n   * Starts the Key Control running, providing it has been linked to a camera.\r\n   *\r\n   * @method Phaser.Cameras.Controls.FixedKeyControl#start\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Cameras.Controls.FixedKeyControl} This Key Control instance.\r\n   */\n  start: function start() {\n    this.active = this.camera !== null;\n    return this;\n  },\n\n  /**\r\n   * Stops this Key Control from running. Call `start` to start it again.\r\n   *\r\n   * @method Phaser.Cameras.Controls.FixedKeyControl#stop\r\n   * @since 3.0.0\r\n   *\r\n   * @return {Phaser.Cameras.Controls.FixedKeyControl} This Key Control instance.\r\n   */\n  stop: function stop() {\n    this.active = false;\n    return this;\n  },\n\n  /**\r\n   * Binds this Key Control to a camera.\r\n   *\r\n   * @method Phaser.Cameras.Controls.FixedKeyControl#setCamera\r\n   * @since 3.0.0\r\n   *\r\n   * @param {Phaser.Cameras.Scene2D.Camera} camera - The camera to bind this Key Control to.\r\n   *\r\n   * @return {Phaser.Cameras.Controls.FixedKeyControl} This Key Control instance.\r\n   */\n  setCamera: function setCamera(camera) {\n    this.camera = camera;\n    return this;\n  },\n\n  /**\r\n   * Applies the results of pressing the control keys to the Camera.\r\n   *\r\n   * You must call this every step, it is not called automatically.\r\n   *\r\n   * @method Phaser.Cameras.Controls.FixedKeyControl#update\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} delta - The delta time in ms since the last frame. This is a smoothed and capped value based on the FPS rate.\r\n   */\n  update: function update(delta) {\n    if (!this.active) {\n      return;\n    }\n\n    if (delta === undefined) {\n      delta = 1;\n    }\n\n    var cam = this.camera;\n\n    if (this.up && this.up.isDown) {\n      cam.scrollY -= this.speedY * delta | 0;\n    } else if (this.down && this.down.isDown) {\n      cam.scrollY += this.speedY * delta | 0;\n    }\n\n    if (this.left && this.left.isDown) {\n      cam.scrollX -= this.speedX * delta | 0;\n    } else if (this.right && this.right.isDown) {\n      cam.scrollX += this.speedX * delta | 0;\n    } //  Camera zoom\n\n\n    if (this.zoomIn && this.zoomIn.isDown) {\n      cam.zoom -= this.zoomSpeed;\n\n      if (cam.zoom < 0.1) {\n        cam.zoom = 0.1;\n      }\n    } else if (this.zoomOut && this.zoomOut.isDown) {\n      cam.zoom += this.zoomSpeed;\n    }\n  },\n\n  /**\r\n   * Destroys this Key Control.\r\n   *\r\n   * @method Phaser.Cameras.Controls.FixedKeyControl#destroy\r\n   * @since 3.0.0\r\n   */\n  destroy: function destroy() {\n    this.camera = null;\n    this.left = null;\n    this.right = null;\n    this.up = null;\n    this.down = null;\n    this.zoomIn = null;\n    this.zoomOut = null;\n  }\n});\nmodule.exports = FixedKeyControl;","map":null,"metadata":{},"sourceType":"script"}