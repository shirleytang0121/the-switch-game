{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n//  bitmask flag for GameObject.renderMask\nvar _FLAG = 1; // 0001\n\n/**\r\n * Provides methods used for setting the visibility of a Game Object.\r\n * Should be applied as a mixin and not used directly.\r\n * \r\n * @name Phaser.GameObjects.Components.Visible\r\n * @since 3.0.0\r\n */\n\nvar Visible = {\n  /**\r\n   * Private internal value. Holds the visible value.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Visible#_visible\r\n   * @type {boolean}\r\n   * @private\r\n   * @default true\r\n   * @since 3.0.0\r\n   */\n  _visible: true,\n\n  /**\r\n   * The visible state of the Game Object.\r\n   * \r\n   * An invisible Game Object will skip rendering, but will still process update logic.\r\n   * \r\n   * @name Phaser.GameObjects.Components.Visible#visible\r\n   * @type {boolean}\r\n   * @since 3.0.0\r\n   */\n  visible: {\n    get: function get() {\n      return this._visible;\n    },\n    set: function set(value) {\n      if (value) {\n        this._visible = true;\n        this.renderFlags |= _FLAG;\n      } else {\n        this._visible = false;\n        this.renderFlags &= ~_FLAG;\n      }\n    }\n  },\n\n  /**\r\n   * Sets the visibility of this Game Object.\r\n   * \r\n   * An invisible Game Object will skip rendering, but will still process update logic.\r\n   *\r\n   * @method Phaser.GameObjects.Components.Visible#setVisible\r\n   * @since 3.0.0\r\n   *\r\n   * @param {boolean} value - The visible state of the Game Object.\r\n   * \r\n   * @return {this} This Game Object instance.\r\n   */\n  setVisible: function setVisible(value) {\n    this.visible = value;\n    return this;\n  }\n};\nmodule.exports = Visible;","map":null,"metadata":{},"sourceType":"script"}