{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar GameObjectCreator = require('../GameObjectCreator');\n\nvar GetAdvancedValue = require('../../utils/object/GetAdvancedValue');\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\n\nvar ParticleEmitterManager = require('./ParticleEmitterManager');\n/**\r\n * Creates a new Particle Emitter Manager Game Object and returns it.\r\n *\r\n * Note: This method will only be available if the Particles Game Object has been built into Phaser.\r\n *\r\n * @method Phaser.GameObjects.GameObjectCreator#particles\r\n * @since 3.0.0\r\n *\r\n * @param {object} config - The configuration object this Game Object will use to create itself.\r\n * @param {boolean} [addToScene] - Add this Game Object to the Scene after creating it? If set this argument overrides the `add` property in the config object.\r\n *\r\n * @return {Phaser.GameObjects.Particles.ParticleEmitterManager} The Game Object that was created.\r\n */\n\n\nGameObjectCreator.register('particles', function (config, addToScene) {\n  if (config === undefined) {\n    config = {};\n  }\n\n  var key = GetAdvancedValue(config, 'key', null);\n  var frame = GetAdvancedValue(config, 'frame', null);\n  var emitters = GetFastValue(config, 'emitters', null); //  frame is optional and can contain the emitters array or object if skipped\n\n  var manager = new ParticleEmitterManager(this.scene, key, frame, emitters);\n\n  if (addToScene !== undefined) {\n    config.add = addToScene;\n  }\n\n  var add = GetFastValue(config, 'add', false);\n\n  if (add) {\n    this.displayList.add(manager);\n  }\n\n  this.updateList.add(manager);\n  return manager;\n});","map":null,"metadata":{},"sourceType":"script"}