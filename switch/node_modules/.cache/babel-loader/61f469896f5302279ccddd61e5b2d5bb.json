{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar HexStringToColor = require('./HexStringToColor');\n\nvar IntegerToColor = require('./IntegerToColor');\n\nvar ObjectToColor = require('./ObjectToColor');\n\nvar RGBStringToColor = require('./RGBStringToColor');\n/**\r\n * Converts the given source color value into an instance of a Color class.\r\n * The value can be either a string, prefixed with `rgb` or a hex string, a number or an Object.\r\n *\r\n * @function Phaser.Display.Color.ValueToColor\r\n * @since 3.0.0\r\n *\r\n * @param {(string|number|InputColorObject)} input - The source color value to convert.\r\n *\r\n * @return {Phaser.Display.Color} A Color object.\r\n */\n\n\nvar ValueToColor = function ValueToColor(input) {\n  var t = typeof input;\n\n  switch (t) {\n    case 'string':\n      if (input.substr(0, 3).toLowerCase() === 'rgb') {\n        return RGBStringToColor(input);\n      } else {\n        return HexStringToColor(input);\n      }\n\n    case 'number':\n      return IntegerToColor(input);\n\n    case 'object':\n      return ObjectToColor(input);\n  }\n};\n\nmodule.exports = ValueToColor;","map":null,"metadata":{},"sourceType":"script"}