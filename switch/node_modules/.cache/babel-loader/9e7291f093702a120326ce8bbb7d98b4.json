{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar StarRender = require('./StarRender');\n\nvar Class = require('../../../utils/Class');\n\nvar Earcut = require('../../../geom/polygon/Earcut');\n\nvar Shape = require('../Shape');\n/**\r\n * @classdesc\r\n * The Star Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports both fill and stroke colors.\r\n * \r\n * As the name implies, the Star shape will display a star in your game. You can control several\r\n * aspects of it including the number of points that constitute the star. The default is 5. If\r\n * you change it to 4 it will render as a diamond. If you increase them, you'll get a more spiky\r\n * star shape.\r\n * \r\n * You can also control the inner and outer radius, which is how 'long' each point of the star is.\r\n * Modify these values to create more interesting shapes.\r\n *\r\n * @class Star\r\n * @extends Phaser.GameObjects.Shape\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.13.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {number} [points=5] - The number of points on the star.\r\n * @param {number} [innerRadius=32] - The inner radius of the star.\r\n * @param {number} [outerRadius=64] - The outer radius of the star.\r\n * @param {number} [fillColor] - The color the star will be filled with, i.e. 0xff0000 for red.\r\n * @param {number} [fillAlpha] - The alpha the star will be filled with. You can also set the alpha of the overall Shape using its `alpha` property.\r\n */\n\n\nvar Star = new Class({\n  Extends: Shape,\n  Mixins: [StarRender],\n  initialize: function Star(scene, x, y, points, innerRadius, outerRadius, fillColor, fillAlpha) {\n    if (x === undefined) {\n      x = 0;\n    }\n\n    if (y === undefined) {\n      y = 0;\n    }\n\n    if (points === undefined) {\n      points = 5;\n    }\n\n    if (innerRadius === undefined) {\n      innerRadius = 32;\n    }\n\n    if (outerRadius === undefined) {\n      outerRadius = 64;\n    }\n\n    Shape.call(this, scene, 'Star', null);\n    /**\r\n     * Private internal value.\r\n     * The number of points in the star.\r\n     *\r\n     * @name Phaser.GameObjects.Star#_points\r\n     * @type {integer}\r\n     * @private\r\n     * @since 3.13.0\r\n     */\n\n    this._points = points;\n    /**\r\n     * Private internal value.\r\n     * The inner radius of the star.\r\n     *\r\n     * @name Phaser.GameObjects.Star#_innerRadius\r\n     * @type {number}\r\n     * @private\r\n     * @since 3.13.0\r\n     */\n\n    this._innerRadius = innerRadius;\n    /**\r\n     * Private internal value.\r\n     * The outer radius of the star.\r\n     *\r\n     * @name Phaser.GameObjects.Star#_outerRadius\r\n     * @type {number}\r\n     * @private\r\n     * @since 3.13.0\r\n     */\n\n    this._outerRadius = outerRadius;\n    this.setPosition(x, y);\n    this.setSize(outerRadius * 2, outerRadius * 2);\n\n    if (fillColor !== undefined) {\n      this.setFillStyle(fillColor, fillAlpha);\n    }\n\n    this.updateDisplayOrigin();\n    this.updateData();\n  },\n\n  /**\r\n   * Sets the number of points that make up the Star shape.\r\n   * This call can be chained.\r\n   *\r\n   * @method Phaser.GameObjects.Star#setPoints\r\n   * @since 3.13.0\r\n   * \r\n   * @param {integer} value - The amount of points the Star will have.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setPoints: function setPoints(value) {\n    this._points = value;\n    return this.updateData();\n  },\n\n  /**\r\n   * Sets the inner radius of the Star shape.\r\n   * This call can be chained.\r\n   *\r\n   * @method Phaser.GameObjects.Star#setInnerRadius\r\n   * @since 3.13.0\r\n   * \r\n   * @param {number} value - The amount to set the inner radius to.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setInnerRadius: function setInnerRadius(value) {\n    this._innerRadius = value;\n    return this.updateData();\n  },\n\n  /**\r\n   * Sets the outer radius of the Star shape.\r\n   * This call can be chained.\r\n   *\r\n   * @method Phaser.GameObjects.Star#setOuterRadius\r\n   * @since 3.13.0\r\n   * \r\n   * @param {number} value - The amount to set the outer radius to.\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  setOuterRadius: function setOuterRadius(value) {\n    this._outerRadius = value;\n    return this.updateData();\n  },\n\n  /**\r\n   * The number of points that make up the Star shape.\r\n   *\r\n   * @name Phaser.GameObjects.Star#points\r\n   * @type {integer}\r\n   * @default 5\r\n   * @since 3.13.0\r\n   */\n  points: {\n    get: function get() {\n      return this._points;\n    },\n    set: function set(value) {\n      this._points = value;\n      this.updateData();\n    }\n  },\n\n  /**\r\n   * The inner radius of the Star shape.\r\n   *\r\n   * @name Phaser.GameObjects.Star#innerRadius\r\n   * @type {number}\r\n   * @default 32\r\n   * @since 3.13.0\r\n   */\n  innerRadius: {\n    get: function get() {\n      return this._innerRadius;\n    },\n    set: function set(value) {\n      this._innerRadius = value;\n      this.updateData();\n    }\n  },\n\n  /**\r\n   * The outer radius of the Star shape.\r\n   *\r\n   * @name Phaser.GameObjects.Star#outerRadius\r\n   * @type {number}\r\n   * @default 64\r\n   * @since 3.13.0\r\n   */\n  outerRadius: {\n    get: function get() {\n      return this._outerRadius;\n    },\n    set: function set(value) {\n      this._outerRadius = value;\n      this.updateData();\n    }\n  },\n\n  /**\r\n   * Internal method that updates the data and path values.\r\n   *\r\n   * @method Phaser.GameObjects.Star#updateData\r\n   * @private\r\n   * @since 3.13.0\r\n   *\r\n   * @return {this} This Game Object instance.\r\n   */\n  updateData: function updateData() {\n    var path = [];\n    var points = this._points;\n    var innerRadius = this._innerRadius;\n    var outerRadius = this._outerRadius;\n    var rot = Math.PI / 2 * 3;\n    var step = Math.PI / points; //  So origin 0.5 = the center of the star\n\n    var x = outerRadius;\n    var y = outerRadius;\n    path.push(x, y + -outerRadius);\n\n    for (var i = 0; i < points; i++) {\n      path.push(x + Math.cos(rot) * outerRadius, y + Math.sin(rot) * outerRadius);\n      rot += step;\n      path.push(x + Math.cos(rot) * innerRadius, y + Math.sin(rot) * innerRadius);\n      rot += step;\n    }\n\n    path.push(x, y + -outerRadius);\n    this.pathIndexes = Earcut(path);\n    this.pathData = path;\n    return this;\n  }\n});\nmodule.exports = Star;","map":null,"metadata":{},"sourceType":"script"}