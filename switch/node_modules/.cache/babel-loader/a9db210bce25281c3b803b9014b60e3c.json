{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * Sets a global collision callback for the given tile index within the layer. This will affect all\r\n * tiles on this layer that have the same index. If a callback is already set for the tile index it\r\n * will be replaced. Set the callback to null to remove it. If you want to set a callback for a tile\r\n * at a specific location on the map then see setTileLocationCallback.\r\n *\r\n * @function Phaser.Tilemaps.Components.SetTileIndexCallback\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {(integer|array)} indexes - Either a single tile index, or an array of tile indexes to have a collision callback set for.\r\n * @param {function} callback - The callback that will be invoked when the tile is collided with.\r\n * @param {object} callbackContext - The context under which the callback is called.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n */\nvar SetTileIndexCallback = function SetTileIndexCallback(indexes, callback, callbackContext, layer) {\n  if (typeof indexes === 'number') {\n    layer.callbacks[indexes] = callback !== null ? {\n      callback: callback,\n      callbackContext: callbackContext\n    } : undefined;\n  } else {\n    for (var i = 0, len = indexes.length; i < len; i++) {\n      layer.callbacks[indexes[i]] = callback !== null ? {\n        callback: callback,\n        callbackContext: callbackContext\n      } : undefined;\n    }\n  }\n};\n\nmodule.exports = SetTileIndexCallback;","map":null,"metadata":{},"sourceType":"script"}