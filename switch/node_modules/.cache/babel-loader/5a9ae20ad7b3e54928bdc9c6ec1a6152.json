{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar SpliceOne = require('./SpliceOne');\n/**\r\n * Removes the item from the given position in the array.\r\n * \r\n * The array is modified in-place.\r\n * \r\n * You can optionally specify a callback to be invoked for the item if it is successfully removed from the array.\r\n *\r\n * @function Phaser.Utils.Array.RemoveAt\r\n * @since 3.4.0\r\n *\r\n * @param {array} array - The array to be modified.\r\n * @param {integer} index - The array index to remove the item from. The index must be in bounds or it will throw an error.\r\n * @param {function} [callback] - A callback to be invoked for the item removed from the array.\r\n * @param {object} [context] - The context in which the callback is invoked.\r\n *\r\n * @return {*} The item that was removed.\r\n */\n\n\nvar RemoveAt = function RemoveAt(array, index, callback, context) {\n  if (context === undefined) {\n    context = array;\n  }\n\n  if (index < 0 || index > array.length - 1) {\n    throw new Error('Index out of bounds');\n  }\n\n  var item = SpliceOne(array, index);\n\n  if (callback) {\n    callback.call(context, item);\n  }\n\n  return item;\n};\n\nmodule.exports = RemoveAt;","map":null,"metadata":{},"sourceType":"script"}