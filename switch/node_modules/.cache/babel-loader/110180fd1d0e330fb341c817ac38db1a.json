{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\nvar TileToWorldX = require('./TileToWorldX');\n\nvar TileToWorldY = require('./TileToWorldY');\n\nvar Vector2 = require('../../math/Vector2');\n/**\r\n * Converts from tile XY coordinates (tile units) to world XY coordinates (pixels), factoring in the\r\n * layer's position, scale and scroll. This will return a new Vector2 object or update the given\r\n * `point` object.\r\n *\r\n * @function Phaser.Tilemaps.Components.TileToWorldXY\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {integer} tileX - The x coordinate, in tiles, not pixels.\r\n * @param {integer} tileY - The y coordinate, in tiles, not pixels.\r\n * @param {Phaser.Math.Vector2} [point] - A Vector2 to store the coordinates in. If not given a new Vector2 is created.\r\n * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when calculating the tile index from the world values.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {Phaser.Math.Vector2} The XY location in world coordinates.\r\n */\n\n\nvar TileToWorldXY = function TileToWorldXY(tileX, tileY, point, camera, layer) {\n  if (point === undefined) {\n    point = new Vector2(0, 0);\n  }\n\n  point.x = TileToWorldX(tileX, camera, layer);\n  point.y = TileToWorldY(tileY, camera, layer);\n  return point;\n};\n\nmodule.exports = TileToWorldXY;","map":null,"metadata":{},"sourceType":"script"}