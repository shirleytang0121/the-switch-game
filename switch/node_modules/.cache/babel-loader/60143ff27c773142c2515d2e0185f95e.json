{"ast":null,"code":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\n\n/**\r\n * The Impact Friction component.\r\n * Should be applied as a mixin.\r\n *\r\n * @name Phaser.Physics.Impact.Components.Friction\r\n * @since 3.0.0\r\n */\nvar Friction = {\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Friction#setFrictionX\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFrictionX: function setFrictionX(x) {\n    this.friction.x = x;\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Friction#setFrictionY\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} y - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFrictionY: function setFrictionY(y) {\n    this.friction.y = y;\n    return this;\n  },\n\n  /**\r\n   * [description]\r\n   *\r\n   * @method Phaser.Physics.Impact.Components.Friction#setFriction\r\n   * @since 3.0.0\r\n   *\r\n   * @param {number} x - [description]\r\n   * @param {number} y - [description]\r\n   *\r\n   * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n   */\n  setFriction: function setFriction(x, y) {\n    this.friction.x = x;\n    this.friction.y = y;\n    return this;\n  }\n};\nmodule.exports = Friction;","map":null,"metadata":{},"sourceType":"script"}